const t='{"documentCount":274,"nextId":274,"documentIds":{"0":"/article/t9ghyrme/","1":"/article/t9ghyrme/#二、统计cpu使用情况","2":"/article/lt193jaj/","3":"/article/mysf7tdo/","4":"/article/t9ghyrme/#三、平均负载统计分析","5":"/article/lt193jaj/#_1-数组","6":"/article/rk3ujhm2/","7":"/article/mysf7tdo/#红黑树为何必须掌握","8":"/article/t9ghyrme/#四、内存统计分析","9":"/article/lt193jaj/#_2-链表","10":"/article/rk3ujhm2/#设计模式的诞生与发展","11":"/article/eohcr138/","12":"/article/mysf7tdo/#bst-二叉搜索树","13":"/article/t9ghyrme/#五、统计swap分区","14":"/article/lt193jaj/#_2-1-链表简介","15":"/article/rk3ujhm2/#模式的诞生与定义","16":"/article/eohcr138/#面向对象的设计原则概述","17":"/article/bsfj07xm/","18":"/article/mysf7tdo/#什么是二叉搜索树呢","19":"/article/t9ghyrme/#六、查看磁盘io","20":"/article/lt193jaj/#_2-2-链表分类","21":"/article/rk3ujhm2/#设计模式的定义与分类","22":"/article/eohcr138/#单一职责原则","23":"/article/bsfj07xm/#创建型模式","24":"/article/rgkxahf5/","25":"/article/mysf7tdo/#二叉搜索树-bst-的完美情况","26":"/article/t9ghyrme/#七、查看磁盘使用情况","27":"/article/lt193jaj/#_2-2-1-单链表","28":"/article/rk3ujhm2/#设计模式的定义","29":"/article/eohcr138/#开闭原则","30":"/article/bsfj07xm/#简单工厂模式概述","31":"/article/rgkxahf5/#工厂方法模式概述","32":"/article/9nkoi5wf/","33":"/article/mysf7tdo/#二叉搜索树的查找流程","34":"/article/t9ghyrme/#八、网络使用分析","35":"/article/lt193jaj/#_2-2-2-循环链表","36":"/article/rk3ujhm2/#设计模式的分类","37":"/article/eohcr138/#里氏代换原则","38":"/article/bsfj07xm/#简单工厂模式结构","39":"/article/rgkxahf5/#工厂方法模式结构","40":"/article/9nkoi5wf/#产品等级结构和产品族","41":"/article/dqqpfydi/","42":"/article/mysf7tdo/#二叉搜索树的极端情况","43":"/article/t9ghyrme/#九、进程-文件状态","44":"/article/lt193jaj/#_2-2-3-双向链表","45":"/article/rk3ujhm2/#gof-设计模式简介","46":"/article/eohcr138/#依赖倒转原则","47":"/article/bsfj07xm/#简单工厂模式实现","48":"/article/rgkxahf5/#工厂方法模式实现","49":"/article/9nkoi5wf/#抽象工厂模式概述","50":"/article/dqqpfydi/#创造者模式概述","51":"/article/avjuo0xw/","52":"/article/mysf7tdo/#avl-平衡二叉树","53":"/article/t9ghyrme/#十、常用命令","54":"/article/lt193jaj/#_2-2-4-双向循环链表","55":"/article/rk3ujhm2/#gof-的-23-种模式一览表","56":"/article/eohcr138/#接口隔离原则","57":"/article/bsfj07xm/#举个例子","58":"/article/rgkxahf5/#举个例子","59":"/article/9nkoi5wf/#抽象工厂模式结构","60":"/article/dqqpfydi/#建造者模式结构","61":"/article/i3x4msg7/","62":"/article/mysf7tdo/#avl-树的特性","63":"/article/lt193jaj/#_2-3-应用场景","64":"/article/rk3ujhm2/#gof-的-23-种设计模式的简要说明","65":"/article/eohcr138/#合成复用原则","66":"/article/bsfj07xm/#实例说明","67":"/article/rgkxahf5/#实例说明","68":"/article/9nkoi5wf/#抽象工厂模式实现","69":"/article/dqqpfydi/#建造者模式实现","70":"/article/i3x4msg7/#flink是什么","71":"/demo/","72":"/article/mysf7tdo/#avl-树的平衡功能","73":"/article/lt193jaj/#_2-4-数组-vs-链表","74":"/article/rk3ujhm2/#设计模式的优点","75":"/article/eohcr138/#迪米特法则","76":"/article/bsfj07xm/#实例类图","77":"/article/rgkxahf5/#实例类图","78":"/article/9nkoi5wf/#抽象工厂模式应用实例","79":"/article/dqqpfydi/#建造者模式应用实例","80":"/article/i3x4msg7/#为什么选择flink","81":"/demo/6kjtxb7k/","82":"/article/mysf7tdo/#avl-平衡的调整过程","83":"/demo/8pvv4axs/","84":"/article/lt193jaj/#_3-栈","85":"/article/bsfj07xm/#实例代码","86":"/article/rgkxahf5/#实例代码","87":"/article/9nkoi5wf/#实例说明","88":"/article/dqqpfydi/#实例说明","89":"/article/i3x4msg7/#流数据适用场景","90":"/article/mysf7tdo/#avl-子树失衡的四大场景","91":"/article/lt193jaj/#_3-1-栈简介","92":"/article/bsfj07xm/#结果及分析","93":"/article/rgkxahf5/#结果及分析","94":"/article/9nkoi5wf/#实力类图","95":"/article/dqqpfydi/#实例类图","96":"/article/i3x4msg7/#传统数据处理架构","97":"/article/mysf7tdo/#场景1-ll-型失衡-左左结构失衡-右旋","98":"/article/lt193jaj/#_3-2-栈的常见应用常见应用场景","99":"/article/bsfj07xm/#简单工厂模式的简化","100":"/article/rgkxahf5/#反射机制与配置文件","101":"/article/9nkoi5wf/#实例代码","102":"/article/dqqpfydi/#实例代码","103":"/article/i3x4msg7/#有状态的流式处理","104":"/article/mysf7tdo/#记忆要点","105":"/article/lt193jaj/#_3-2-1-实现浏览器的回退和前进功能","106":"/article/bsfj07xm/#简单工厂模式优-缺点与适应环境","107":"/article/rgkxahf5/#工厂方法的重载","108":"/article/9nkoi5wf/#结果及分析","109":"/article/dqqpfydi/#结果及分析","110":"/article/i3x4msg7/#流处理的演变","111":"/article/mysf7tdo/#场景2-rr-型失衡-右右结构失衡-左旋","112":"/article/lt193jaj/#_3-2-2-检查符号是否成对出现","113":"/article/bsfj07xm/#优点","114":"/article/rgkxahf5/#工厂方法的隐藏","115":"/article/9nkoi5wf/#开闭原则的倾斜性","116":"/article/dqqpfydi/#指挥者类的深入讨论","117":"/article/i3x4msg7/#flink主要特点","118":"/article/mysf7tdo/#记忆要点-1","119":"/article/lt193jaj/#_3-2-3-反转字符串","120":"/article/bsfj07xm/#缺点","121":"/article/rgkxahf5/#工厂方面模式优-缺点与适应环境","122":"/article/9nkoi5wf/#抽象工厂模式优-缺点与使用环境","123":"/article/dqqpfydi/#省略-director","124":"/article/i3x4msg7/#flink的其它特点","125":"/article/mysf7tdo/#场景3-lr-型失衡-左右结构失衡-左旋-右旋","126":"/article/lt193jaj/#_3-2-4-维护函数调用","127":"/article/bsfj07xm/#适用环境","128":"/article/rgkxahf5/#工厂方法模式优点","129":"/article/9nkoi5wf/#抽象工厂模式优点","130":"/article/dqqpfydi/#钩子方法的引入","131":"/article/i3x4msg7/#flink-vs-spark-streaming","132":"/article/mysf7tdo/#记忆要点-2","133":"/article/lt193jaj/#_3-3-栈的实现","134":"/article/rgkxahf5/#工厂方法模式的缺点","135":"/article/9nkoi5wf/#抽象工厂模式缺点","136":"/article/dqqpfydi/#建造者模式优点","137":"/article/i3x4msg7/#flink部署","138":"/article/mysf7tdo/#场景4-rl-失衡-右左结构-右旋-左旋","139":"/article/lt193jaj/#_4-队列","140":"/article/rgkxahf5/#工厂方法模式适用环境","141":"/article/9nkoi5wf/#抽象工厂模式适用环境","142":"/article/dqqpfydi/#建造者模式缺点","143":"/article/i3x4msg7/#standalone模式","144":"/article/mysf7tdo/#记忆要点-3","145":"/article/lt193jaj/#_4-1-队列简介","146":"/article/dqqpfydi/#建造者模式适用环境","147":"/article/i3x4msg7/#yarn模式","148":"/article/mysf7tdo/#avl-树平衡总结","149":"/article/lt193jaj/#_4-2-队列分类","150":"/article/i3x4msg7/#kubernetes部署","151":"/article/mysf7tdo/#avl树的删除","152":"/article/lt193jaj/#_4-2-1-单队列","153":"/article/i3x4msg7/#运行时架构","154":"/article/mysf7tdo/#常见avl面试题","155":"/article/lt193jaj/#_4-2-2-循环队列","156":"/article/i3x4msg7/#flink运行时组件","157":"/article/mysf7tdo/#问-什么是avl左旋和右旋","158":"/article/lt193jaj/#_4-3-常见应用场景","159":"/article/i3x4msg7/#jobmanager","160":"/article/mysf7tdo/#avl树的问题","161":"/article/lt193jaj/#_5-图","162":"/article/i3x4msg7/#taskmanager","163":"/article/mysf7tdo/#红黑树-rbtree","164":"/article/lt193jaj/#图的基本概念","165":"/article/i3x4msg7/#resourcemanager","166":"/article/mysf7tdo/#什么是红黑树","167":"/article/lt193jaj/#顶点","168":"/article/i3x4msg7/#dispacher","169":"/article/mysf7tdo/#红黑树的特性","170":"/article/lt193jaj/#边","171":"/article/i3x4msg7/#任务提交流程","172":"/article/mysf7tdo/#黑色完美平衡","173":"/article/lt193jaj/#度","174":"/article/i3x4msg7/#任务提交流程-yarn","175":"/article/mysf7tdo/#红黑树恢复平衡过程的三个操作","176":"/article/lt193jaj/#无向图和有向图","177":"/article/i3x4msg7/#【重点】-单作业-per-job-模式","178":"/article/mysf7tdo/#_1-变色","179":"/article/lt193jaj/#无权图和带权图","180":"/article/i3x4msg7/#任务调度原理","181":"/article/mysf7tdo/#_2-左旋","182":"/article/lt193jaj/#图的存储","183":"/article/i3x4msg7/#并行度-parallelism","184":"/article/mysf7tdo/#_3-右旋","185":"/article/lt193jaj/#邻接矩阵存储","186":"/article/i3x4msg7/#taskmanager-1","187":"/article/mysf7tdo/#红黑树插入节点情景分析","188":"/article/lt193jaj/#邻接表存储","189":"/article/i3x4msg7/#slots","190":"/article/mysf7tdo/#红黑树的节点结构","191":"/article/lt193jaj/#图的搜索","192":"/article/i3x4msg7/#程序与数据流-dataflow","193":"/article/mysf7tdo/#场景1-红黑树为空树","194":"/article/lt193jaj/#广度优先搜索","195":"/article/i3x4msg7/#执行流图-executiongraph","196":"/article/mysf7tdo/#场景2-插入节点的-key-已经存在","197":"/article/lt193jaj/#深度优先搜索","198":"/article/i3x4msg7/#数据传输形式","199":"/article/mysf7tdo/#场景3-插入节点的父节点为黑色","200":"/article/i3x4msg7/#任务链-operationn-chains","201":"/article/mysf7tdo/#场景4-插入节点的父节点为红色","202":"/article/i3x4msg7/#flink流处理api","203":"/article/mysf7tdo/#场景4-1-父节点和叔叔节点都为红色","204":"/article/i3x4msg7/#_1、environment","205":"/article/mysf7tdo/#场景4-2-叔叔节点为黑色-父节点为红色-并且插在父节点的左子节点","206":"/article/i3x4msg7/#_2、source","207":"/article/mysf7tdo/#场景4-2-1-ll-型失衡","208":"/article/i3x4msg7/#_3、transform","209":"/article/mysf7tdo/#场景4-2-2-lr-型失衡","210":"/article/i3x4msg7/#_3-1-map","211":"/article/mysf7tdo/#场景4-3-叔叔为黑色-父节点为红色-并且父节点是祖父节点的右子节点","212":"/article/i3x4msg7/#_3-2-flatmap","213":"/article/mysf7tdo/#场景4-3-1-rr-型失衡","214":"/article/i3x4msg7/#_3-3-filter","215":"/article/mysf7tdo/#场景4-3-2-rl-型失衡","216":"/article/i3x4msg7/#_3-4-keyby","217":"/article/mysf7tdo/#红黑树面试题","218":"/article/i3x4msg7/#_3-5-滚动聚合算子","219":"/article/mysf7tdo/#有了二叉搜索树-为什么还需要平衡二叉树","220":"/article/i3x4msg7/#_3-6-reduce","221":"/article/mysf7tdo/#有了平衡二叉树-为什么还需要红黑树","222":"/article/i3x4msg7/#_3-7-split和select","223":"/article/mysf7tdo/#红黑树那几个原则-你还记得吗","224":"/article/i3x4msg7/#_3-8-connect和comap","225":"/article/mysf7tdo/#红黑树写入操作-是如何找到他的父节点的","226":"/article/i3x4msg7/#_3-9-union","227":"/article/mysf7tdo/#红黑树有哪些内部操作","228":"/article/i3x4msg7/#支持的数据类型","229":"/article/mysf7tdo/#红黑树与-avl-树的区别","230":"/article/i3x4msg7/#实现udf函数-更细粒度的控制流","231":"/article/i3x4msg7/#_1、函数类-function-classes","232":"/article/i3x4msg7/#_2、匿名函数-lambda-function","233":"/article/i3x4msg7/#_3、富函数-rich-function","234":"/article/i3x4msg7/#sink","235":"/article/i3x4msg7/#flink-中的-window","236":"/article/i3x4msg7/#window-概述","237":"/article/i3x4msg7/#window-类型","238":"/article/i3x4msg7/#window-api","239":"/article/i3x4msg7/#window-function","240":"/article/i3x4msg7/#时间语义与-wartermark","241":"/article/i3x4msg7/#flink-中的时间语义","242":"/article/i3x4msg7/#eventtime-的引入","243":"/article/i3x4msg7/#watermark","244":"/article/i3x4msg7/#wm特点","245":"/article/i3x4msg7/#wm的传递","246":"/article/i3x4msg7/#wm的引入","247":"/article/i3x4msg7/#wm的设定","248":"/article/i3x4msg7/#断点式生成","249":"/article/i3x4msg7/#周期性生成","250":"/article/i3x4msg7/#窗口起始点","251":"/article/i3x4msg7/#偏移量","252":"/article/i3x4msg7/#processfunction-api-底层-api","253":"/article/i3x4msg7/#keyedprocessfunction","254":"/article/i3x4msg7/#flink状态管理","255":"/article/i3x4msg7/#状态","256":"/article/i3x4msg7/#算子状态","257":"/article/i3x4msg7/#键控状态","258":"/article/i3x4msg7/#状态后端-state-backends","259":"/article/i3x4msg7/#选择一个状态后端","260":"/article/i3x4msg7/#flink容错机制","261":"/article/i3x4msg7/#一致性检查点-checkpoints","262":"/article/i3x4msg7/#从检查点恢复状态","263":"/article/i3x4msg7/#检查点的实现算法","264":"/article/i3x4msg7/#检查点分界线-checkpoint-barrier","265":"/article/i3x4msg7/#flink检查点算法","266":"/article/i3x4msg7/#保存点","267":"/article/i3x4msg7/#flink状态一致性","268":"/article/i3x4msg7/#分类","269":"/article/i3x4msg7/#一致性检查点","270":"/article/i3x4msg7/#端到端-end-to-end-状态一致性","271":"/article/i3x4msg7/#wal","272":"/article/i3x4msg7/#_2pc","273":"/article/i3x4msg7/#flink-kafka端到端状态一致性特征"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[7,1,100],"1":[2,1,77],"2":[2,1,1],"3":[2,1,1],"4":[2,1,53],"5":[2,2,36],"6":[2,1,1],"7":[1,2,24],"8":[2,1,64],"9":[2,2,1],"10":[1,2,1],"11":[2,1,1],"12":[2,2,1],"13":[2,1,41],"14":[3,4,21],"15":[1,3,63],"16":[1,2,63],"17":[2,1,1],"18":[2,4,8],"19":[2,1,46],"20":[2,4,14],"21":[1,3,1],"22":[1,2,41],"23":[1,2,48],"24":[2,1,1],"25":[3,4,7],"26":[2,1,73],"27":[3,5,16],"28":[1,4,64],"29":[1,2,28],"30":[1,2,25],"31":[1,2,47],"32":[2,1,1],"33":[1,4,16],"34":[2,1,153],"35":[2,5,6],"36":[1,4,12],"37":[1,2,59],"38":[1,2,28],"39":[1,2,33],"40":[1,2,25],"41":[2,1,1],"42":[1,4,36],"43":[3,1,129],"44":[3,5,8],"45":[2,2,1],"46":[1,2,75],"47":[1,2,62],"48":[1,2,41],"49":[1,2,44],"50":[1,2,28],"51":[2,1,1],"52":[2,2,27],"53":[2,1,81],"54":[3,5,11],"55":[4,4,33],"56":[1,2,33],"57":[1,2,1],"58":[1,2,1],"59":[1,2,27],"60":[1,2,48],"61":[2,1,1],"62":[2,4,38],"63":[3,4,10],"64":[4,4,123],"65":[1,2,36],"66":[2,3,17],"67":[1,3,22],"68":[1,2,29],"69":[1,2,119],"70":[1,2,4],"71":[1,1,3],"72":[2,4,12],"73":[5,4,13],"74":[1,2,15],"75":[1,2,73],"76":[1,3,13],"77":[1,3,16],"78":[1,2,1],"79":[1,2,1],"80":[1,2,7],"81":[1,1,2],"82":[2,4,27],"83":[1,1,2],"84":[2,2,1],"85":[1,3,54],"86":[1,3,50],"87":[1,3,22],"88":[1,3,34],"89":[1,2,15],"90":[2,2,21],"91":[3,4,34],"92":[1,3,22],"93":[1,3,11],"94":[1,3,3],"95":[1,3,4],"96":[1,2,10],"97":[6,4,22],"98":[3,4,11],"99":[1,2,7],"100":[1,2,170],"101":[1,3,118],"102":[1,3,171],"103":[1,2,1],"104":[1,10,9],"105":[4,6,27],"106":[2,2,1],"107":[1,2,42],"108":[1,3,13],"109":[1,3,18],"110":[1,2,5],"111":[6,4,21],"112":[3,6,66],"113":[1,4,9],"114":[1,2,34],"115":[1,2,28],"116":[1,2,15],"117":[1,2,15],"118":[1,10,11],"119":[3,6,2],"120":[1,4,11],"121":[2,2,1],"122":[2,2,7],"123":[2,3,69],"124":[1,2,19],"125":[6,4,3],"126":[4,6,10],"127":[1,4,5],"128":[1,4,16],"129":[1,4,12],"130":[1,3,85],"131":[4,2,16],"132":[1,10,16],"133":[2,4,89],"134":[1,4,11],"135":[1,4,6],"136":[2,2,10],"137":[1,2,1],"138":[6,4,3],"139":[2,2,1],"140":[1,4,3],"141":[1,4,14],"142":[2,2,11],"143":[1,3,1],"144":[1,10,18],"145":[3,4,33],"146":[1,2,10],"147":[1,3,13],"148":[2,4,49],"149":[3,4,1],"150":[1,3,2],"151":[1,4,32],"152":[4,6,50],"153":[1,2,1],"154":[1,2,1],"155":[3,6,41],"156":[1,3,1],"157":[3,3,27],"158":[3,4,47],"159":[2,4,29],"160":[1,3,36],"161":[2,2,27],"162":[2,4,13],"163":[3,2,24],"164":[1,2,1],"165":[2,4,12],"166":[2,4,25],"167":[1,3,7],"168":[2,4,10],"169":[1,4,65],"170":[1,3,5],"171":[1,4,1],"172":[1,4,25],"173":[1,3,8],"174":[3,4,1],"175":[1,2,10],"176":[1,3,28],"177":[6,7,24],"178":[2,3,2],"179":[1,3,13],"180":[1,4,21],"181":[2,3,11],"182":[1,2,1],"183":[3,5,5],"184":[2,3,17],"185":[1,3,38],"186":[1,5,5],"187":[1,2,1],"188":[1,3,27],"189":[1,5,12],"190":[1,3,50],"191":[1,2,1],"192":[3,4,6],"193":[2,3,6],"194":[1,3,14],"195":[3,4,15],"196":[4,3,2],"197":[1,3,20],"198":[1,4,19],"199":[2,3,6],"200":[4,4,8],"201":[2,3,15],"202":[1,2,1],"203":[3,5,35],"204":[2,3,8],"205":[5,5,14],"206":[2,3,22],"207":[5,8,17],"208":[2,3,1],"209":[4,8,19],"210":[3,5,2],"211":[5,5,1],"212":[3,5,2],"213":[5,9,14],"214":[2,5,2],"215":[5,9,15],"216":[3,5,7],"217":[2,2,1],"218":[3,5,6],"219":[3,4,12],"220":[3,5,9],"221":[3,4,26],"222":[3,5,9],"223":[3,4,15],"224":[3,5,15],"225":[3,4,92],"226":[3,5,5],"227":[1,4,7],"228":[1,3,20],"229":[3,4,57],"230":[2,3,1],"231":[5,5,2],"232":[5,5,1],"233":[5,5,22],"234":[1,3,1],"235":[3,2,1],"236":[2,5,3],"237":[2,5,35],"238":[2,5,3],"239":[2,5,32],"240":[2,2,1],"241":[2,4,17],"242":[2,4,10],"243":[1,4,6],"244":[1,4,6],"245":[1,4,9],"246":[1,4,12],"247":[1,4,7],"248":[2,5,5],"249":[2,5,6],"250":[1,5,5],"251":[1,5,8],"252":[4,2,13],"253":[1,6,10],"254":[1,2,1],"255":[1,3,21],"256":[1,3,23],"257":[1,3,26],"258":[4,3,10],"259":[1,7,22],"260":[1,2,1],"261":[3,3,9],"262":[1,3,12],"263":[1,3,5],"264":[4,4,9],"265":[1,4,25],"266":[1,3,4],"267":[1,3,4],"268":[1,4,17],"269":[1,4,3],"270":[4,4,23],"271":[1,4,7],"272":[1,4,7],"273":[2,4,9]},"averageFieldLength":[1.9087591240875912,3.324817518248176,21.79197080291971],"storedFields":{"0":{"title":"linux sar 命令详解(历史资源查看，如内存、CUP等等)","titles":[]},"1":{"title":"二、统计CPU使用情况","titles":[]},"2":{"title":"1.图解数据结构","titles":[]},"3":{"title":"2.红黑树","titles":[]},"4":{"title":"三、平均负载统计分析","titles":[]},"5":{"title":"1. 数组","titles":["1.图解数据结构"]},"6":{"title":"01-设计模式概述","titles":[]},"7":{"title":"红黑树为何必须掌握","titles":["2.红黑树"]},"8":{"title":"四、内存统计分析","titles":[]},"9":{"title":"2. 链表","titles":["1.图解数据结构"]},"10":{"title":"设计模式的诞生与发展","titles":["01-设计模式概述"]},"11":{"title":"02-面向对象设计原则","titles":[]},"12":{"title":"BST 二叉搜索树","titles":["2.红黑树"]},"13":{"title":"五、统计swap分区","titles":[]},"14":{"title":"2.1. 链表简介","titles":["1.图解数据结构","2. 链表"]},"15":{"title":"模式的诞生与定义","titles":["01-设计模式概述","设计模式的诞生与发展"]},"16":{"title":"面向对象的设计原则概述","titles":["02-面向对象设计原则"]},"17":{"title":"03-简单工厂模式","titles":[]},"18":{"title":"什么是二叉搜索树呢？","titles":["2.红黑树","BST 二叉搜索树"]},"19":{"title":"六、查看磁盘IO","titles":[]},"20":{"title":"2.2. 链表分类","titles":["1.图解数据结构","2. 链表"]},"21":{"title":"设计模式的定义与分类","titles":["01-设计模式概述","设计模式的诞生与发展"]},"22":{"title":"单一职责原则","titles":["02-面向对象设计原则"]},"23":{"title":"创建型模式","titles":["03-简单工厂模式"]},"24":{"title":"04-工厂方法模式","titles":[]},"25":{"title":"二叉搜索树 BST 的完美情况","titles":["2.红黑树","BST 二叉搜索树"]},"26":{"title":"七、查看磁盘使用情况","titles":[]},"27":{"title":"2.2.1. 单链表","titles":["1.图解数据结构","2. 链表","2.2. 链表分类"]},"28":{"title":"设计模式的定义","titles":["01-设计模式概述","设计模式的诞生与发展","设计模式的定义与分类"]},"29":{"title":"开闭原则","titles":["02-面向对象设计原则"]},"30":{"title":"简单工厂模式概述","titles":["03-简单工厂模式"]},"31":{"title":"工厂方法模式概述","titles":["04-工厂方法模式"]},"32":{"title":"05-抽象工厂模式","titles":[]},"33":{"title":"二叉搜索树的查找流程","titles":["2.红黑树","BST 二叉搜索树"]},"34":{"title":"八、网络使用分析","titles":[]},"35":{"title":"2.2.2. 循环链表","titles":["1.图解数据结构","2. 链表","2.2. 链表分类"]},"36":{"title":"设计模式的分类","titles":["01-设计模式概述","设计模式的诞生与发展","设计模式的定义与分类"]},"37":{"title":"里氏代换原则","titles":["02-面向对象设计原则"]},"38":{"title":"简单工厂模式结构","titles":["03-简单工厂模式"]},"39":{"title":"工厂方法模式结构","titles":["04-工厂方法模式"]},"40":{"title":"产品等级结构和产品族","titles":["05-抽象工厂模式"]},"41":{"title":"06-建造者模式","titles":[]},"42":{"title":"二叉搜索树的极端情况","titles":["2.红黑树","BST 二叉搜索树"]},"43":{"title":"九、进程，文件状态","titles":[]},"44":{"title":"2.2.3. 双向链表","titles":["1.图解数据结构","2. 链表","2.2. 链表分类"]},"45":{"title":"GoF 设计模式简介","titles":["01-设计模式概述"]},"46":{"title":"依赖倒转原则","titles":["02-面向对象设计原则"]},"47":{"title":"简单工厂模式实现","titles":["03-简单工厂模式"]},"48":{"title":"工厂方法模式实现","titles":["04-工厂方法模式"]},"49":{"title":"抽象工厂模式概述","titles":["05-抽象工厂模式"]},"50":{"title":"创造者模式概述","titles":["06-建造者模式"]},"51":{"title":"07-原型模式","titles":[]},"52":{"title":"AVL 平衡二叉树","titles":["2.红黑树"]},"53":{"title":"十、常用命令","titles":[]},"54":{"title":"2.2.4. 双向循环链表","titles":["1.图解数据结构","2. 链表","2.2. 链表分类"]},"55":{"title":"GoF 的 23 种模式一览表","titles":["01-设计模式概述","GoF 设计模式简介"]},"56":{"title":"接口隔离原则","titles":["02-面向对象设计原则"]},"57":{"title":"举个例子","titles":["03-简单工厂模式"]},"58":{"title":"举个例子","titles":["04-工厂方法模式"]},"59":{"title":"抽象工厂模式结构","titles":["05-抽象工厂模式"]},"60":{"title":"建造者模式结构","titles":["06-建造者模式"]},"61":{"title":"1.Flink学习笔记","titles":[]},"62":{"title":"AVL 树的特性","titles":["2.红黑树","AVL 平衡二叉树"]},"63":{"title":"2.3. 应用场景","titles":["1.图解数据结构","2. 链表"]},"64":{"title":"GoF 的 23 种设计模式的简要说明","titles":["01-设计模式概述","GoF 设计模式简介"]},"65":{"title":"合成复用原则","titles":["02-面向对象设计原则"]},"66":{"title":"实例说明：","titles":["03-简单工厂模式","举个例子"]},"67":{"title":"实例说明","titles":["04-工厂方法模式","举个例子"]},"68":{"title":"抽象工厂模式实现","titles":["05-抽象工厂模式"]},"69":{"title":"建造者模式实现","titles":["06-建造者模式"]},"70":{"title":"Flink是什么","titles":["1.Flink学习笔记"]},"71":{"title":"Demo","titles":[]},"72":{"title":"AVL 树的平衡功能","titles":["2.红黑树","AVL 平衡二叉树"]},"73":{"title":"2.4. 数组 vs 链表","titles":["1.图解数据结构","2. 链表"]},"74":{"title":"设计模式的优点","titles":["01-设计模式概述"]},"75":{"title":"迪米特法则","titles":["02-面向对象设计原则"]},"76":{"title":"实例类图","titles":["03-简单工厂模式","举个例子"]},"77":{"title":"实例类图","titles":["04-工厂方法模式","举个例子"]},"78":{"title":"抽象工厂模式应用实例","titles":["05-抽象工厂模式"]},"79":{"title":"建造者模式应用实例","titles":["06-建造者模式"]},"80":{"title":"为什么选择Flink","titles":["1.Flink学习笔记"]},"81":{"title":"bar","titles":[]},"82":{"title":"AVL 平衡的调整过程","titles":["2.红黑树","AVL 平衡二叉树"]},"83":{"title":"foo","titles":[]},"84":{"title":"3. 栈","titles":["1.图解数据结构"]},"85":{"title":"实例代码","titles":["03-简单工厂模式","举个例子"]},"86":{"title":"实例代码","titles":["04-工厂方法模式","举个例子"]},"87":{"title":"实例说明","titles":["05-抽象工厂模式","抽象工厂模式应用实例"]},"88":{"title":"实例说明","titles":["06-建造者模式","建造者模式应用实例"]},"89":{"title":"流数据适用场景","titles":["1.Flink学习笔记"]},"90":{"title":"AVL 子树失衡的四大场景","titles":["2.红黑树"]},"91":{"title":"3.1. 栈简介","titles":["1.图解数据结构","3. 栈"]},"92":{"title":"结果及分析","titles":["03-简单工厂模式","举个例子"]},"93":{"title":"结果及分析","titles":["04-工厂方法模式","举个例子"]},"94":{"title":"实力类图","titles":["05-抽象工厂模式","抽象工厂模式应用实例"]},"95":{"title":"实例类图","titles":["06-建造者模式","建造者模式应用实例"]},"96":{"title":"传统数据处理架构","titles":["1.Flink学习笔记"]},"97":{"title":"场景1:LL 型失衡-左左结构失衡（右旋）：","titles":["2.红黑树","AVL 子树失衡的四大场景"]},"98":{"title":"3.2. 栈的常见应用常见应用场景","titles":["1.图解数据结构","3. 栈"]},"99":{"title":"简单工厂模式的简化","titles":["03-简单工厂模式"]},"100":{"title":"反射机制与配置文件","titles":["04-工厂方法模式"]},"101":{"title":"实例代码","titles":["05-抽象工厂模式","抽象工厂模式应用实例"]},"102":{"title":"实例代码","titles":["06-建造者模式","建造者模式应用实例"]},"103":{"title":"有状态的流式处理","titles":["1.Flink学习笔记"]},"104":{"title":"记忆要点","titles":["2.红黑树","AVL 子树失衡的四大场景","场景1:LL 型失衡-左左结构失衡（右旋）："]},"105":{"title":"3.2.1. 实现浏览器的回退和前进功能","titles":["1.图解数据结构","3. 栈","3.2. 栈的常见应用常见应用场景"]},"106":{"title":"简单工厂模式优/缺点与适应环境","titles":["03-简单工厂模式"]},"107":{"title":"工厂方法的重载","titles":["04-工厂方法模式"]},"108":{"title":"结果及分析","titles":["05-抽象工厂模式","抽象工厂模式应用实例"]},"109":{"title":"结果及分析","titles":["06-建造者模式","建造者模式应用实例"]},"110":{"title":"流处理的演变","titles":["1.Flink学习笔记"]},"111":{"title":"场景2 RR 型失衡：右右结构失衡（左旋）","titles":["2.红黑树","AVL 子树失衡的四大场景"]},"112":{"title":"3.2.2. 检查符号是否成对出现","titles":["1.图解数据结构","3. 栈","3.2. 栈的常见应用常见应用场景"]},"113":{"title":"优点","titles":["03-简单工厂模式","简单工厂模式优/缺点与适应环境"]},"114":{"title":"工厂方法的隐藏","titles":["04-工厂方法模式"]},"115":{"title":"开闭原则的倾斜性","titles":["05-抽象工厂模式"]},"116":{"title":"指挥者类的深入讨论","titles":["06-建造者模式"]},"117":{"title":"Flink主要特点","titles":["1.Flink学习笔记"]},"118":{"title":"记忆要点","titles":["2.红黑树","AVL 子树失衡的四大场景","场景2 RR 型失衡：右右结构失衡（左旋）"]},"119":{"title":"3.2.3. 反转字符串","titles":["1.图解数据结构","3. 栈","3.2. 栈的常见应用常见应用场景"]},"120":{"title":"缺点","titles":["03-简单工厂模式","简单工厂模式优/缺点与适应环境"]},"121":{"title":"工厂方面模式优/缺点与适应环境","titles":["04-工厂方法模式"]},"122":{"title":"抽象工厂模式优/缺点与使用环境","titles":["05-抽象工厂模式"]},"123":{"title":"省略 Director","titles":["06-建造者模式","指挥者类的深入讨论"]},"124":{"title":"Flink的其它特点","titles":["1.Flink学习笔记"]},"125":{"title":"场景3 LR 型失衡：左右结构失衡（左旋+右旋）：","titles":["2.红黑树","AVL 子树失衡的四大场景"]},"126":{"title":"3.2.4. 维护函数调用","titles":["1.图解数据结构","3. 栈","3.2. 栈的常见应用常见应用场景"]},"127":{"title":"适用环境","titles":["03-简单工厂模式","简单工厂模式优/缺点与适应环境"]},"128":{"title":"工厂方法模式优点","titles":["04-工厂方法模式","工厂方面模式优/缺点与适应环境"]},"129":{"title":"抽象工厂模式优点","titles":["05-抽象工厂模式","抽象工厂模式优/缺点与使用环境"]},"130":{"title":"钩子方法的引入","titles":["06-建造者模式","指挥者类的深入讨论"]},"131":{"title":"Flink VS Spark Streaming","titles":["1.Flink学习笔记"]},"132":{"title":"记忆要点","titles":["2.红黑树","AVL 子树失衡的四大场景","场景3 LR 型失衡：左右结构失衡（左旋+右旋）："]},"133":{"title":"3.3. 栈的实现","titles":["1.图解数据结构","3. 栈"]},"134":{"title":"工厂方法模式的缺点","titles":["04-工厂方法模式","工厂方面模式优/缺点与适应环境"]},"135":{"title":"抽象工厂模式缺点","titles":["05-抽象工厂模式","抽象工厂模式优/缺点与使用环境"]},"136":{"title":"建造者模式优点：","titles":["06-建造者模式"]},"137":{"title":"Flink部署","titles":["1.Flink学习笔记"]},"138":{"title":"场景4 RL 失衡: 右左结构 （右旋+左旋）：","titles":["2.红黑树","AVL 子树失衡的四大场景"]},"139":{"title":"4. 队列","titles":["1.图解数据结构"]},"140":{"title":"工厂方法模式适用环境","titles":["04-工厂方法模式","工厂方面模式优/缺点与适应环境"]},"141":{"title":"抽象工厂模式适用环境","titles":["05-抽象工厂模式","抽象工厂模式优/缺点与使用环境"]},"142":{"title":"建造者模式缺点：","titles":["06-建造者模式"]},"143":{"title":"standalone模式","titles":["1.Flink学习笔记","Flink部署"]},"144":{"title":"记忆要点","titles":["2.红黑树","AVL 子树失衡的四大场景","场景4 RL 失衡: 右左结构 （右旋+左旋）："]},"145":{"title":"4.1. 队列简介","titles":["1.图解数据结构","4. 队列"]},"146":{"title":"建造者模式适用环境","titles":["06-建造者模式"]},"147":{"title":"yarn模式","titles":["1.Flink学习笔记","Flink部署"]},"148":{"title":"AVL 树平衡总结","titles":["2.红黑树","AVL 子树失衡的四大场景"]},"149":{"title":"4.2. 队列分类","titles":["1.图解数据结构","4. 队列"]},"150":{"title":"Kubernetes部署","titles":["1.Flink学习笔记","Flink部署"]},"151":{"title":"AVL树的删除","titles":["2.红黑树","AVL 子树失衡的四大场景"]},"152":{"title":"4.2.1. 单队列","titles":["1.图解数据结构","4. 队列","4.2. 队列分类"]},"153":{"title":"运行时架构","titles":["1.Flink学习笔记"]},"154":{"title":"常见AVL面试题","titles":["2.红黑树"]},"155":{"title":"4.2.2. 循环队列","titles":["1.图解数据结构","4. 队列","4.2. 队列分类"]},"156":{"title":"Flink运行时组件","titles":["1.Flink学习笔记","运行时架构"]},"157":{"title":"问：什么是AVL左旋和右旋？","titles":["2.红黑树","常见AVL面试题"]},"158":{"title":"4.3. 常见应用场景","titles":["1.图解数据结构","4. 队列"]},"159":{"title":"JobManager：","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"160":{"title":"AVL树的问题","titles":["2.红黑树","常见AVL面试题"]},"161":{"title":"5. 图","titles":["1.图解数据结构"]},"162":{"title":"TaskManager：","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"163":{"title":"红黑树（RBTree）","titles":["2.红黑树"]},"164":{"title":"图的基本概念","titles":["1.图解数据结构"]},"165":{"title":"ResourceManager：","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"166":{"title":"什么是红黑树？","titles":["2.红黑树","红黑树（RBTree）"]},"167":{"title":"顶点","titles":["1.图解数据结构","图的基本概念"]},"168":{"title":"Dispacher：","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"169":{"title":"红黑树的特性","titles":["2.红黑树","红黑树（RBTree）"]},"170":{"title":"边","titles":["1.图解数据结构","图的基本概念"]},"171":{"title":"任务提交流程","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"172":{"title":"黑色完美平衡","titles":["2.红黑树","红黑树（RBTree）"]},"173":{"title":"度","titles":["1.图解数据结构","图的基本概念"]},"174":{"title":"任务提交流程(YARN)","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"175":{"title":"红黑树恢复平衡过程的三个操作","titles":["2.红黑树"]},"176":{"title":"无向图和有向图","titles":["1.图解数据结构","图的基本概念"]},"177":{"title":"【重点】：单作业（Per-Job）模式","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件","任务提交流程(YARN)"]},"178":{"title":"1. 变色","titles":["2.红黑树","红黑树恢复平衡过程的三个操作"]},"179":{"title":"无权图和带权图","titles":["1.图解数据结构","图的基本概念"]},"180":{"title":"任务调度原理","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"181":{"title":"2. 左旋","titles":["2.红黑树","红黑树恢复平衡过程的三个操作"]},"182":{"title":"图的存储","titles":["1.图解数据结构"]},"183":{"title":"并行度（Parallelism）","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件","任务调度原理"]},"184":{"title":"3. 右旋","titles":["2.红黑树","红黑树恢复平衡过程的三个操作"]},"185":{"title":"邻接矩阵存储","titles":["1.图解数据结构","图的存储"]},"186":{"title":"taskManager","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件","任务调度原理"]},"187":{"title":"红黑树插入节点情景分析","titles":["2.红黑树"]},"188":{"title":"邻接表存储","titles":["1.图解数据结构","图的存储"]},"189":{"title":"Slots","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件","任务调度原理"]},"190":{"title":"红黑树的节点结构","titles":["2.红黑树","红黑树插入节点情景分析"]},"191":{"title":"图的搜索","titles":["1.图解数据结构"]},"192":{"title":"程序与数据流（DataFlow）","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"193":{"title":"场景1：红黑树为空树","titles":["2.红黑树","红黑树插入节点情景分析"]},"194":{"title":"广度优先搜索","titles":["1.图解数据结构","图的搜索"]},"195":{"title":"执行流图（ExecutionGraph）","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"196":{"title":"场景2： 插入节点的 Key 已经存在","titles":["2.红黑树","红黑树插入节点情景分析"]},"197":{"title":"深度优先搜索","titles":["1.图解数据结构","图的搜索"]},"198":{"title":"数据传输形式","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"199":{"title":"场景3：插入节点的父节点为黑色","titles":["2.红黑树","红黑树插入节点情景分析"]},"200":{"title":"任务链（Operationn chains）","titles":["1.Flink学习笔记","运行时架构","Flink运行时组件"]},"201":{"title":"场景4：插入节点的父节点为红色","titles":["2.红黑树","红黑树插入节点情景分析"]},"202":{"title":"Flink流处理API","titles":["1.Flink学习笔记"]},"203":{"title":"场景4.1：父节点和叔叔节点都为红色","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色"]},"204":{"title":"1、Environment","titles":["1.Flink学习笔记","Flink流处理API"]},"205":{"title":"场景4.2：叔叔节点为黑色，父节点为红色，并且插在父节点的左子节点","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色"]},"206":{"title":"2、Source","titles":["1.Flink学习笔记","Flink流处理API"]},"207":{"title":"场景4.2.1 LL 型失衡","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色","场景4.2：叔叔节点为黑色，父节点为红色，并且插在父节点的左子节点"]},"208":{"title":"3、Transform","titles":["1.Flink学习笔记","Flink流处理API"]},"209":{"title":"场景4.2.2 LR 型失衡","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色","场景4.2：叔叔节点为黑色，父节点为红色，并且插在父节点的左子节点"]},"210":{"title":"3.1 map","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"211":{"title":"场景4.3 叔叔为黑色，父节点为红色，并且父节点是祖父节点的右子节点","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色"]},"212":{"title":"3.2 flatmap","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"213":{"title":"场景4.3.1：RR 型失衡","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色","场景4.3 叔叔为黑色，父节点为红色，并且父节点是祖父节点的右子节点"]},"214":{"title":"3.3 filter","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"215":{"title":"场景4.3.2：RL 型失衡","titles":["2.红黑树","红黑树插入节点情景分析","场景4：插入节点的父节点为红色","场景4.3 叔叔为黑色，父节点为红色，并且父节点是祖父节点的右子节点"]},"216":{"title":"3.4 keyBy","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"217":{"title":"红黑树面试题：","titles":["2.红黑树"]},"218":{"title":"3.5 滚动聚合算子","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"219":{"title":"有了二叉搜索树，为什么还需要平衡二叉树？","titles":["2.红黑树","红黑树面试题："]},"220":{"title":"3.6 reduce","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"221":{"title":"有了平衡二叉树，为什么还需要红黑树？","titles":["2.红黑树","红黑树面试题："]},"222":{"title":"3.7 Split和Select","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"223":{"title":"红黑树那几个原则，你还记得吗？","titles":["2.红黑树","红黑树面试题："]},"224":{"title":"3.8 Connect和CoMap","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"225":{"title":"红黑树写入操作，是如何找到他的父节点的？","titles":["2.红黑树","红黑树面试题："]},"226":{"title":"3.9 Union","titles":["1.Flink学习笔记","Flink流处理API","3、Transform"]},"227":{"title":"红黑树有哪些内部操作","titles":["2.红黑树","红黑树面试题："]},"228":{"title":"支持的数据类型","titles":["1.Flink学习笔记","Flink流处理API"]},"229":{"title":"红黑树与 AVL 树的区别","titles":["2.红黑树","红黑树面试题："]},"230":{"title":"实现UDF函数--更细粒度的控制流","titles":["1.Flink学习笔记","Flink流处理API"]},"231":{"title":"1、函数类（Function Classes）","titles":["1.Flink学习笔记","Flink流处理API","实现UDF函数--更细粒度的控制流"]},"232":{"title":"2、匿名函数（Lambda Function）","titles":["1.Flink学习笔记","Flink流处理API","实现UDF函数--更细粒度的控制流"]},"233":{"title":"3、富函数（Rich Function）","titles":["1.Flink学习笔记","Flink流处理API","实现UDF函数--更细粒度的控制流"]},"234":{"title":"Sink","titles":["1.Flink学习笔记","Flink流处理API"]},"235":{"title":"Flink 中的 Window","titles":["1.Flink学习笔记"]},"236":{"title":"Window 概述","titles":["1.Flink学习笔记","Flink 中的 Window"]},"237":{"title":"Window 类型","titles":["1.Flink学习笔记","Flink 中的 Window"]},"238":{"title":"Window API","titles":["1.Flink学习笔记","Flink 中的 Window"]},"239":{"title":"window function","titles":["1.Flink学习笔记","Flink 中的 Window"]},"240":{"title":"时间语义与 Wartermark","titles":["1.Flink学习笔记"]},"241":{"title":"Flink 中的时间语义","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"242":{"title":"EventTime 的引入","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"243":{"title":"Watermark","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"244":{"title":"WM特点","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"245":{"title":"WM的传递","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"246":{"title":"WM的引入","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"247":{"title":"WM的设定","titles":["1.Flink学习笔记","时间语义与 Wartermark"]},"248":{"title":"断点式生成：","titles":["1.Flink学习笔记","时间语义与 Wartermark","WM的设定"]},"249":{"title":"周期性生成：","titles":["1.Flink学习笔记","时间语义与 Wartermark","WM的设定"]},"250":{"title":"窗口起始点","titles":["1.Flink学习笔记","时间语义与 Wartermark","WM的设定"]},"251":{"title":"偏移量","titles":["1.Flink学习笔记","时间语义与 Wartermark","WM的设定"]},"252":{"title":"ProcessFunction API（底层 API）","titles":["1.Flink学习笔记"]},"253":{"title":"KeyedProcessFunction","titles":["1.Flink学习笔记","ProcessFunction API（底层 API）","WM的设定"]},"254":{"title":"Flink状态管理","titles":["1.Flink学习笔记"]},"255":{"title":"状态","titles":["1.Flink学习笔记","Flink状态管理"]},"256":{"title":"算子状态","titles":["1.Flink学习笔记","Flink状态管理"]},"257":{"title":"键控状态","titles":["1.Flink学习笔记","Flink状态管理"]},"258":{"title":"状态后端（state backends）","titles":["1.Flink学习笔记","Flink状态管理"]},"259":{"title":"选择一个状态后端","titles":["1.Flink学习笔记","Flink状态管理","状态后端（state backends）"]},"260":{"title":"flink容错机制","titles":["1.Flink学习笔记"]},"261":{"title":"一致性检查点（checkpoints）","titles":["1.Flink学习笔记","flink容错机制"]},"262":{"title":"从检查点恢复状态","titles":["1.Flink学习笔记","flink容错机制"]},"263":{"title":"检查点的实现算法","titles":["1.Flink学习笔记","flink容错机制"]},"264":{"title":"检查点分界线（checkpoint barrier）","titles":["1.Flink学习笔记","flink容错机制","检查点的实现算法"]},"265":{"title":"flink检查点算法","titles":["1.Flink学习笔记","flink容错机制","检查点的实现算法"]},"266":{"title":"保存点","titles":["1.Flink学习笔记","flink容错机制"]},"267":{"title":"Flink状态一致性","titles":["1.Flink学习笔记","flink容错机制"]},"268":{"title":"分类","titles":["1.Flink学习笔记","flink容错机制","Flink状态一致性"]},"269":{"title":"一致性检查点","titles":["1.Flink学习笔记","flink容错机制","Flink状态一致性"]},"270":{"title":"端到端(end-to-end)状态一致性","titles":["1.Flink学习笔记","flink容错机制","Flink状态一致性"]},"271":{"title":"WAL","titles":["1.Flink学习笔记","flink容错机制","Flink状态一致性"]},"272":{"title":"2PC","titles":["1.Flink学习笔记","flink容错机制","Flink状态一致性"]},"273":{"title":"flink-kafka端到端状态一致性特征","titles":["1.Flink学习笔记","flink容错机制","Flink状态一致性"]}},"dirtCount":0,"index":[["采用两阶段提交sink",{"2":{"273":1}}],["采用抽象的形式来注入所依赖的对象",{"2":{"46":1}}],["预写日志",{"2":{"270":1}}],["幂等写入",{"2":{"270":1}}],["端到端",{"0":{"270":1}}],["轻量级快照机制",{"2":{"269":1}}],["恰好一次",{"2":{"268":1}}],["至少一次",{"2":{"268":1}}],["计算结果要保证准确",{"2":{"267":1}}],["检查点就真正完成了",{"2":{"265":1}}],["检查点分界线",{"0":{"264":1}}],["检查点的实现算法",{"0":{"263":1},"1":{"264":1,"265":1}}],["检查符号是否成对出现",{"0":{"112":1}}],["快照",{"2":{"261":1}}],["快速",{"2":{"259":1}}],["选择一个状态后端",{"0":{"259":1}}],["映射状态",{"2":{"257":1}}],["联合列表状态",{"2":{"256":1}}],["列表状态",{"2":{"256":1,"257":2}}],["键控状态根据输入数据流中定义的键来维护和访问",{"2":{"257":1}}],["键控状态",{"0":{"257":1},"2":{"255":1}}],["两段事务超时时间必须匹配",{"2":{"273":1}}],["两阶段提交",{"2":{"270":1}}],["两种类型的状态",{"2":{"255":1}}],["两个流相互独立",{"2":{"224":1}}],["两个数据流被connect之后",{"2":{"224":1}}],["两个用户是好友的话",{"2":{"170":1}}],["故障回复机制的核心",{"2":{"261":1}}],["故障处理以及高效存储和访问",{"2":{"255":1}}],["故avl树一般使用场景在于查询场景",{"2":{"160":1}}],["状态一致性",{"0":{"270":1}}],["状态写入远程存储",{"2":{"258":1}}],["状态的存储",{"2":{"258":1}}],["状态后端在状态存储检查点之后",{"2":{"265":1}}],["状态后端",{"0":{"258":1},"1":{"259":1}}],["状态始终与特定算子相关联",{"2":{"255":1}}],["状态",{"0":{"255":1}}],["状态模式",{"2":{"55":1,"64":1}}],["连续10秒温度上升报警",{"2":{"253":1}}],["连接两个保持他们类型的数据流",{"2":{"224":1}}],["连接数据库",{"2":{"86":1}}],["定时器",{"2":{"253":1}}],["定义移除某些数据的逻辑",{"2":{"239":1}}],["定义window什么时候关闭",{"2":{"239":1}}],["定义部件",{"2":{"69":1}}],["定义一系列算法",{"2":{"64":1}}],["定义一个操作中算法的框架",{"2":{"64":1}}],["定义一个对象来封装一系列对象的交互",{"2":{"64":1}}],["定义一个用于创建实例对象的接口",{"2":{"31":1}}],["定义一个用于创建对象的接口",{"2":{"23":1,"64":1}}],["定义一个工厂类",{"2":{"23":1,"30":1}}],["定义对象直接按的一种一对多依赖关系",{"2":{"64":1}}],["定义它的文法的一种表示",{"2":{"64":1}}],["定义并明确所创建的复杂对象",{"2":{"60":1}}],["定义的所有程序",{"2":{"37":1}}],["定义",{"2":{"16":1,"23":1}}],["底层",{"0":{"252":1},"1":{"253":1}}],["侧输出流批处理合并",{"2":{"251":1}}],["侧重于一步步构造一个复杂对象",{"2":{"69":1}}],["源码有说明",{"2":{"251":1}}],["偏移量",{"0":{"251":1}}],["窗口处理迟到的机制",{"2":{"251":1}}],["窗口起始时间为",{"2":{"250":1}}],["窗口起始点",{"0":{"250":1}}],["窗口长度固定",{"2":{"237":2}}],["造成浪费",{"2":{"249":1}}],["造成工厂角色无法形成基于继承的等级结构",{"2":{"120":1}}],["稀疏数据也会生成wm",{"2":{"249":1}}],["周期性生成",{"0":{"249":1}}],["浪费",{"2":{"248":1}}],["浪费存储空间",{"2":{"5":1}}],["断点式生成",{"0":{"248":1}}],["收到结果的速度就会很慢",{"2":{"247":1}}],["收到rm的指令后",{"2":{"162":1}}],["升序数据设置时间戳和wartermark",{"2":{"246":1}}],["乱序数据设置时间戳和wartermark",{"2":{"246":1}}],["绝大部分的业务都会使用",{"2":{"242":1}}],["绝大多数模式都是根据其功能或模式结构来命名的",{"2":{"28":1}}],["件时间戳",{"2":{"241":1}}],["移除器",{"2":{"239":1}}],["移动到最后的时候",{"2":{"152":1}}],["触发计算并输出结果",{"2":{"239":1}}],["触发器",{"2":{"239":1}}],["全窗口函数",{"2":{"239":1}}],["增量聚合函数",{"2":{"239":1}}],["增加了颜色属性的数据",{"2":{"169":1}}],["增加了系统的抽象性和理解难度",{"2":{"134":1}}],["增加了系统的复杂度和理解难度",{"2":{"120":1}}],["增加删除",{"2":{"160":2}}],["增加系统的理解难度和运行成本",{"2":{"142":1}}],["增加新的产品族很方便",{"2":{"129":1}}],["增加新的产品等级结构麻烦",{"2":{"135":1}}],["增加新的产品等级结构",{"2":{"115":1}}],["增加产品族",{"2":{"115":1}}],["增加和删除可能需要通过一次或多次树旋转来重新平衡这个树",{"2":{"52":1}}],["间隙组成",{"2":{"237":1}}],["间隔组成",{"2":{"237":1}}],["点",{"2":{"237":1}}],["滑动窗口由固定的窗口长度和滑动",{"2":{"237":1}}],["滑动窗口是固定窗口的更广义的一种形式",{"2":{"237":1}}],["滑动窗口",{"2":{"237":1}}],["滚动窗口",{"2":{"237":1}}],["滚动聚合算子",{"0":{"218":1}}],["概述",{"0":{"236":1}}],["做一些清理工作",{"2":{"233":1}}],["做了什么优化呢",{"2":{"160":1}}],["富函数",{"0":{"233":1}}],["匿名函数",{"0":{"232":1}}],["函数类",{"0":{"231":1}}],["降低了对旋转的要求",{"2":{"229":1}}],["任何不平衡都会在三次旋转之内解决",{"2":{"229":1}}],["任务继续正常的数据处理",{"2":{"265":1}}],["任务就将其状态保存到状态后端的检查点中",{"2":{"265":1}}],["任务的名字以及state状态",{"2":{"233":1}}],["任务链",{"0":{"200":1}}],["任务调度原理",{"0":{"180":1},"1":{"183":1,"186":1,"189":1}}],["任务提交流程",{"0":{"171":1,"174":1},"1":{"177":1}}],["任务队列",{"2":{"158":1}}],["调整平衡的实现机制不同",{"2":{"229":1}}],["调整的过程称之为左旋和右旋",{"2":{"72":1}}],["把一个红色节点变成黑色",{"2":{"227":1}}],["把插入的节点替换",{"2":{"225":1}}],["把所有邻接于",{"2":{"188":1}}],["替换",{"2":{"225":1}}],["功能与map和flatmap一样",{"2":{"224":1}}],["换取插入",{"2":{"221":1}}],["换取后面平衡操作的次数减少",{"2":{"169":1}}],["频繁的旋转操作使得",{"2":{"221":1}}],["频繁的场景",{"2":{"160":2}}],["几乎都需要通过旋转操作保持平衡",{"2":{"221":1}}],["产生一个包含所有datastream元素的新",{"2":{"226":1}}],["产生一个新的值",{"2":{"220":1}}],["产品构建和组装方法",{"2":{"69":1}}],["产品",{"2":{"60":1}}],["产品等级结构稳定",{"2":{"141":1}}],["产品等级结构即产品的继承结构",{"2":{"40":1}}],["产品等级结构",{"2":{"40":1}}],["产品等级结构和产品族示意图如下图所示",{"2":{"40":1}}],["产品等级结构和产品族",{"0":{"40":1}}],["产品族与产品等级结构示意图",{"2":{"40":1}}],["产品族是指由同一工厂生产的位于不同产品等级结构中的一组产品",{"2":{"40":1}}],["产品族",{"2":{"40":2}}],["合并当前元素和上次聚合的结果",{"2":{"220":1}}],["合成复用原则又称为组合",{"2":{"65":1}}],["合成复用原则",{"0":{"65":1},"2":{"16":1,"65":1}}],["查询的次数远远大于插入和删除",{"2":{"229":1}}],["查找效率高",{"2":{"229":1}}],["查找的效率在",{"2":{"225":1}}],["查找的时间复杂度从",{"2":{"219":1}}],["查看右子节点",{"2":{"33":1}}],["查看左子节点",{"2":{"33":1}}],["查看根节点",{"2":{"33":1}}],["查看磁盘使用情况",{"0":{"26":1}}],["查看磁盘io",{"0":{"19":1}}],["查看i",{"2":{"19":1}}],["查看系统swap分区的统计信息",{"2":{"13":1}}],["查看内存使用情况",{"2":{"8":1}}],["查看平均负载",{"2":{"4":1}}],["查看该二进制结果文件",{"2":{"1":1}}],["逻辑的将一个流拆分成不相交的分区",{"2":{"216":1}}],["逻辑数据流图",{"2":{"159":1}}],["得到",{"2":{"209":1,"215":1}}],["得名于它的发明者",{"2":{"52":1}}],["新插入节点",{"2":{"207":1,"209":1,"213":1,"215":1}}],["新的任务请求线程资源时",{"2":{"158":1}}],["新的日志记录器需要继承抽象日志记录器",{"2":{"100":1}}],["新的被动连接",{"2":{"34":1}}],["新的主动连接",{"2":{"34":1}}],["细分场景2",{"2":{"209":1}}],["细分场景1",{"2":{"207":1}}],["细节应该依赖于抽象",{"2":{"16":1,"46":1}}],["里修改控制变量",{"2":{"206":1}}],["里边可以写生成数据的代码",{"2":{"206":1}}],["里氏代换原则是基础",{"2":{"46":1}}],["里氏代换原则是实现开闭原则的重要方式之一",{"2":{"37":1}}],["里氏代换原则和依赖倒转原则会同时出现",{"2":{"46":1}}],["里氏代换原则表明",{"2":{"37":1}}],["里氏代换原则",{"0":{"37":1},"2":{"16":1,"37":1}}],["叔叔节点非红即黑",{"2":{"205":1}}],["叔叔节点为黑色",{"0":{"205":1},"1":{"207":1,"209":1},"2":{"201":1}}],["叔叔为黑色",{"0":{"211":1},"1":{"213":1,"215":1},"2":{"205":1}}],["继续向下游广播最小的wm",{"2":{"245":1}}],["继续插入操作",{"2":{"203":1}}],["继承了avl可自平衡的优点",{"2":{"160":1}}],["继承抽象日志记录器工厂",{"2":{"100":1}}],["继承于",{"2":{"62":1}}],["显然处理方式是把其改为",{"2":{"203":1}}],["显示蓝色边框组合框",{"2":{"101":1}}],["显示蓝色边框文本",{"2":{"101":1}}],["显示绿色边框组合框",{"2":{"101":1,"108":1}}],["显示绿色边框文本框",{"2":{"101":1,"108":1}}],["显示浅蓝色按钮",{"2":{"101":1}}],["显示浅绿色按钮",{"2":{"101":1,"108":1}}],["显示折线图",{"2":{"85":1}}],["显示饼状图",{"2":{"85":1}}],["显示柱状图",{"2":{"85":1,"92":1}}],["显示指定进程",{"2":{"53":1}}],["显示换页状态",{"2":{"0":1}}],["显示i",{"2":{"0":1}}],["祖父节点肯定为黑色节点",{"2":{"203":1}}],["父节点就是当前节点的父节点",{"2":{"225":1}}],["父节点和叔叔节点都为红色",{"0":{"203":1}}],["父节点和叔叔节点为红色",{"2":{"201":1}}],["父节点为红色",{"0":{"205":1,"211":1},"1":{"207":1,"209":1,"213":1,"215":1},"2":{"201":1,"203":1}}],["父类等信息",{"2":{"100":1}}],["洗牌",{"2":{"198":1}}],["算子状态",{"0":{"256":1},"2":{"255":1}}],["算子需要预先注册其状态",{"2":{"255":1}}],["算子",{"2":{"198":1}}],["算子之间不会重分区",{"2":{"198":1}}],["轮询方式",{"2":{"198":1}}],["例",{"2":{"198":2}}],["例如采集的日志数据中",{"2":{"241":1}}],["例如函数执行的并行度",{"2":{"233":1}}],["例如很多组成部分都不相同",{"2":{"142":1}}],["例如可以在游戏角色的抽象建造者类",{"2":{"130":1}}],["例如力量",{"2":{"88":1}}],["例如春天",{"2":{"87":1}}],["例如通过文件记录或数据库记录",{"2":{"67":1}}],["例如柱状图",{"2":{"66":1}}],["例如连接数据库",{"2":{"48":1}}],["例如",{"2":{"22":1,"69":1,"88":1,"100":1,"130":1}}],["才正式提交事务",{"2":{"272":1}}],["才把所有对应的结果写入sink系统中",{"2":{"270":1}}],["才会被迫使用",{"2":{"242":1}}],["才回溯到上一顶点",{"2":{"197":1}}],["才启动新的jobmanager",{"2":{"177":1}}],["深度优先搜索的具体实现用到了另一种线性数据结构",{"2":{"197":1}}],["深度优先搜索就是",{"2":{"197":1}}],["深度优先搜索",{"0":{"197":1}}],["步",{"2":{"194":6,"197":6}}],["广播状态",{"2":{"256":1}}],["广度优先搜索的具体实现方式用到了之前所学过的线性数据结构",{"2":{"194":1}}],["广度优先搜索就像水面上的波纹一样一层一层向外扩展",{"2":{"194":1}}],["广度优先搜索",{"0":{"194":1}}],["广告投放",{"2":{"89":1}}],["另外",{"2":{"193":1}}],["另一方面还可以提高软件的设计水平和代码质量",{"2":{"74":1}}],["另一方面它控制产品对象的创建过程",{"2":{"69":1}}],["另一类方法是",{"2":{"60":1}}],["程序与数据流",{"0":{"192":1}}],["程序将不会产生任何错误和异常",{"2":{"37":1}}],["允许处理迟到的数据",{"2":{"239":1}}],["允许子任务共享solt",{"2":{"189":1}}],["允许一个对象在其内部状态改变时改变它的行为",{"2":{"64":1}}],["推荐按照cpu核数分配slots个数",{"2":{"189":1}}],["你还记得吗",{"0":{"223":1}}],["你会发现",{"2":{"188":1}}],["你点击前进按钮",{"2":{"105":1}}],["你点击回退按钮",{"2":{"105":1}}],["诞生了图的另外一种存储方法",{"2":{"188":1}}],["针对上面邻接矩阵比较浪费内存空间的问题",{"2":{"188":1}}],["针对抽象建造者编程",{"2":{"102":1}}],["邻接链表使用一个链表来存储某个顶点的所有后继相邻顶点",{"2":{"188":1}}],["邻接表元素个数等于边的条数",{"2":{"188":1}}],["邻接表元素个数等于边的条数的两倍",{"2":{"188":1}}],["邻接表",{"2":{"188":2}}],["邻接表存储的元素个数为",{"2":{"188":2}}],["邻接表存储",{"0":{"188":1}}],["邻接矩阵将图用二维矩阵存储",{"2":{"185":1}}],["邻接矩阵存储的方式优点是简单直接",{"2":{"185":1}}],["邻接矩阵存储",{"0":{"185":1}}],["必须有空参构造",{"2":{"228":1}}],["必须是前后发生的不同任务",{"2":{"189":1}}],["必须要要知道插入元素的位置",{"2":{"20":1}}],["必有关系",{"2":{"185":1}}],["值状态",{"2":{"257":1}}],["值得注意的是",{"2":{"185":1}}],["值越高",{"2":{"26":1}}],["没有重叠",{"2":{"237":1}}],["没有关系时",{"2":{"185":1}}],["没有一个解决方案是百分之百完美的",{"2":{"28":1}}],["子树的",{"2":{"181":1,"184":1}}],["子树失衡的四大场景",{"0":{"90":1},"1":{"97":1,"104":1,"111":1,"118":1,"125":1,"132":1,"138":1,"144":1,"148":1,"151":1}}],["到底包含多少个任务",{"2":{"180":1}}],["到叶子结点的黑色路径长度",{"2":{"172":1}}],["取任务最大并行度",{"2":{"180":1}}],["取样数据和分析的结果都可以存入文件",{"2":{"0":1}}],["怎样实现并行计算",{"2":{"180":1}}],["执行流图",{"0":{"195":1}}],["执行任务",{"2":{"177":1,"180":1}}],["执行图",{"2":{"159":1}}],["资源管理器通知taskmanager为新的作业提供slots",{"2":{"177":1}}],["资源管理器向yarn的资源管理器请求container资源",{"2":{"177":1}}],["启动应用程序时如何恢复",{"2":{"256":1}}],["启动flink",{"2":{"177":1}}],["启动之后",{"2":{"162":1}}],["重启应用",{"2":{"262":1}}],["重点",{"0":{"177":1}}],["重载的工厂方法结构图",{"2":{"107":2}}],["重载的工厂方法结构图如下图所示",{"2":{"107":1}}],["肯定不是",{"2":{"176":1}}],["微博的关注关系",{"2":{"176":1}}],["师生关系",{"2":{"176":1}}],["变色处理",{"2":{"203":1}}],["变色",{"0":{"178":1},"2":{"175":1,"207":1,"213":1,"227":1}}],["靠它的三种操作",{"2":{"175":1}}],["度就代表了某个人的好友数量",{"2":{"173":1}}],["度表示一个顶点包含多少条边",{"2":{"173":1}}],["度",{"0":{"173":1}}],["去掉红黑树中的红色节点",{"2":{"172":1}}],["看看黑色完美平衡的效果",{"2":{"172":1}}],["边的条数为",{"2":{"188":2}}],["边表示的是顶点之间的关系",{"2":{"176":1}}],["边",{"0":{"170":1}}],["空间换时间",{"2":{"169":1}}],["空闲的物理内存大小",{"2":{"8":1}}],["空闲的cpu",{"2":{"1":1}}],["颜色属性",{"2":{"169":1,"223":1}}],["记住红黑树的几个原则",{"2":{"169":1}}],["记忆要点",{"0":{"104":1,"118":1,"132":1,"144":1},"2":{"169":1}}],["破坏了平衡",{"2":{"169":1}}],["参照最后一个原则",{"2":{"169":1}}],["参数类型声明",{"2":{"46":1}}],["黑红红",{"2":{"203":2}}],["黑色完美平衡",{"0":{"172":1}}],["黑色属性",{"2":{"169":2,"223":1}}],["黑色节点的子节点",{"2":{"169":1}}],["黑衣",{"2":{"102":1,"130":1}}],["红黑红",{"2":{"203":2}}],["红黑树更合算一些",{"2":{"229":1}}],["红黑树能够以o",{"2":{"229":1}}],["红黑树统计性能比",{"2":{"229":1}}],["红黑树并不追求",{"2":{"229":1}}],["红黑树并不是一棵",{"2":{"172":1}}],["红黑树根据路径上黑色节点数目一致",{"2":{"229":1}}],["红黑树与",{"0":{"229":1}}],["红黑树有哪些内部操作",{"0":{"227":1}}],["红黑树有点属于一种空间换时间类型的优化",{"2":{"169":1}}],["红黑树写入操作",{"0":{"225":1}}],["红黑树那几个原则",{"0":{"223":1}}],["红黑树插入操作",{"2":{"225":1}}],["红黑树插入时的不平衡",{"2":{"221":1}}],["红黑树插入节点情景分析",{"0":{"187":1},"1":{"190":1,"193":1,"196":1,"199":1,"201":1,"203":1,"205":1,"207":1,"209":1,"211":1,"213":1,"215":1}}],["红黑树通过牺牲严格的平衡",{"2":{"221":1}}],["红黑树面试题",{"0":{"217":1},"1":{"219":1,"221":1,"223":1,"225":1,"227":1,"229":1}}],["红黑树为空树",{"0":{"193":1}}],["红黑树为何必须掌握",{"0":{"7":1}}],["红黑树恢复平衡过程的三个操作",{"0":{"175":1},"1":{"178":1,"181":1,"184":1}}],["红黑树是用非严格的平衡来换取增删节点时候旋转次数的降低",{"2":{"229":1}}],["红黑树是实际应用中最常用的平衡二叉查找树",{"2":{"169":1}}],["红黑树是一种特化的",{"2":{"163":1}}],["红黑树牺牲了部分平衡性",{"2":{"166":1}}],["红黑树也是一种自平衡二叉查找树",{"2":{"166":1}}],["红黑树的算法时间复杂度和",{"2":{"229":1}}],["红黑树的插入效率更高",{"2":{"229":1}}],["红黑树的节点",{"2":{"225":1}}],["红黑树的节点结构",{"0":{"190":1}}],["红黑树的红黑规则",{"2":{"221":1}}],["红黑树的左旋",{"2":{"184":1}}],["红黑树的左子树和右子树的黑色节点的层数是相等的",{"2":{"172":1}}],["红黑树的平衡条件",{"2":{"172":1}}],["红黑树的原则有以下几点",{"2":{"169":1}}],["红黑树的特性",{"0":{"169":1}}],["红黑树的使用要多得多",{"2":{"160":1}}],["红黑树的广泛应用",{"2":{"7":1}}],["红黑树",{"0":{"3":1,"163":1},"1":{"7":1,"12":1,"18":1,"25":1,"33":1,"42":1,"52":1,"62":1,"72":1,"82":1,"90":1,"97":1,"104":1,"111":1,"118":1,"125":1,"132":1,"138":1,"144":1,"148":1,"151":1,"154":1,"157":1,"160":1,"163":1,"166":2,"169":2,"172":2,"175":1,"178":1,"181":1,"184":1,"187":1,"190":1,"193":1,"196":1,"199":1,"201":1,"203":1,"205":1,"207":1,"209":1,"211":1,"213":1,"215":1,"217":1,"219":1,"221":1,"223":1,"225":1,"227":1,"229":1},"2":{"160":3,"163":1}}],["红色情况处理",{"2":{"209":1,"215":1}}],["红色情况",{"2":{"207":1,"209":1,"213":1,"215":2}}],["红色插入",{"2":{"205":1}}],["红色节点不能相连",{"2":{"203":1}}],["红色节点的子节点",{"2":{"169":1}}],["红色属性",{"2":{"169":1,"223":1}}],["红色属性说明",{"2":{"169":1}}],["红色破坏原则的可能性最小",{"2":{"169":1}}],["叶子属性",{"2":{"169":1,"223":1}}],["叶子属性说明",{"2":{"169":1}}],["叶子结点是空的nil",{"2":{"169":1}}],["叶子结点一定是黑色",{"2":{"169":1}}],["叶子节点",{"2":{"151":1,"169":1,"223":1}}],["非空有穷集合",{"2":{"167":1}}],["顶点之间的关系用边表示",{"2":{"170":1}}],["顶点",{"0":{"167":1},"2":{"185":1}}],["顶端插入和删除元素",{"2":{"91":1}}],["虽然红黑树是复杂的",{"2":{"166":1}}],["虽然是一种线性表",{"2":{"14":1}}],["已经存在",{"0":{"196":1}}],["已经使用的索引数量",{"2":{"43":1}}],["已求更高效的查询性能",{"2":{"166":1}}],["主要负责两件事",{"2":{"258":1}}],["主要负责管理tm的插槽",{"2":{"165":1}}],["主要用于处理不同时区的数据",{"2":{"251":1}}],["主要看",{"2":{"1":1}}],["修改为如今的",{"2":{"163":1}}],["修改配置文件中的具体工厂类名即可使用新的皮肤",{"2":{"108":1}}],["修改配置文件",{"2":{"100":1}}],["年被",{"2":{"163":1}}],["年以",{"2":{"15":1}}],["发生故障时",{"2":{"256":1}}],["发明的",{"2":{"163":1}}],["发型",{"2":{"102":2,"109":1}}],["发型等外部特征都有所差异",{"2":{"88":1}}],["插槽是flink中定义的处理资源单元",{"2":{"165":1}}],["插槽的数量限制了tm能够执行的任务数量",{"2":{"162":1}}],["插入后就是",{"2":{"207":1,"209":1}}],["插入节点的父节点为红色",{"0":{"201":1},"1":{"203":1,"205":1,"207":1,"209":1,"211":1,"213":1,"215":1}}],["插入节点的父节点为黑色",{"0":{"199":1}}],["插入节点的",{"0":{"196":1}}],["插入新节点为红色",{"2":{"190":1}}],["插入和删除在平均和最坏情况下都是o",{"2":{"229":1}}],["插入和删除",{"2":{"166":1}}],["插入的元素在不平衡元素的右侧的右侧",{"2":{"157":1}}],["插入的元素在不平衡元素的左侧的左侧",{"2":{"157":1}}],["插入的元素在右侧的不平衡元素的左侧",{"2":{"138":1}}],["插入的元素在左侧的不平衡元素的右侧",{"2":{"125":1}}],["插入的元素在子树",{"2":{"97":1,"111":1}}],["插入删除",{"2":{"20":1,"91":1,"145":1}}],["插入",{"2":{"5":1,"229":1}}],["何为图呢",{"2":{"161":1}}],["线性数据结构的元素满足唯一的线性关系",{"2":{"161":1}}],["线程池该如何处理呢",{"2":{"158":1}}],["线程池中没有空闲线程时",{"2":{"158":1}}],["线程池中的请求",{"2":{"158":1}}],["放宽了树的平衡条件",{"2":{"160":1}}],["正是由于这种严格的平衡条件",{"2":{"160":1}}],["正因为抽象工厂模式存在开闭原则的倾斜性",{"2":{"115":1}}],["要低于普通二叉树bst和链表的最坏情况o",{"2":{"160":1}}],["要删除的节点是什么类型的节点",{"2":{"151":1}}],["请求执行任务必要的资源",{"2":{"159":1}}],["请求就会拒绝",{"2":{"158":1}}],["库和其他资源的jar包",{"2":{"159":1}}],["作用范围限定为算子任务",{"2":{"255":1,"256":1}}],["作用于connectedstreams上",{"2":{"224":1}}],["作自平衡处理",{"2":{"203":1}}],["作业图",{"2":{"159":1}}],["作为连接字符串来连接数据库",{"2":{"107":1}}],["作为该游戏的一个重要组成部分",{"2":{"88":1}}],["控制一个应用程序执行的主进程",{"2":{"159":1}}],["控制调用的先后次序",{"2":{"116":1}}],["消息队列",{"2":{"158":1}}],["消费者",{"2":{"158":1}}],["播放器上的播放列表",{"2":{"158":1}}],["按照时间生成window",{"2":{"237":1}}],["按照指定的数据条数生成一个",{"2":{"237":1}}],["按照",{"2":{"209":1,"215":1}}],["按各个slot共享组最大并行度累加",{"2":{"180":1}}],["按优先级排队",{"2":{"158":1}}],["按钮类",{"2":{"101":2}}],["按钮接口",{"2":{"101":1}}],["异常",{"2":{"158":1}}],["答案是将这些请求放在队列中",{"2":{"158":1}}],["阻塞队列可以看成在队列基础上加了阻塞操作的队列",{"2":{"158":1}}],["阻塞队列",{"2":{"158":1}}],["z",{"2":{"157":4}}],["向下游转发检查点barrier后",{"2":{"265":1}}],["向flink的资源管理器注册自己的可用任务槽",{"2":{"177":1}}],["向左旋转",{"2":{"157":1}}],["向左旋转过程",{"2":{"157":1}}],["向右旋转",{"2":{"157":1}}],["向后移动",{"2":{"155":1}}],["维护avl平衡性",{"2":{"157":1}}],["维护函数调用",{"0":{"126":1}}],["加入节点后",{"2":{"157":1}}],["什么是红黑树",{"0":{"166":1}}],["什么是avl左旋和右旋",{"0":{"157":1}}],["什么是二叉搜索树呢",{"0":{"18":1}}],["问",{"0":{"157":1}}],["问题描述了应该在何时使用模式",{"2":{"28":1}}],["问题",{"2":{"28":2}}],["循环队列中则不一样",{"2":{"155":1}}],["循环队列可以解决顺序队列的假溢出和越界问题",{"2":{"155":1}}],["循环队列",{"0":{"155":1},"2":{"155":2}}],["循环链表",{"0":{"35":1},"2":{"20":1,"35":1}}],["队满",{"2":{"155":1}}],["队头和队尾重合使处理变得麻烦",{"2":{"152":1}}],["队列分为无界队列",{"2":{"158":1}}],["队列分类",{"0":{"149":1},"1":{"152":1,"155":1}}],["队列满的时候",{"2":{"155":1}}],["队列为空的时候就是",{"2":{"155":1}}],["队列的操作方式和堆栈类似",{"2":{"145":1}}],["队列的长度",{"2":{"53":1}}],["队列只允许在后端",{"2":{"145":1}}],["队列简介",{"0":{"145":1}}],["队列",{"0":{"139":1},"1":{"145":1,"149":1,"152":1,"155":1,"158":1},"2":{"145":1,"194":1}}],["除第一个和最后一个外",{"2":{"161":1}}],["除非系统资源耗尽",{"2":{"158":1}}],["除了假溢出问题之外",{"2":{"152":1}}],["除此之外",{"2":{"14":1,"123":1}}],["出度表示从该顶点出去的边的条数",{"2":{"173":1}}],["出队操作阻塞",{"2":{"158":1}}],["出队操作的时候",{"2":{"152":1}}],["出队",{"2":{"152":1}}],["出栈的时间复杂度都为",{"2":{"133":1}}],["找到其前驱或者后驱节点将其替换",{"2":{"151":1}}],["找到说明ulimit的那一节",{"2":{"43":1}}],["若失衡则调整",{"2":{"151":1}}],["若失衡则判断失衡类型",{"2":{"151":1}}],["处理的思路",{"2":{"151":1}}],["略",{"2":{"150":1}}],["总资源由yarn来管理",{"2":{"147":1}}],["总计统计1次",{"2":{"34":1}}],["隔离复杂对象的创建和使用",{"2":{"146":1}}],["后续到达的数据会被缓存",{"2":{"265":1}}],["后端插入前端删除元素",{"2":{"145":1}}],["后进先出",{"2":{"91":1,"98":1,"126":1}}],["唯一的区别在于队列只允许新数据在后端进行添加",{"2":{"145":1}}],["入度表示进入该顶点的边的条数",{"2":{"173":1}}],["入队操作阻塞",{"2":{"158":1}}],["入队",{"2":{"145":1}}],["入栈",{"2":{"133":2}}],["顺序队列中",{"2":{"155":1}}],["顺序队列假溢出",{"2":{"152":1}}],["顺序队列存在",{"2":{"152":1}}],["顺序队列",{"2":{"145":1,"152":1}}],["顺序栈",{"2":{"91":1}}],["尼恩备注记忆要点",{"2":{"144":1}}],["违背了开闭原则",{"2":{"135":1}}],["违背开闭原则",{"2":{"115":1}}],["甚至需要修改抽象层代码",{"2":{"135":1}}],["甚至无需知道具体产品类的类名",{"2":{"128":1}}],["报错",{"2":{"133":1}}],["报告每个cpu的状态",{"2":{"0":1}}],["验证",{"2":{"133":1}}],["判断哪个wm最小",{"2":{"245":1}}],["判断是否失衡",{"2":{"151":1}}],["判断栈是否为空",{"2":{"133":1}}],["判断该字符串是否有效",{"2":{"112":1}}],["确保容量大小",{"2":{"133":1}}],["确保一个类只有一个实例",{"2":{"23":1,"64":1}}],["带权图中的每一条边一个数值表示权值",{"2":{"179":1}}],["带初始容量的构造方法",{"2":{"133":1}}],["带有平衡条件",{"2":{"62":1,"148":1}}],["存入本地的rocksdb中存储",{"2":{"259":1}}],["存储在taskmanager的jvm堆上",{"2":{"259":1}}],["存储密度大",{"2":{"5":1}}],["存放栈中元素的数组",{"2":{"133":1}}],["提交给jobmanager的数据结构",{"2":{"195":1}}],["提高效率",{"2":{"189":1}}],["提示",{"2":{"133":1}}],["提供一个空实现",{"2":{"69":1}}],["提供一个创建一系列相关或相互依赖对象的接口",{"2":{"23":1,"49":1,"64":1}}],["提供一种方法顺序访问一个聚合对象中的各个元素",{"2":{"64":1}}],["提供对shell及其启动的进程的可用资源",{"2":{"43":1}}],["提供随机访问",{"2":{"5":1}}],["覆盖钩子方法",{"2":{"130":1}}],["钩子方法定义在抽象建造者类中",{"2":{"130":1}}],["钩子方法的返回类型通常为",{"2":{"130":1}}],["钩子方法的引入",{"0":{"130":1}}],["钩子方法",{"2":{"130":2}}],["符合栈的",{"2":{"126":1}}],["符合开闭原则",{"2":{"108":1,"129":1}}],["动态扩展",{"2":{"124":1}}],["动态地给一个对象增加一些额外的职责",{"2":{"64":1}}],["毫秒级延迟",{"2":{"124":1}}],["精确一次",{"2":{"124":1,"262":1,"268":1}}],["语义",{"2":{"124":1}}],["语言开发一套图表库",{"2":{"66":1}}],["支持的数据类型",{"0":{"228":1}}],["支持事件时间",{"2":{"124":1}}],["支点",{"2":{"97":1,"111":1,"148":1}}],["建立",{"2":{"229":1}}],["建议还是将",{"2":{"123":1}}],["建造方法中调用建造者对象的部件构造与装配方法",{"2":{"60":1}}],["建造者模式适用环境",{"0":{"146":1}}],["建造者模式所创建的产品一般具有较多的共同点",{"2":{"142":1}}],["建造者模式缺点",{"0":{"142":1}}],["建造者模式优点",{"0":{"136":1}}],["建造者模式应用实例",{"0":{"79":1},"1":{"88":1,"95":1,"102":1,"109":1}}],["建造者模式返回一个完整的复杂产品",{"2":{"69":1}}],["建造者模式与抽象工厂模式都是较为复杂的创建型模式",{"2":{"69":1}}],["建造者模式实现",{"0":{"69":1}}],["建造者模式包含以下",{"2":{"60":1}}],["建造者模式的结构如下图所示",{"2":{"60":1}}],["建造者模式结构图",{"2":{"60":1}}],["建造者模式结构",{"0":{"60":1}}],["建造者模式可以将部分本身和它们得组装过程分开",{"2":{"50":1}}],["建造者模式",{"0":{"41":1},"1":{"50":1,"60":1,"69":1,"79":1,"88":1,"95":1,"102":1,"109":1,"116":1,"123":1,"130":1,"136":1,"142":1,"146":1},"2":{"23":1,"50":1,"55":1,"64":1}}],["待构建产品的组成部分比较多",{"2":{"123":1}}],["省略",{"0":{"123":1},"2":{"123":1}}],["尤其是在一些框架和",{"2":{"122":1}}],["整体性能优于",{"2":{"221":1}}],["整体来说性能要优于",{"2":{"166":1}}],["整体关系的层次结构",{"2":{"64":1}}],["整个系统都要受到影响",{"2":{"120":1}}],["职责过重",{"2":{"120":1}}],["职责链模式",{"2":{"55":1,"64":1}}],["越界",{"2":{"152":1}}],["越底层越具体",{"2":{"117":1}}],["越顶层越抽象",{"2":{"117":1}}],["表示边的集合",{"2":{"161":1}}],["表示顶点的集合",{"2":{"161":1}}],["表示一个图",{"2":{"161":1}}],["表示一个作用与某对象结构中的各个元素的操作",{"2":{"64":1}}],["表达能力越丰富",{"2":{"117":1}}],["表达含义越简明",{"2":{"117":1}}],["离线数据是有界的流",{"2":{"117":1}}],["基础数据类型",{"2":{"228":1}}],["基础上加了几个字段",{"2":{"225":1}}],["基于chandy",{"2":{"263":1}}],["基于代码生成数据流图",{"2":{"180":1}}],["基于上面的原则",{"2":{"169":1}}],["基于数组",{"2":{"158":1}}],["基于链表",{"2":{"158":1}}],["基于工厂角色和产品角色的多态性设计是工厂方法模式的关键",{"2":{"128":1}}],["基于流的世界观",{"2":{"117":1}}],["基站流量调配",{"2":{"89":1}}],["隐藏工厂方法后的日志记录器结构图",{"2":{"114":1}}],["括号之间的对应规则",{"2":{"112":1}}],["遍历",{"2":{"229":1}}],["遍历结束",{"2":{"112":1}}],["遍历字符串",{"2":{"112":1}}],["否则不做任何操作",{"2":{"245":1}}],["否则破坏了红黑树性质5",{"2":{"205":1}}],["否则将执行",{"2":{"130":1}}],["否则将会导致系统出现较大的修改",{"2":{"115":1}}],["否则将stack的栈顶元素与这个括号做比较",{"2":{"112":1}}],["否则可能会发生记录失败",{"2":{"67":1}}],["则可能收到错误结果",{"2":{"247":1}}],["则违反了红黑树性质了",{"2":{"203":1}}],["则顶点",{"2":{"185":1}}],["则",{"2":{"185":1}}],["则直接删除",{"2":{"151":1}}],["则对应的具体建造器",{"2":{"130":1}}],["则不是",{"2":{"112":1}}],["则作为",{"2":{"111":1}}],["则作为原",{"2":{"97":1}}],["比如描述地图上两个城市的关系",{"2":{"179":1}}],["比如父子关系",{"2":{"176":1}}],["比如同学关系",{"2":{"176":1}}],["比如yarn",{"2":{"165":1}}],["比如我们在社交软件上好友关系就可以用图来表示",{"2":{"161":1}}],["比如checkpoints的协调",{"2":{"159":1}}],["比如",{"2":{"112":1,"158":1}}],["比如你按顺序查看了",{"2":{"105":1}}],["同一solt共享组的one",{"2":{"200":1}}],["同时拥有内存级的本地访问速度",{"2":{"259":1}}],["同时",{"2":{"130":1,"160":1}}],["同时还向客户隐藏了哪种具体产品类将被实例化这一细节",{"2":{"128":1}}],["同时还简化了系统结构",{"2":{"123":1}}],["同时保证低延迟和结果准群",{"2":{"110":1}}],["同默认监控",{"2":{"53":1}}],["流",{"2":{"131":1}}],["流处理的演变",{"0":{"110":1}}],["流数据适用场景",{"0":{"89":1}}],["流数据更真实的反映了我们的生活方式",{"2":{"80":1}}],["引入对左右子树高度有限制的平衡二叉树",{"2":{"219":1}}],["引入重载方法后",{"2":{"107":1}}],["引入了平衡二叉树",{"2":{"42":1}}],["示例图如下",{"2":{"105":1}}],["页面从",{"2":{"105":1}}],["页交换速率",{"2":{"53":1}}],["弹出",{"2":{"105":2}}],["面容",{"2":{"102":1,"109":1}}],["面向对象的设计原则概述",{"0":{"16":1}}],["面向对象设计原则",{"0":{"11":1},"1":{"16":1,"22":1,"29":1,"37":1,"46":1,"56":1,"65":1,"75":1}}],["逐步构建复杂产品对象",{"2":{"102":1,"130":1}}],["光头",{"2":{"102":1,"130":2}}],["丑陋",{"2":{"102":1,"130":1}}],["妖",{"2":{"102":1,"130":1}}],["披肩长发",{"2":{"102":1,"109":1}}],["白裙",{"2":{"102":1,"109":1}}],["漂亮",{"2":{"102":1,"109":1}}],["女",{"2":{"102":1,"109":1}}],["飘逸",{"2":{"102":1}}],["盔甲",{"2":{"102":1}}],["英俊",{"2":{"102":1}}],["英雄",{"2":{"102":1}}],["英雄角色建造者",{"2":{"102":1}}],["男",{"2":{"102":1}}],["性别",{"2":{"102":2,"109":1}}],["且关系权值为",{"2":{"185":1}}],["且都为nil",{"2":{"169":1}}],["且成员变量的类型均为",{"2":{"102":1}}],["且易于修改",{"2":{"74":1}}],["考虑到代码的可读性",{"2":{"102":1}}],["工具类提取到",{"2":{"102":1}}],["工具类",{"2":{"101":1,"102":1}}],["工厂类负责创建的对象比较少",{"2":{"127":1}}],["工厂类可以被外界直接调用",{"2":{"38":1}}],["工厂方面模式优",{"0":{"121":1},"1":{"128":1,"134":1,"140":1}}],["工厂方法用来创建客户所需要的产品",{"2":{"128":1}}],["工厂方法的隐藏",{"0":{"114":1}}],["工厂方法的重载",{"0":{"107":1}}],["工厂方法",{"2":{"102":1}}],["工厂方法二",{"2":{"68":2}}],["工厂方法一",{"2":{"68":2}}],["工厂方法模式适用环境",{"0":{"140":1}}],["工厂方法模式的缺点",{"0":{"134":1}}],["工厂方法模式优点",{"0":{"128":1}}],["工厂方法模式针对的是一个产品等级结构",{"2":{"49":1}}],["工厂方法模式最重要的特点是引入了抽象工厂角色",{"2":{"48":1}}],["工厂方法模式实现",{"0":{"48":1}}],["工厂方法模式通过引入工厂等级结构解决了简单工厂模式中工厂类职责太重的问题",{"2":{"40":1}}],["工厂方法模式通过引入抽象的工厂类",{"2":{"31":1}}],["工厂方法模式包含以下",{"2":{"39":1}}],["工厂方法模式提供一个抽象工厂接口来声明抽象工厂方法",{"2":{"39":1}}],["工厂方法模式结构图",{"2":{"39":1}}],["工厂方法模式结构",{"0":{"39":1}}],["工厂方法模式时一种类创建型模式",{"2":{"31":1}}],["工厂方法模式简称为工厂模式",{"2":{"31":1}}],["工厂方法模式概述",{"0":{"31":1}}],["工厂方法模式让一个类的实例化延迟到其子类",{"2":{"23":1,"31":1,"64":1}}],["工厂方法模式",{"0":{"24":1},"1":{"31":1,"39":1,"48":1,"58":1,"67":1,"77":1,"86":1,"93":1,"100":1,"107":1,"114":1,"121":1,"128":1,"134":1,"140":1},"2":{"23":1,"31":1,"55":1,"64":1}}],["工厂创建对象",{"2":{"113":1}}],["工厂列的类名存储在",{"2":{"100":1}}],["工厂角色即工厂类",{"2":{"38":1}}],["工厂角色",{"2":{"38":1}}],["工厂父类负责定义创建产品对象的公共接口",{"2":{"31":1}}],["皮肤工厂",{"2":{"101":2}}],["界面皮肤工厂接口",{"2":{"101":1}}],["界面皮肤库结构示意图",{"2":{"87":1}}],["编译新增的具体日志记录器类和具体日志记录器工厂类",{"2":{"100":1}}],["编译并运行程序",{"2":{"92":1,"93":1,"108":1,"109":1}}],["获取到数据时间戳之后才分配窗口",{"2":{"250":1}}],["获取侧输出流",{"2":{"239":1}}],["获取远程flink环境",{"2":{"204":1}}],["获取包含类名的文本节点",{"2":{"101":1}}],["获取包含类名的文本结点",{"2":{"100":1,"102":1}}],["获得大量的取样数据",{"2":{"0":1}}],["配置文件之后",{"2":{"100":1}}],["配置文件中提取具体类的类名",{"2":{"100":1}}],["配置文件中",{"2":{"100":1}}],["配置文件",{"2":{"100":1,"101":1,"102":1}}],["属性",{"2":{"100":1,"225":1}}],["属于同一个产品族的产品将在一起使用",{"2":{"141":1}}],["属于不同类型的具体产品时就可以使用抽象工厂模式",{"2":{"49":1}}],["属于静态存储形式",{"2":{"5":1}}],["上游任务向下游任务广播自己的wm",{"2":{"245":1}}],["上的插槽",{"2":{"159":1}}],["上面的实例中",{"2":{"100":1}}],["上图中",{"2":{"76":1}}],["反序列化器和比较器",{"2":{"228":1}}],["反转字符串",{"0":{"119":1}}],["反射生成具体建造者对象",{"2":{"102":1}}],["反射",{"2":{"100":1}}],["反射机制来创建对象",{"2":{"100":1}}],["反射机制",{"2":{"100":1}}],["反射机制结合配置文件",{"2":{"100":1}}],["反射机制与配置文件",{"0":{"100":1}}],["反过来则不成立",{"2":{"37":1}}],["简化的简单工厂模式",{"2":{"99":1}}],["简单易于实现",{"2":{"271":1}}],["简单的",{"2":{"116":1}}],["简单来说",{"2":{"46":1,"69":1,"161":1}}],["简单工厂模式优",{"0":{"106":1},"1":{"113":1,"120":1,"127":1}}],["简单工厂模式的简化",{"0":{"99":1}}],["简单工厂模式的核心是工厂类",{"2":{"47":1}}],["简单工厂模式的设计思想和实现过程都比较简单",{"2":{"30":1}}],["简单工厂模式实现",{"0":{"47":1}}],["简单工厂模式包含以下",{"2":{"38":1}}],["简单工厂模式结构图",{"2":{"38":1}}],["简单工厂模式结构",{"0":{"38":1}}],["简单工厂模式在新增一个类型时",{"2":{"31":1}}],["简单工厂模式概述",{"0":{"30":1}}],["简单工厂模式",{"0":{"17":1},"1":{"23":1,"30":1,"38":1,"47":1,"57":1,"66":1,"76":1,"85":1,"92":1,"99":1,"106":1,"113":1,"120":1,"127":1},"2":{"23":1,"30":1}}],["保存点",{"0":{"266":1}}],["保持一个简单的状态",{"2":{"239":1}}],["保证最终结果一致",{"2":{"270":1}}],["保证最坏的情况下",{"2":{"221":1}}],["保证查找操作的最坏时间复杂度也为",{"2":{"219":1}}],["保证当前系统正常运行所需要的最小内存",{"2":{"8":1}}],["保障avl的特性1",{"2":{"111":1}}],["保障",{"2":{"97":1}}],["场景4",{"0":{"138":1,"201":1,"203":1,"205":1,"207":1,"209":1,"211":1,"213":1,"215":1},"1":{"144":1,"203":1,"205":1,"207":2,"209":2,"211":1,"213":2,"215":2}}],["场景3",{"0":{"125":1,"199":1},"1":{"132":1}}],["场景2",{"0":{"111":1,"196":1},"1":{"118":1}}],["场景",{"2":{"97":1,"111":1,"125":1,"138":1,"157":2}}],["场景1",{"0":{"97":1,"193":1},"1":{"104":1}}],["特",{"2":{"237":1}}],["特点",{"2":{"96":2,"237":2,"259":1}}],["特性5",{"2":{"169":1}}],["特性4",{"2":{"169":1}}],["特性",{"2":{"126":1}}],["特性3",{"2":{"62":1,"169":1}}],["特性2",{"2":{"62":1,"169":1}}],["特性1表明",{"2":{"62":1}}],["特性1",{"2":{"62":1,"169":1}}],["事务写入",{"2":{"270":1}}],["事务处理",{"2":{"96":1}}],["事件驱动",{"2":{"117":1}}],["事实上",{"2":{"82":1}}],["游戏角色创建者",{"2":{"102":1}}],["游戏角色创建结构图",{"2":{"95":1}}],["游戏角色类",{"2":{"102":1}}],["游戏角色是一个复杂对象",{"2":{"88":1}}],["原理和checkpoint相同",{"2":{"266":1}}],["原因是",{"2":{"160":1}}],["原x",{"2":{"157":2}}],["原来pivot",{"2":{"148":1}}],["原root的",{"2":{"111":1}}],["原有代码无需修改",{"2":{"108":1,"109":1}}],["原有类库的源代码无需做任何修改",{"2":{"93":1}}],["原型模式",{"0":{"51":1},"2":{"23":1,"55":1,"64":1}}],["更新不及时",{"2":{"249":1}}],["更新watermark快",{"2":{"248":1}}],["更新当且节点的值为插入节点的值",{"2":{"196":1}}],["更细粒度的控制流",{"0":{"230":1},"1":{"231":1,"232":1,"233":1}}],["更换一个具体工厂就变得相对榕溪",{"2":{"129":1}}],["更换图表时只需要改配置文件即可",{"2":{"92":1}}],["更有效率",{"2":{"49":1}}],["假溢出",{"2":{"152":2}}],["假设下图是一个顺序队列",{"2":{"152":1}}],["假设队列中有n个元素",{"2":{"145":1}}],["假设堆栈中有n个元素",{"2":{"91":1}}],["假如你又想回到页面",{"2":{"105":1}}],["假如链表中有n个元素",{"2":{"20":1}}],["假如数组的长度为",{"2":{"5":1}}],["链成一个单链表",{"2":{"188":1}}],["链式队列",{"2":{"145":1,"152":1}}],["链式栈",{"2":{"91":1}}],["链表实现",{"2":{"152":1}}],["链表则相反",{"2":{"73":1}}],["链表没办法做到",{"2":{"63":1}}],["链表通常有一个不保存任何值的",{"2":{"27":1}}],["链表这种数据结构通常在物理内存上是不连续的",{"2":{"27":1}}],["链表分类",{"0":{"20":1},"1":{"27":1,"35":1,"44":1,"54":1}}],["链表不具有数组随机读取的优点",{"2":{"14":1}}],["链表结构可以充分利用计算机内存空间",{"2":{"14":1}}],["链表的插入和删除操作的复杂度为",{"2":{"14":1}}],["链表简介",{"0":{"14":1}}],["链表",{"0":{"9":1,"73":1},"1":{"14":1,"20":1,"27":1,"35":1,"44":1,"54":1,"63":1,"73":1},"2":{"14":1}}],["进行插入操作",{"2":{"225":1}}],["进行插入操作也就是",{"2":{"145":1}}],["进行更新操作",{"2":{"225":1}}],["进行后续处理",{"2":{"203":1}}],["进行调整",{"2":{"148":1}}],["进行调用",{"2":{"130":1}}],["进行删除操作也就是出队",{"2":{"145":1}}],["进行次序颠倒",{"2":{"144":1}}],["进行扩容",{"2":{"133":1}}],["进行合并",{"2":{"123":1}}],["进行左旋",{"2":{"111":1,"209":1}}],["进行对象的实例化",{"2":{"100":1}}],["进行右旋",{"2":{"97":1,"215":1}}],["进行加入数据",{"2":{"91":1}}],["进程造成的错误",{"2":{"53":1}}],["进程创建的速率",{"2":{"53":1}}],["进程数量",{"2":{"43":1}}],["进程",{"0":{"43":1},"2":{"43":1}}],["进程调度算法中",{"2":{"7":1}}],["进程列表中的进程",{"2":{"4":1}}],["进程活动等都可以进行有效的分析",{"2":{"0":1}}],["称为栈顶",{"2":{"91":1}}],["介绍插入元素的平衡过程",{"2":{"90":1}}],["型失衡怎么",{"2":{"132":1}}],["型失衡怎么平衡呢",{"2":{"104":1}}],["型失衡",{"0":{"97":1,"111":1,"125":1,"207":1,"209":1,"213":1,"215":1},"1":{"104":1,"118":1,"132":1},"2":{"90":4,"104":1,"118":1,"209":1}}],["失衡",{"0":{"138":1},"1":{"144":1},"2":{"90":1}}],["失衡的场景就是有限的4个",{"2":{"90":1}}],["失衡子树",{"2":{"82":1}}],["导致avl需要花大量时间在调整上",{"2":{"160":1}}],["导致系统变得很庞大",{"2":{"142":1}}],["导致",{"2":{"90":1}}],["银行和金融业",{"2":{"89":1}}],["电信业",{"2":{"89":1}}],["电商和市场营销",{"2":{"89":1}}],["交通运输业",{"2":{"89":1}}],["传入config",{"2":{"102":1}}],["传统数据处理架构",{"0":{"96":1}}],["传统的数据架构是基于有限数据集的",{"2":{"80":1}}],["传感器实时数据采集和显示",{"2":{"89":1}}],["物理执行图",{"2":{"195":2}}],["物理内存+swap分区",{"2":{"8":2}}],["物理内存使用率",{"2":{"8":1}}],["物联网",{"2":{"89":1}}],["业务流程需要",{"2":{"89":1}}],["业务方法的实现",{"2":{"47":1}}],["试使用建造者模式来实现游戏角色的创建",{"2":{"88":1}}],["再判断是否失衡",{"2":{"151":1}}],["再判断父亲的父节点是否失衡",{"2":{"151":1}}],["再进行相应的调整",{"2":{"151":1}}],["再进行分析和查询",{"2":{"96":1}}],["再左旋",{"2":{"144":1}}],["再右旋",{"2":{"132":1}}],["再旋转顶部",{"2":{"132":1,"144":1}}],["再读取配置文件获取类名字符串",{"2":{"100":1}}],["再将各组成部分装配成一个完整的游戏角色",{"2":{"88":1}}],["再通过",{"2":{"100":1}}],["再通过反射机制创建具体工厂对象",{"2":{"48":1}}],["再通过具体类来进行扩展",{"2":{"29":1}}],["无法使用时",{"2":{"242":1}}],["无向图的邻接矩阵是一个对称矩阵",{"2":{"185":1}}],["无向图和有向图",{"0":{"176":1}}],["无权图和带权图",{"0":{"179":1}}],["无界队列的特点就是可以一直入列",{"2":{"158":1}}],["无需修改已有系统",{"2":{"129":1}}],["无需修改客户端",{"2":{"128":1}}],["无需关心创建细节",{"2":{"128":1}}],["无需关心产品对象的具体组装过程",{"2":{"69":1}}],["无论使用哪个工厂方法",{"2":{"107":1}}],["无论是何种造型的游戏角色",{"2":{"88":1}}],["留着光头并穿着一件刺眼的黑衣",{"2":{"88":1}}],["及其丑陋",{"2":{"88":1}}],["及它的子节点和孙子节点即可",{"2":{"82":1}}],["恶魔角色建造者",{"2":{"102":1}}],["恶魔",{"2":{"88":1,"102":1,"130":2}}],["拥有着美丽的面容和披肩的长发",{"2":{"88":1}}],["天使的外观",{"2":{"109":1}}],["天使角色建造者",{"2":{"102":1}}],["天使",{"2":{"88":1,"102":1}}],["服装",{"2":{"88":1,"102":2,"109":1}}],["脸型",{"2":{"88":1,"102":1}}],["脸型等多个组成部分",{"2":{"88":1}}],["角色控制器",{"2":{"102":1}}],["角色类型",{"2":{"102":1}}],["角色也会随着不断升级而拥有更加强大的能力",{"2":{"88":1}}],["角色根据不同的游戏情节和统计数据",{"2":{"88":1}}],["技能等",{"2":{"88":1}}],["魔法",{"2":{"88":1}}],["玩家可以在游戏中扮演虚拟世界中的一个特定角色",{"2":{"88":1}}],["蓝色边框的文本框和蓝色边框的组合框",{"2":{"87":1}}],["风格的皮肤则提供浅蓝色的按钮",{"2":{"87":1}}],["风格的皮肤将提供浅绿色的按钮",{"2":{"87":1}}],["绿色边框的文本框和绿色边框的组合框",{"2":{"87":1}}],["文档对象",{"2":{"100":1,"102":1}}],["文本框类",{"2":{"101":2}}],["文本框接口",{"2":{"101":1}}],["文本框",{"2":{"87":1}}],["文件路径",{"2":{"102":1}}],["文件中",{"2":{"100":1}}],["文件",{"2":{"100":3}}],["文件日志记录",{"2":{"86":1,"93":1}}],["文件日志记录器工厂类",{"2":{"86":1}}],["文件日志记录器",{"2":{"86":1}}],["文件和锁表状态",{"2":{"43":1}}],["文件和其他内核表的统计信息",{"2":{"0":1}}],["文件状态",{"0":{"43":1}}],["日志记录工厂接口",{"2":{"86":1}}],["日志记录器接口",{"2":{"86":1}}],["日志记录器结构图",{"2":{"77":1}}],["柱状图类",{"2":{"85":1}}],["栈中元素数量",{"2":{"133":1}}],["栈既可以通过数组实现",{"2":{"133":1}}],["栈的容量",{"2":{"133":1}}],["栈的实现",{"0":{"133":1}}],["栈的常见应用常见应用场景",{"0":{"98":1},"1":{"105":1,"112":1,"119":1,"126":1}}],["栈常用一维数组或链表来实现",{"2":{"91":1}}],["栈简介",{"0":{"91":1}}],["栈",{"0":{"84":1},"1":{"91":1,"98":1,"105":1,"112":1,"119":1,"126":1,"133":1},"2":{"91":1,"197":1}}],["右子节点大于当前节点",{"2":{"225":1}}],["右子节点",{"2":{"225":1}}],["右子树大于",{"2":{"148":1}}],["右子树",{"2":{"111":1}}],["右子树也分别为二叉排序树",{"2":{"18":1}}],["右子树上所有结点的值均大于或等于它的根结点的值",{"2":{"18":1}}],["右左结构",{"0":{"138":1},"1":{"144":1}}],["右左结构失衡",{"2":{"90":1}}],["右侧的不平衡元素",{"2":{"111":1}}],["右侧的不平衡子树的右侧",{"2":{"111":1}}],["右右结构失衡",{"0":{"111":1},"1":{"118":1},"2":{"90":1}}],["右旋差不多",{"2":{"184":1}}],["右旋操作",{"2":{"184":1}}],["右旋转",{"2":{"157":1}}],["右旋+左旋",{"0":{"138":1},"1":{"144":1}}],["右旋过程中",{"2":{"97":1}}],["右旋",{"0":{"97":1,"184":1},"1":{"104":1},"2":{"175":1,"184":1}}],["右旋是顺时针转",{"2":{"82":1}}],["右旋即可",{"2":{"82":1}}],["旋转为自己的右子树",{"2":{"184":1}}],["旋转作为自己的左子树",{"2":{"181":1}}],["旋转在图上像是将",{"2":{"148":1}}],["旋转的次数比红黑树要多",{"2":{"229":1}}],["旋转的方式并没有区别",{"2":{"148":1}}],["旋转的方式",{"2":{"132":1,"144":1}}],["旋转的反向",{"2":{"104":1,"118":1,"132":1,"144":1}}],["旋转",{"2":{"82":1,"227":1}}],["旋转之前",{"2":{"82":1}}],["首先是找到一个合适的插入点",{"2":{"225":1}}],["首先我们将括号间的对应规则存放在",{"2":{"112":1}}],["首先确定旋转支点",{"2":{"82":1}}],["首先将需要创建的各种不同产品对象的相关代码封装到不同的类中",{"2":{"30":1}}],["高度平衡的二叉搜索树",{"2":{"229":1}}],["高度相同",{"2":{"172":1}}],["高可用",{"2":{"124":1}}],["高吞吐",{"2":{"80":1}}],["高层模块不应该依赖低层模块",{"2":{"16":1,"46":1}}],["低延迟",{"2":{"80":1,"124":1,"259":1}}],["低耦合的指导方阵",{"2":{"22":1}}],["充当指挥者",{"2":{"102":1}}],["充当复杂产品对象",{"2":{"102":1}}],["充当抽象建造者",{"2":{"102":1}}],["充当抽象工厂",{"2":{"101":1}}],["充当抽象工厂角色",{"2":{"86":1}}],["充当抽象产品",{"2":{"101":3}}],["充当抽象产品角色",{"2":{"86":1}}],["充当抽象产品类",{"2":{"85":1}}],["充当具体建造者",{"2":{"102":3}}],["充当具体工厂角色",{"2":{"86":2}}],["充当具体工厂",{"2":{"77":1,"101":2}}],["充当具体产品角色",{"2":{"86":2}}],["充当具体产品",{"2":{"77":1,"101":6}}],["充当具体产品类",{"2":{"76":1,"85":3}}],["充当工厂类",{"2":{"76":1,"85":1}}],["图的搜索",{"0":{"191":1},"1":{"194":1,"197":1}}],["图的存储",{"0":{"182":1},"1":{"185":1,"188":1}}],["图的基本概念",{"0":{"164":1},"1":{"167":1,"170":1,"173":1,"176":1,"179":1}}],["图至少有一个顶点",{"2":{"167":1}}],["图中的数据元素",{"2":{"167":1}}],["图在我们日常生活中的例子很多",{"2":{"161":1}}],["图就是由顶点的有穷非空集合和顶点之间的边组成的集合",{"2":{"161":1}}],["图是一种较为复杂的非线性结构",{"2":{"161":1}}],["图",{"0":{"161":1}}],["图表工厂类",{"2":{"85":1}}],["图表库结构图",{"2":{"76":1}}],["图解数据结构",{"0":{"2":1},"1":{"5":1,"9":1,"14":1,"20":1,"27":1,"35":1,"44":1,"54":1,"63":1,"73":1,"84":1,"91":1,"98":1,"105":1,"112":1,"119":1,"126":1,"133":1,"139":1,"145":1,"149":1,"152":1,"155":1,"158":1,"161":1,"164":1,"167":1,"170":1,"173":1,"176":1,"179":1,"182":1,"185":1,"188":1,"191":1,"194":1,"197":1}}],["松耦合的类一旦被修改",{"2":{"75":1}}],["尽量创建松耦合的类",{"2":{"75":1}}],["来确定是否失衡",{"2":{"229":2}}],["来判断游戏角色是否有头发",{"2":{"130":1}}],["来一个左旋的动画",{"2":{"111":1}}],["来一个右旋的动画",{"2":{"97":1}}],["来生成具体工厂对象",{"2":{"100":1}}],["来降低现有对象之间的耦合度",{"2":{"75":1}}],["来解决这个问题",{"2":{"28":1,"112":1}}],["说明",{"2":{"172":1}}],["说明i",{"2":{"26":1}}],["说话",{"2":{"75":1}}],["陌生人",{"2":{"75":1}}],["方便使用",{"2":{"102":1}}],["方便地复用成功的设计和体系结构",{"2":{"74":1}}],["方法提供了函数runtimecontext的一些信息",{"2":{"233":1}}],["方法是richfunction的初始化方法",{"2":{"233":1}}],["方法是个被调用以及多个",{"2":{"69":1}}],["方法返回",{"2":{"130":1}}],["方法返回类型声明",{"2":{"46":1}}],["方法名一般为",{"2":{"130":1}}],["方法单独封装在",{"2":{"123":1}}],["方法较为复杂",{"2":{"123":1}}],["方法的执行顺序",{"2":{"130":1}}],["方法的执行提供了一个流程模板",{"2":{"123":1}}],["方法的调用次序",{"2":{"123":1}}],["方法的参数可能不一样",{"2":{"69":1}}],["方法定义了",{"2":{"123":1}}],["方法定义为静态",{"2":{"123":1}}],["方法中调用",{"2":{"123":1}}],["方法中的参数去掉",{"2":{"123":1}}],["方法调用的先后次序等",{"2":{"69":1}}],["方法无需实现",{"2":{"69":1}}],["方法时有所区别",{"2":{"69":1}}],["方法可以给产品对象的成员变量设值",{"2":{"69":1}}],["方法将该对象传入指挥者类中",{"2":{"60":1}}],["方法来传入具体类的对象",{"2":{"46":1}}],["方法",{"2":{"30":1,"69":2,"123":3,"130":3}}],["下游任务会收到多个分区的不同wm",{"2":{"245":1}}],["下图所展示的就是图这种数据结构",{"2":{"161":1}}],["下面我们使用数组来实现一个栈",{"2":{"133":1}}],["下面讨论几种",{"2":{"116":1}}],["下面的average是在多次统计后的平均值",{"2":{"34":1}}],["下左图为",{"2":{"72":1}}],["生命周期",{"2":{"233":1}}],["生成可执行的执行流图",{"2":{"180":1}}],["生成不同类型的骑车配件",{"2":{"69":1}}],["生产者",{"2":{"158":1}}],["生产一组具体产品",{"2":{"59":1}}],["客户类代码片段如下",{"2":{"69":1}}],["客户端将作业提交给yarn的资源管理器",{"2":{"177":1}}],["客户端不知道它所需要的对象的类",{"2":{"140":1}}],["客户端不必知道产品内部组成的细节",{"2":{"136":1}}],["客户端不应该依赖那些它不需要的接口",{"2":{"16":1,"56":1}}],["客户端只知道传入工厂类的参数",{"2":{"127":1}}],["客户端只需要知道具体建造者的类型便可通过指挥者类调用建造者的相关方法",{"2":{"69":1}}],["客户端只需要调用工厂类的工厂方法并传入相应的参数即可得到一个产品对象",{"2":{"30":1}}],["客户端只需知道具体建造者类型即可",{"2":{"69":1}}],["客户端代码片段如下",{"2":{"123":1}}],["客户端代码修改如下",{"2":{"114":1}}],["客户端代码需要重新编译",{"2":{"92":1}}],["客户端无需调用工厂方法创建产品对象",{"2":{"114":1}}],["客户端无需知道创建的具体产品类的类名",{"2":{"113":1}}],["客户端使用对象",{"2":{"113":1}}],["客户端测试类",{"2":{"85":1,"86":1,"101":1,"102":1}}],["客户端通过指定具体建造者类型来指导",{"2":{"69":1}}],["客户端通过选择具体工厂来生成所需对象",{"2":{"69":1}}],["客户端一般只需要与指挥者进行交互",{"2":{"60":1}}],["客户端针对抽象工厂编程",{"2":{"48":1}}],["通常用watermark机制结合window来实现",{"2":{"243":1}}],["通常在flink中会有多个tm运行",{"2":{"162":1}}],["通常表示为",{"2":{"161":1}}],["通常",{"2":{"69":1}}],["通过这种方式来启动检查点",{"2":{"265":1}}],["通过时间戳分配器访问事",{"2":{"241":1}}],["通过task",{"2":{"186":1}}],["通过slot",{"2":{"180":1}}],["通过客户端提交到flink集群jobmanager",{"2":{"180":1}}],["通过颜色属性的增加",{"2":{"169":1}}],["通过钩子方法来控制产品的构建",{"2":{"130":1}}],["通过扩展达到增强其功能的目的",{"2":{"115":1}}],["通过指挥者创建完整的建造者对象",{"2":{"102":1}}],["通过类名生成实例对象并将其返回",{"2":{"100":2,"101":1,"102":1}}],["通过引入钩子方法",{"2":{"130":1}}],["通过引入配置文件",{"2":{"113":1}}],["通过引入配置文件并使用反射机制可以实现在不修改客户端代码的基础上更换具体工厂类",{"2":{"93":1}}],["通过引入一个合理的",{"2":{"75":1}}],["通过工具类读取配置文件中的字符串参数",{"2":{"92":1}}],["通过工厂类创建产品对象",{"2":{"47":1}}],["通过静态方法创建产品",{"2":{"85":1}}],["通过分析发现",{"2":{"88":1}}],["通过分析",{"2":{"77":1,"94":1,"95":1}}],["通过对配件进行组装返回一辆完整的汽车",{"2":{"69":1}}],["通过调用",{"2":{"69":1}}],["通过调用工厂类的工厂方法即可得到产品对象",{"2":{"47":1}}],["通过设置不同的参数即可得到不同类型的图表",{"2":{"66":1}}],["通过一两个词来描述模式的问题",{"2":{"28":1}}],["通过头结点我们可以遍历整个链表",{"2":{"27":1}}],["此队列不是还剩一个元素",{"2":{"152":1}}],["此外",{"2":{"69":1}}],["此外还提供了工厂方法",{"2":{"69":1}}],["此时路径会比其他路径多一个黑色节点",{"2":{"205":1}}],["此时会出现两种情况",{"2":{"201":1}}],["此时对应的客户端代码也将发生修改",{"2":{"123":1}}],["此时在工厂类中直接调用产品类的业务方法",{"2":{"114":1}}],["此时可以提供一个重载的工厂方法",{"2":{"107":1}}],["此时可以考虑将一些相关的产品组成一个",{"2":{"40":1}}],["此时",{"2":{"72":1,"97":1,"111":1,"123":1}}],["此时树的结构也类似于链表结构",{"2":{"42":1}}],["返回的流中包含每一次聚合的结果",{"2":{"220":1}}],["返回旋转后新的根节点x",{"2":{"157":2}}],["返回栈中元素的个数",{"2":{"133":1}}],["返回栈顶元素不出栈",{"2":{"133":2}}],["返回栈顶元素并出栈",{"2":{"133":2}}],["返回",{"2":{"112":1}}],["返回具体日志记录器对象",{"2":{"100":1}}],["返回一个完整的游戏角色对象",{"2":{"102":1}}],["返回一个完整的产品对象",{"2":{"69":1}}],["返回一个具体产品类的实例",{"2":{"39":1}}],["返回产品对象",{"2":{"69":1}}],["部件可以是任意类型",{"2":{"69":1}}],["复杂对象是指那些包含多个成员变量的对象",{"2":{"69":1}}],["那就是比较浪费空间",{"2":{"185":1}}],["那两者之间就存在一条边",{"2":{"170":1}}],["那什么是复杂对象呢",{"2":{"69":1}}],["那么这种特殊情况最适合应用广播状态",{"2":{"256":1}}],["那么选择",{"2":{"229":1}}],["那么无需做处理",{"2":{"203":1}}],["那么此时插入子树的红黑层数的情况是",{"2":{"203":1}}],["那么该父节点不可能为根节点",{"2":{"201":1}}],["那么就用带权图来表示",{"2":{"179":1}}],["那么就可以用无权图表示二者的关系",{"2":{"179":1}}],["那么在表示",{"2":{"176":1}}],["那么",{"2":{"176":1}}],["那么hashmap直接使用avl树来替换链表就好了",{"2":{"160":1}}],["那么现在判断队列是否为满的条件就是",{"2":{"155":1}}],["那么将节点删除",{"2":{"151":1}}],["那么日志记录器结构图可修改为如下图所示",{"2":{"114":1}}],["那么集合中的元素也都是朋友",{"2":{"75":1}}],["那么建造者模式就是一个骑车组装常",{"2":{"69":1}}],["那么我们怎么避免这种情况呢",{"2":{"42":1}}],["那么类型",{"2":{"37":1}}],["注意",{"2":{"147":1,"205":1}}],["注",{"2":{"67":1}}],["注入和接口注入",{"2":{"46":1}}],["现使用工厂方法模式设计该系统",{"2":{"67":1}}],["现使用简单工厂模式来设计图表库",{"2":{"66":1}}],["初始化数据库日志记录器",{"2":{"86":1,"107":2}}],["初始化参数的设置过程较为复杂",{"2":{"67":1}}],["初始化设置折线图",{"2":{"85":1}}],["初始化设置饼状图",{"2":{"85":1}}],["初始化设置柱状图",{"2":{"85":1,"92":1}}],["初始化设置",{"2":{"47":2}}],["折线图类",{"2":{"85":1}}],["折线图",{"2":{"66":1}}],["饼状图类",{"2":{"85":1}}],["饼状图",{"2":{"66":1}}],["该系统分析函数的输入和返回类型",{"2":{"228":1}}],["该皮肤库需要具备良好的灵活性和可扩展性",{"2":{"87":1}}],["该类主要有两个作用",{"2":{"69":1}}],["该软件公司图表库设计人员希望为应用系统开发人员提供一套灵活易用的图表库",{"2":{"66":1}}],["该图表库可以为应用系统提供多种不同外观的图表",{"2":{"66":1}}],["该方法用于从xml配置文件中提取具体类类名",{"2":{"101":1}}],["该方法用于从",{"2":{"100":1}}],["该方法也可以由抽象建造者实现",{"2":{"60":1}}],["该方法可以根据所传入的参数不同创建不同的具体产品对象",{"2":{"30":1}}],["该方案描述了对象和类之间的相互作用",{"2":{"28":1}}],["某游戏软件公司决定开发一款基于角色扮演的多人在线网络游戏",{"2":{"88":1}}],["某软件公司要开发一套界面皮肤库",{"2":{"87":1}}],["某软件公司要基于",{"2":{"66":1}}],["某系统运行日志记录器",{"2":{"67":1}}],["某种类型的具体产品由专门的具体工厂创建",{"2":{"39":1}}],["应该时所有任务都恰好处理完一个相同输入数据的时候",{"2":{"261":1}}],["应选择红黑树",{"2":{"229":1}}],["应用的",{"2":{"237":1}}],["应用迪米特法则",{"2":{"75":1}}],["应用场景",{"0":{"63":1}}],["应使用组合或聚合",{"2":{"65":1}}],["少用继承",{"2":{"65":1}}],["聚合关系",{"2":{"65":1}}],["聚合复用原则",{"2":{"65":1}}],["给定一个只包括",{"2":{"112":1}}],["给定一个语言",{"2":{"64":1}}],["给某一个对象提供一个代理或占位符",{"2":{"64":1}}],["直到整体平衡为止",{"2":{"203":1}}],["直到根节点",{"2":{"151":2}}],["直到有一个对象能够处理它为止",{"2":{"64":1}}],["直接插入无需做自平衡",{"2":{"199":1}}],["直接把插入节点作为根节点就可以了",{"2":{"193":1}}],["直接获取指定位置的数组元素的值即可",{"2":{"185":1}}],["直接使用一个二维数组即可",{"2":{"185":1}}],["直接使用工厂对象来调用产品对象的业务方法",{"2":{"114":1}}],["直接使用工厂对象即可调用所创建的产品对象中的业务方法",{"2":{"114":1}}],["直接在",{"2":{"123":1}}],["直接",{"2":{"0":1}}],["避免将一个请求的发送者与接收者耦合在一起",{"2":{"64":1}}],["运用共享技术有效地支持大量细粒度对象的复用",{"2":{"64":1}}],["运行时架构",{"0":{"153":1},"1":{"156":1,"159":1,"162":1,"165":1,"168":1,"171":1,"174":1,"177":1,"180":1,"183":1,"186":1,"189":1,"192":1,"195":1,"198":1,"200":1},"2":{"131":1}}],["运行客户端测试类即可使用新的日志记录方式",{"2":{"100":1}}],["运行在哪颗cpu上",{"2":{"53":1}}],["运行队列的长度",{"2":{"4":1}}],["为什么还需要红黑树",{"0":{"221":1}}],["为什么还需要平衡二叉树",{"0":{"219":1}}],["为什么选择用红黑树呢",{"2":{"160":1}}],["为什么选择flink",{"0":{"80":1}}],["为其父节点的右子节点",{"2":{"209":1,"213":1}}],["为其父节点的左子节点",{"2":{"207":1,"215":1}}],["为啥说其较为复杂呢",{"2":{"161":1}}],["为之提供一个默认实现",{"2":{"130":1}}],["为后续维护工作带来诸多麻烦",{"2":{"115":1}}],["为增加新产品族提供方便",{"2":{"115":1}}],["为",{"2":{"111":1,"123":1}}],["为子系统中的一组接口提供一个统一的入口",{"2":{"64":1}}],["为了避免当只有一个元素的时候",{"2":{"152":1}}],["为了避免这种特殊的情况发生",{"2":{"42":1}}],["为了简化系统结构",{"2":{"123":1}}],["为了简化简单工厂模式",{"2":{"99":1}}],["为了进一步简化客户端的使用",{"2":{"114":1}}],["为了读取该配置文件",{"2":{"100":1}}],["为了更好地封装记录器的初始化过程并保证多种记录器切换的灵活性",{"2":{"67":1}}],["为了更好地理解抽象工厂模式",{"2":{"40":1}}],["为了确保该原则的应用",{"2":{"46":1}}],["为了满足开闭原则",{"2":{"29":1}}],["就会被包含在之后的检查点中",{"2":{"264":1}}],["就会将执行图分发到真正运行他们的tm上",{"2":{"159":1}}],["就向下游更新广播的wm",{"2":{"245":1}}],["就通过旋转来恢复",{"2":{"229":1}}],["就通过变色和旋转来恢复",{"2":{"229":1}}],["就是应用状态的一致性检查点",{"2":{"261":1}}],["就是一个全窗口函数",{"2":{"239":1}}],["就是对这个节点的变色",{"2":{"227":1}}],["就是当前节点的父节点",{"2":{"225":1}}],["就是红黑树的",{"2":{"172":1}}],["就可以了",{"2":{"225":1}}],["就不用关注方向",{"2":{"176":1}}],["就要进行平衡操作",{"2":{"169":1}}],["就需要进行旋转以求达到平衡",{"2":{"160":1}}],["就指向这个空闲位置",{"2":{"155":1}}],["就扩展功能而言",{"2":{"64":1}}],["就应该曾加这个值了",{"2":{"43":1}}],["果需要存储的数据元素的个数不确定",{"2":{"63":1}}],["本地的状态管理",{"2":{"258":1}}],["本地网卡接口的名称",{"2":{"34":1}}],["本节将介绍如何在不修改客户端代码的基础上更换或增加新的日志记录方式",{"2":{"100":1}}],["本实例的结构如图所示",{"2":{"95":1}}],["本实例的结构图如下图所示",{"2":{"94":1}}],["本实例结构如下图所示",{"2":{"77":1}}],["本质上是带了平衡功能的二叉查找树",{"2":{"62":1,"148":1}}],["本身首先是一棵二叉搜索树",{"2":{"148":1}}],["本身首先是一棵",{"2":{"62":1}}],["大家可以数一数邻接表中所存储的元素的个数以及图中边的条数",{"2":{"188":1}}],["大话数据结构",{"2":{"152":1}}],["大",{"2":{"62":1}}],["大多数情况下",{"2":{"46":1}}],["小",{"2":{"62":1}}],["根节点是黑色",{"2":{"201":1}}],["根节点是黑色的",{"2":{"193":1}}],["根节点一定是黑色",{"2":{"169":2,"223":1}}],["根结点",{"2":{"172":1}}],["根结点而言",{"2":{"62":1}}],["根属性",{"2":{"169":1,"223":1}}],["根据输入数据流中定义的键来维护和访问",{"2":{"255":1}}],["根据不同情况",{"2":{"229":1}}],["根据树的平衡因子",{"2":{"229":1}}],["根据某些特征把一个datastream拆分成两个或者多个datastream",{"2":{"222":1}}],["根据性质4",{"2":{"201":1,"203":1}}],["根据性质2",{"2":{"201":1}}],["根据streamapi代码生成的最初的图",{"2":{"195":1}}],["根据红黑树性质2",{"2":{"193":1}}],["根据红黑树的特性5",{"2":{"172":1}}],["根据前面的内容",{"2":{"161":1}}],["根据上面第一条原则",{"2":{"72":1}}],["根据所传入的参数不同可以创建不同的产品对象",{"2":{"47":1}}],["根据范围分类",{"2":{"36":1}}],["根据目的分类",{"2":{"36":1}}],["完全平衡",{"2":{"229":1}}],["完全一致",{"2":{"225":1}}],["完全符合开闭原则",{"2":{"100":1,"109":1,"128":1}}],["完成复杂对象的建造",{"2":{"60":1}}],["完美的情况下",{"2":{"25":1}}],["既不恢复丢失的状态",{"2":{"268":1}}],["既然avl树可以保证二叉树的平衡",{"2":{"160":1}}],["既有左右子树都有",{"2":{"151":1}}],["既可以是抽象类",{"2":{"60":1}}],["既要连接数据库",{"2":{"22":1}}],["举个例子",{"0":{"57":1,"58":1},"1":{"66":1,"67":1,"76":1,"77":1,"85":1,"86":1,"92":1,"93":1},"2":{"72":1}}],["灵活性较差",{"2":{"56":1}}],["太大的接口将违背接口隔离原则",{"2":{"56":1}}],["策略模式让算法可以独立于使用它的客户而变化",{"2":{"64":1}}],["策略模式",{"2":{"55":1,"64":1}}],["观察者模式",{"2":{"55":1,"64":1}}],["备忘录模式",{"2":{"55":1,"64":1}}],["中对复杂产品的构建进行精细的控制",{"2":{"130":1}}],["中定义一个方法",{"2":{"130":1}}],["中提供逐步构建复杂产品对象的",{"2":{"123":1}}],["中的时间语义",{"0":{"241":1}}],["中的",{"0":{"235":1},"1":{"236":1,"237":1,"238":1,"239":1}}],["中的红黑树的结构定义为例子",{"2":{"190":1,"225":1}}],["中的体现就是会抛出java",{"2":{"158":1}}],["中的数据来初始化数据库日志记录器",{"2":{"107":1}}],["中的连接字符串来连接数据库",{"2":{"107":1}}],["中",{"2":{"105":3,"112":1,"123":1}}],["中实现了这些",{"2":{"69":1}}],["中实现",{"2":{"69":1}}],["中声明了一系列抽象的",{"2":{"69":1}}],["中常用的日志记录工具有",{"2":{"67":1}}],["中介者模式使各对象之间不需要显示地相互引用",{"2":{"64":1}}],["中介者模式",{"2":{"55":1,"64":1}}],["中公开了这一数据结构",{"2":{"52":1}}],["迭代器模式",{"2":{"55":1,"64":1}}],["命令模式",{"2":{"55":1,"64":1}}],["命令详解",{"0":{"0":1}}],["代表关系的强度",{"2":{"179":1}}],["代码如下",{"2":{"123":1,"130":2}}],["代码片段如下",{"2":{"123":1}}],["代码省略",{"2":{"86":3,"107":6}}],["代码设计经验的总结",{"2":{"28":1}}],["代理模式",{"2":{"55":1,"64":1}}],["享元模式",{"2":{"55":1,"64":1}}],["外观模式定义了一个高层接口",{"2":{"64":1}}],["外观模式",{"2":{"55":1,"64":1}}],["装饰模式提供一种比使用子类更加灵活的替代方案",{"2":{"64":1}}],["装饰模式",{"2":{"55":1,"64":1}}],["组合和表达的细节",{"2":{"141":1}}],["组合框类",{"2":{"101":2}}],["组合框接口",{"2":{"101":1}}],["组合框等界面元素",{"2":{"87":1}}],["组合多个对象形成树形结构以表示具有部分",{"2":{"64":1}}],["组合模式让客户端可以统一对待单个对象和组合对象",{"2":{"64":1}}],["组合模式",{"2":{"55":1,"64":1}}],["组成",{"2":{"5":1}}],["桥接模式",{"2":{"55":1,"64":1}}],["模型",{"2":{"158":1}}],["模板方式模式",{"2":{"64":1}}],["模板方法模式使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤",{"2":{"64":1}}],["模板方法模式",{"2":{"55":1}}],["模式说明",{"2":{"64":1}}],["模式类别",{"2":{"64":1}}],["模式名称",{"2":{"23":1,"28":1,"64":1}}],["模式是一种直到",{"2":{"15":1}}],["模式是在特定环境下人们解决某类重复出现问题的一套成功或有效的解决方案",{"2":{"15":1}}],["模式之父",{"2":{"15":1}}],["模式",{"0":{"177":1},"2":{"15":1,"30":1,"49":1}}],["模式的诞生与定义",{"0":{"15":1}}],["适用性",{"2":{"229":1}}],["适用环境",{"0":{"127":1}}],["适配器模式让那些接口不兼容的类可以一起工作",{"2":{"64":1}}],["适配器模式",{"2":{"55":2,"64":1}}],["适应及扩展的难易程度",{"2":{"16":1}}],["行为型模式",{"2":{"55":1,"64":1}}],["范围",{"2":{"55":1}}],["构建的事务对应着checkpoint",{"2":{"270":1}}],["构成一个环",{"2":{"54":1}}],["构造注入是指通过构造函数来传入具体类的对象",{"2":{"46":1}}],["信息包括",{"2":{"53":1}}],["监控状态同iostat",{"2":{"53":1}}],["块设备的活跃信息",{"2":{"53":1}}],["默认的时间属性就是",{"2":{"241":1}}],["默认新插入的节点为红色",{"2":{"190":1}}],["默认情况下",{"2":{"189":1}}],["默认和每个任务的最大并行度有关",{"2":{"180":1}}],["默认容量为8",{"2":{"133":1}}],["默认监控",{"2":{"53":1}}],["默认值是1",{"2":{"0":1}}],["十",{"0":{"53":1}}],["树查找",{"2":{"229":1}}],["树更高",{"2":{"229":2}}],["树相比",{"2":{"166":1}}],["树类似",{"2":{"166":1}}],["树形结构的元素之间的关系是任意的",{"2":{"161":1}}],["树形数据结构的元素之间有着明显的层次关系",{"2":{"161":1}}],["树本质上还是一棵二叉搜索树",{"2":{"148":1}}],["树平衡总结",{"0":{"148":1}}],["树会通过节点的旋转进行进行平衡",{"2":{"72":1}}],["树会自动进行调整使得以上三条原则仍然成立",{"2":{"62":1}}],["树最长的2节点与最短的8节点高度差为1",{"2":{"72":1}}],["树",{"2":{"62":2,"148":1,"163":1,"166":1,"229":1}}],["树而言",{"2":{"62":1}}],["树的区别",{"0":{"229":1}}],["树的左旋",{"2":{"184":1}}],["树的旋转",{"2":{"82":1}}],["树的旋转时",{"2":{"82":1}}],["树的平衡功能",{"0":{"72":1}}],["树的特性",{"0":{"62":1}}],["树的节点正好从大到小的插入",{"2":{"42":1}}],["树中任何节点的两个子树的高度最大差别为1",{"2":{"52":1}}],["树是最先发明的自平衡二叉查找树",{"2":{"52":1}}],["平衡二叉搜索树",{"2":{"172":1}}],["平衡二叉树也叫",{"2":{"52":1}}],["平衡二叉树",{"0":{"52":1},"1":{"62":1,"72":1,"82":1}}],["平衡呢",{"2":{"118":1,"132":1,"144":1}}],["平衡的调整过程",{"0":{"82":1},"2":{"82":1}}],["平衡因子",{"2":{"62":1,"148":1}}],["平均每次次磁盘i",{"2":{"26":1}}],["平均负载统计分析",{"0":{"4":1}}],["平均负载分析",{"2":{"0":1}}],["创造者模式概述",{"0":{"50":1}}],["创建一个栈",{"2":{"112":1}}],["创建文档对象",{"2":{"101":1}}],["创建文件",{"2":{"86":1}}],["创建文件日志记录器对象",{"2":{"86":1}}],["创建文件都能",{"2":{"48":1}}],["创建",{"2":{"100":1,"102":1}}],["创建数据库日志记录器对象",{"2":{"86":1}}],["创建折线图",{"2":{"85":1}}],["创建饼状图",{"2":{"85":1}}],["创建柱状图",{"2":{"85":1,"92":1}}],["创建产品对象",{"2":{"69":1}}],["创建具体的产品对象",{"2":{"39":1}}],["创建所需的产品对象",{"2":{"38":1}}],["创建型模式一览表",{"2":{"23":1}}],["创建型模式对类的实例化过程进行了抽象",{"2":{"23":1}}],["创建型模式",{"0":{"23":1},"2":{"23":1,"55":1,"64":1}}],["与常规列表状态的区别在于",{"2":{"256":1}}],["与常规函数不同",{"2":{"233":1}}],["与机器相关",{"2":{"241":1}}],["与时间无关",{"2":{"237":1}}],["与平衡二叉树的选择操作类似",{"2":{"227":1}}],["与当前",{"2":{"225":1}}],["与",{"2":{"166":1}}],["与只相反的方向是",{"2":{"132":1,"144":1}}],["与众多常用存储系统的连接",{"2":{"124":1}}],["与右边",{"2":{"118":1}}],["与左边相反的方向",{"2":{"104":1}}],["与失衡的方向相反",{"2":{"104":1,"118":1,"132":1,"144":1}}],["与工厂方法模式一样",{"2":{"68":1}}],["与工厂方法模式相比",{"2":{"49":1}}],["与其不同的是avl通过机制保证其自身的平衡",{"2":{"52":1}}],["与简单工厂模式相比",{"2":{"48":1}}],["还有表示颜色的",{"2":{"225":1}}],["还有一种更简单的处理方式",{"2":{"123":1}}],["还需要把插入节点设置为黑色",{"2":{"193":1}}],["还分为出度和入度",{"2":{"173":1}}],["还是用上面的图",{"2":{"155":1}}],["还包括实例的创建和实例类型的判断等",{"2":{"100":1}}],["还包括架构模式",{"2":{"15":1}}],["还可以输出特定的一些事件",{"2":{"252":1}}],["还可以控制是否需要执行某个",{"2":{"130":1}}],["还可以对客户端隐藏工厂方法",{"2":{"114":1}}],["还可以提供一个方法返回创建好的复杂产品对象",{"2":{"60":1}}],["还可以负责产品对象的初始化工作以及一些资源和环境配置工作",{"2":{"48":1}}],["静态工厂方法",{"2":{"47":1,"85":1}}],["典型的增量聚合函数有",{"2":{"239":1}}],["典型的具体建造者类代码如下",{"2":{"69":1}}],["典型的具体产品类的代码如下",{"2":{"47":1}}],["典型的客户端代码片段如下",{"2":{"48":1}}],["典型的工厂的代码如下",{"2":{"47":1}}],["典型的抽象产品类代码的如下",{"2":{"47":1}}],["声明抽象业务方法",{"2":{"47":1}}],["公共方法的实现",{"2":{"47":1}}],["关联关系",{"2":{"65":1}}],["关注",{"2":{"176":1}}],["关注如何一步一步地创建一个包含多个组成部分得复杂对象",{"2":{"50":1}}],["关注对象的创建过程",{"2":{"23":1}}],["关键字来创建具体的工厂类",{"2":{"100":1}}],["关键字来创建工厂对象",{"2":{"100":1}}],["关键字来创建对象",{"2":{"47":1}}],["关键字来直接创建产品对象",{"2":{"47":1}}],["目标",{"2":{"80":1}}],["目标一致",{"2":{"46":1}}],["目的",{"2":{"28":1,"55":1}}],["种设计模式的简要说明",{"0":{"64":1}}],["种模式一览表",{"0":{"55":1}}],["种",{"2":{"46":1}}],["常见应用场景",{"0":{"158":1}}],["常见avl面试题",{"0":{"154":1},"1":{"157":1,"160":1}}],["常见链表分类",{"2":{"20":1}}],["常用命令",{"0":{"53":1}}],["常用的注入方式有",{"2":{"46":1}}],["依赖注入是指当一个对象要与其他对象发生依赖关系时",{"2":{"46":1}}],["依赖倒转原则是手段",{"2":{"46":1}}],["依赖倒转原则是面向对象设计的主要实现机制之一",{"2":{"46":1}}],["依赖倒转原则要求在程序代码中传递参数时或在关联关系中尽量引用层次高的抽象层类",{"2":{"46":1}}],["依赖倒转原则要求针对接口编程",{"2":{"46":1}}],["依赖倒转原则",{"0":{"46":1},"2":{"16":1,"46":1}}],["满足开闭原则的要求",{"2":{"46":1}}],["疯狗则将无法调用到在子类中增加的新方法",{"2":{"46":1}}],["包中",{"2":{"102":1}}],["包含了所有可以并发执行的任务",{"2":{"159":1}}],["包含多个组成部件",{"2":{"60":1}}],["包含两个指针",{"2":{"44":1}}],["包括状态一致性",{"2":{"255":1}}],["包括抽象工厂类",{"2":{"115":1}}],["包括类的方法",{"2":{"100":1}}],["包括不要和",{"2":{"75":1}}],["包括某个",{"2":{"69":1}}],["包括值类型和引用类型",{"2":{"69":1}}],["包括文件句柄",{"2":{"43":1}}],["包括请求队列等待时间",{"2":{"26":1}}],["能fork出多少个子进程等",{"2":{"43":1}}],["能够将软件模块中对象的创建和对象的使用分离",{"2":{"23":1}}],["跟file",{"2":{"43":1}}],["第",{"2":{"194":6,"197":6}}],["第三者",{"2":{"75":1}}],["第三个表示能够打开文件句柄的最大值",{"2":{"43":1}}],["第一列有增有减",{"2":{"43":1}}],["第一个表示已经分配了的文件描述符数量",{"2":{"43":1}}],["第二个表示空闲的文件句柄数量",{"2":{"43":1}}],["他会自动将状态的访问范围限定为当前数据的key",{"2":{"257":1}}],["他就是继承",{"2":{"225":1}}],["他们在1962年的论文",{"2":{"52":1}}],["他里面包括3个数字",{"2":{"43":1}}],["他是简单工厂模式的核心",{"2":{"38":1}}],["或者从保存点",{"2":{"256":1}}],["或者把一个黑色的节点变成红色",{"2":{"227":1}}],["或者不存在",{"2":{"205":1}}],["或者遇上socket",{"2":{"43":1}}],["或者",{"2":{"43":1,"242":1}}],["或多态工厂模式",{"2":{"31":1}}],[">>",{"2":{"43":1}}],[">",{"2":{"43":1,"100":2,"101":1,"102":1,"157":2}}],["被系统使用的文件句柄数量",{"2":{"43":1}}],["被创建的实例通常都具有共同的父类",{"2":{"23":1,"30":1}}],["九",{"0":{"43":1}}],["演变而来",{"2":{"42":1}}],["搜索的时候",{"2":{"42":1}}],["成链表",{"2":{"42":1}}],["退化成为了链表",{"2":{"42":1}}],["退化成为了链表的特殊bst",{"2":{"42":1}}],["退化",{"2":{"42":1}}],["很可能导致这条支路的黑色节点比其他支路的要多1个",{"2":{"169":1}}],["很多人在左旋和右旋有时候弄不明白",{"2":{"82":1}}],["很多面向对象编程语言中都提供了接口",{"2":{"29":1}}],["很容易",{"2":{"42":1}}],["有时仅为了排序",{"2":{"229":1}}],["有时候",{"2":{"99":1,"114":1}}],["有时候可能需要一个工厂可以提供多种产品对象",{"2":{"40":1}}],["有关系",{"2":{"185":1}}],["有关系时",{"2":{"185":1}}],["有的关系是有方向的",{"2":{"176":1}}],["有的关系是双向的",{"2":{"176":1}}],["有更多的类需要编译和运行",{"2":{"134":1}}],["有效字符串需满足",{"2":{"112":1}}],["有状态的流式处理",{"0":{"103":1}}],["有些成员变量的类型需要自定义",{"2":{"102":1}}],["有了平衡二叉树",{"0":{"221":1}}],["有了二叉搜索树",{"0":{"219":1}}],["有了",{"2":{"100":1}}],["有右子树",{"2":{"97":1}}],["有利于复用",{"2":{"75":1}}],["有可能出现这样一种情况",{"2":{"42":1}}],["先预提交",{"2":{"272":1}}],["先把窗口所有数据收集起来",{"2":{"239":1}}],["先看看红黑树的节点结构",{"2":{"225":1}}],["先看红黑树的节点结构",{"2":{"190":1}}],["先进先出",{"2":{"145":1}}],["先引入两个概念",{"2":{"40":1}}],["先来看看",{"2":{"7":1}}],["势必会增加系统的开销",{"2":{"40":1}}],["只能在富函数中使用",{"2":{"257":1}}],["只能生产一种产品",{"2":{"40":1}}],["只是被放在了同一个流中",{"2":{"224":1}}],["只是分析问题时所站的角度不同而已",{"2":{"46":1}}],["只有一个直接前趋和一个直接后继",{"2":{"161":1}}],["只不过资源由yarn来分配",{"2":{"147":1}}],["只需增加一族新的具体组件并对应提供一个新的具体工厂",{"2":{"108":1}}],["只需修改静态工厂方法中的参数即可",{"2":{"92":1}}],["只需要增加具体产品并对应增加一个新的具体工厂",{"2":{"115":1}}],["只需要修改配置文件即可",{"2":{"108":1,"109":1}}],["只需要执行以下",{"2":{"100":1}}],["只需要对应增加一个新的具体工厂类",{"2":{"93":1}}],["只需要对抽象层进行扩展",{"2":{"46":1}}],["只需要关心具体建造者的类型",{"2":{"69":1}}],["只需要知道目标位置元素的上一个元素即可",{"2":{"14":1}}],["只允许在有序的线性数据集合的一端",{"2":{"91":1}}],["只要有可能",{"2":{"75":1}}],["只要指明一个产品所处的产品族以及它所属的等级结构就可以唯一确定这个产品",{"2":{"40":1}}],["只与你的直接朋友通信",{"2":{"75":1}}],["并发出一个检查点barrier",{"2":{"265":1}}],["并发能力高",{"2":{"96":1}}],["并发能力差",{"2":{"96":1}}],["并拥有一些生命周期方法",{"2":{"233":1}}],["并为每个数据类型生成特定的序列化器",{"2":{"228":1}}],["并不是一个具体的数据结构",{"2":{"195":1}}],["并行度",{"0":{"183":1}}],["并行的任务",{"2":{"180":1}}],["并将具有相同键的所有数据",{"2":{"257":1}}],["并将作业提交给jobmaster",{"2":{"177":1}}],["并将返回值改为",{"2":{"130":1}}],["并入队两个元素",{"2":{"152":1}}],["并进行相应的平衡判断",{"2":{"151":1}}],["并从父亲节点开始往上看",{"2":{"151":1}}],["并使得相同的创建过程可以创建不同的产品",{"2":{"146":1}}],["并向客户端返回一个完整的产品对象",{"2":{"116":1}}],["并实现其中的工厂方法",{"2":{"100":1}}],["并实例化具体建造者对象",{"2":{"60":1}}],["并返回一个实例对象",{"2":{"100":1,"101":1}}],["并通过存储再其中的类名字符串反射生成对象",{"2":{"100":1}}],["并身穿一袭白裙",{"2":{"88":1}}],["并以一种标准的形式供广大开发人员所用",{"2":{"74":1}}],["并让它们可以相互替换",{"2":{"64":1}}],["并在该对象之外保存这个状态",{"2":{"64":1}}],["并在抽象产品类中声明一些抽象方法",{"2":{"47":1}}],["并给定一个解释器",{"2":{"64":1}}],["并由代理对象来控制对原对象的访问",{"2":{"64":1}}],["并提供一个全局访问点来访问这个唯一实例",{"2":{"64":1}}],["并修改配置文件",{"2":{"46":1}}],["并可由客户端调用",{"2":{"39":1}}],["并且用来计算某个结果的所有数据",{"2":{"255":1}}],["并且父节点是祖父节点的右子节点",{"0":{"211":1},"1":{"213":1,"215":1}}],["并且节点的父节点是祖父节点的左子节点",{"2":{"205":1}}],["并且插在父节点的左子节点",{"0":{"205":1},"1":{"207":1,"209":1}}],["并且在实践中是高效的",{"2":{"166":1}}],["并且在一定程度上节约设计成本",{"2":{"74":1}}],["并且还是一张有向图",{"2":{"161":1}}],["并且",{"2":{"155":2,"185":1}}],["并且这个栈具有push",{"2":{"133":1}}],["并且满足",{"2":{"98":1}}],["并且沿着这条链传递请求",{"2":{"64":1}}],["并且通过复制这个原型来后创建新的对象",{"2":{"64":1}}],["并且通过复制这个原型来创建新的对象",{"2":{"23":1}}],["并且不需要经常添加和删除数据的话",{"2":{"63":1}}],["并且需要经常添加和删除数据的话",{"2":{"63":1}}],["并且该职责被完整的封装在一个类中",{"2":{"22":1}}],["并且该职责被完整地封装在一个类中",{"2":{"16":1}}],["并且容量有限",{"2":{"5":1}}],["并且是使用一块连续的内存来存储",{"2":{"5":1}}],["也不重播丢失的数据",{"2":{"268":1}}],["也不应该重复计算",{"2":{"267":1}}],["也不会删除已有的产品等级结构",{"2":{"115":1}}],["也将状态表示为数据的列表",{"2":{"256":1}}],["也将退化成",{"2":{"219":1}}],["也能在",{"2":{"221":1}}],["也是黑色节点",{"2":{"205":1}}],["也关心关系的强度",{"2":{"179":1}}],["也肯定是",{"2":{"176":1}}],["也可能为满",{"2":{"155":1}}],["也可以很方便地增加新的产品族",{"2":{"141":1}}],["也可以通过链表来实现",{"2":{"133":1}}],["也可以通过配置文件和反射机制实现",{"2":{"60":1}}],["也可以是黑色",{"2":{"169":1}}],["也可以是接口",{"2":{"60":1}}],["也可以是抽象类或者具体类",{"2":{"48":1,"68":1}}],["也无需修改其他大的具体工厂和具体产品",{"2":{"128":1}}],["也会导致",{"2":{"90":1}}],["也属于二叉搜索树的一种",{"2":{"52":1}}],["也就是一段时间没有接收到新数据就会生成新的窗口",{"2":{"237":1}}],["也就是任务管理器",{"2":{"159":1}}],["也就是",{"2":{"97":1,"111":1}}],["也就是说",{"2":{"62":1,"148":1}}],["也就是说系统中某个session及其启动的每个进程能打开多少个文件描述符",{"2":{"43":1}}],["也就是产品对象的公共父类",{"2":{"39":1}}],["也引入了红黑树",{"2":{"7":1}}],["由状态流应用的一致性检查点",{"2":{"261":1}}],["由同一并行任务所处理的所有数据都可以访问到相同的状态",{"2":{"256":1}}],["由一个可插入的组件决定",{"2":{"258":1}}],["由一个任务维护",{"2":{"255":1}}],["由一个工厂来统一生产",{"2":{"40":1}}],["由一系列事件组合一个指定时间长度的",{"2":{"237":1}}],["由于红黑树满足",{"2":{"225":1}}],["由于插入的节点是红色的",{"2":{"199":1}}],["由于avl树必须保证左右子树平衡",{"2":{"160":1}}],["由于考虑到系统的可扩展性",{"2":{"134":1}}],["由于这种隔离",{"2":{"129":1}}],["由于",{"2":{"123":1}}],["由于它提供了功能更为强大的工厂类并且具备较好的可扩展性",{"2":{"122":1}}],["由于使用了静态工厂方法",{"2":{"120":1}}],["由于工厂类集中了所有产品的创建逻辑",{"2":{"120":1}}],["由于在使用基类对象的地方都可以使用子类对象",{"2":{"37":1}}],["由于在简单工厂模式中用于创建实例的方法通常是静态",{"2":{"30":1}}],["由上图可知",{"2":{"39":1,"59":1,"60":1}}],["具备更好的灵活性和可扩展性",{"2":{"93":1}}],["具备以下特性",{"2":{"18":1}}],["具有不同的能力",{"2":{"88":1}}],["具体过程如下图所示",{"2":{"194":1,"197":1}}],["具体见下图",{"2":{"169":1}}],["具体",{"2":{"100":1}}],["具体创造过程在",{"2":{"69":1}}],["具体建造者创建该产品的内部表示并定义它的装备过程",{"2":{"60":1}}],["具体建造者",{"2":{"60":1}}],["具体含义如下",{"2":{"43":1}}],["具体工厂实现了抽象工厂",{"2":{"68":1}}],["具体工厂类",{"2":{"107":1}}],["具体工厂类在实现工厂方法时处理创建具体产品对象之外",{"2":{"48":1}}],["具体工厂类实现了工厂方法",{"2":{"48":1}}],["具体工厂",{"2":{"39":1,"59":1}}],["具体工厂和具体产品一一对应",{"2":{"39":1}}],["具体产品对象的创建由其子类负责",{"2":{"48":1}}],["具体产品",{"2":{"39":1,"59":1}}],["具体产品角色",{"2":{"38":1}}],["封装了各种产品对象的公有方法",{"2":{"38":1}}],["负责实现创建所有产品实例的内部逻辑",{"2":{"38":1}}],["都会被包含在当前分界线所属的检查点中",{"2":{"264":1}}],["都会持续往后移动",{"2":{"152":1}}],["都分区到同一个算子任务中",{"2":{"257":1}}],["都属于这个任务的状态",{"2":{"255":1}}],["都包含相同数目的黑色节点",{"2":{"169":2,"172":1,"223":1}}],["都在添加和删除的时候通过旋转操作保持二叉树的平衡",{"2":{"166":1}}],["都可以通过旋转来调整",{"2":{"148":1}}],["都是黑色",{"2":{"169":1}}],["都是添加到队尾",{"2":{"152":1}}],["都是有效字符串",{"2":{"112":1}}],["都是通过本身的建树原则来控制树的层数和节点位置",{"2":{"42":1}}],["都需要逐步创建其组成部分",{"2":{"88":1}}],["都代换",{"2":{"37":1}}],["都有类型为",{"2":{"37":1}}],["教授的姓氏命名",{"2":{"37":1}}],["利斯科夫",{"2":{"37":1}}],["芭芭拉",{"2":{"37":1}}],["套接字使用",{"2":{"34":1}}],["接下来按照",{"2":{"148":1}}],["接口充当抽象工厂",{"2":{"77":1}}],["接口充当抽象产品",{"2":{"77":1}}],["接口充当抽象产品类",{"2":{"76":1}}],["接口",{"2":{"60":1}}],["接口也不能太大",{"2":{"56":1}}],["接口不能太小",{"2":{"56":1}}],["接口注入是指通过在接口种声明的业务方法来传入具体类的对象",{"2":{"46":1}}],["接口隔离原则",{"0":{"56":1},"2":{"16":1,"56":1}}],["接受的段",{"2":{"34":1}}],["相同",{"2":{"229":1}}],["相同并行度的",{"2":{"200":1}}],["相当于增加了空间的消耗",{"2":{"169":1}}],["相当于上述dev",{"2":{"34":1}}],["相反的方向",{"2":{"118":1}}],["相互补充",{"2":{"46":1}}],["相比于数组会占用更多的空间",{"2":{"14":1}}],["网路设备的状态信息",{"2":{"53":1}}],["网络接口错误",{"2":{"34":1}}],["网络接口统计信息",{"2":{"34":1}}],["网络设备发送端每秒钟丢掉的网络包的数目",{"2":{"34":1}}],["网络使用分析",{"0":{"34":1}}],["网卡设备接收端每秒钟丢掉的网络包的数目",{"2":{"34":1}}],["网卡名称",{"2":{"34":1}}],["八",{"0":{"34":1}}],["=0",{"2":{"185":1}}],["=1",{"2":{"185":1}}],["=n",{"2":{"185":1}}],["==",{"2":{"133":4}}],["=",{"2":{"33":1,"47":3,"48":2,"69":6,"85":5,"86":4,"100":14,"101":12,"102":19,"107":3,"112":6,"114":2,"123":6,"130":2,"133":12,"157":4,"160":1,"190":1,"225":1}}],["所创建的产品类型均要相同",{"2":{"107":1}}],["所以红黑树的插入效率更高",{"2":{"229":1}}],["所以需要将",{"2":{"203":1}}],["所以插入节点总是存在祖父节点",{"2":{"201":1}}],["所以当顶点",{"2":{"185":1}}],["所以称红黑树的这种平衡为黑色完美平衡",{"2":{"172":1}}],["所以在插入的时候很容易出现不平衡的情况",{"2":{"160":1}}],["所以引入两个指针",{"2":{"152":1}}],["所以是左旋",{"2":{"118":1}}],["所以是右旋",{"2":{"104":1}}],["所以",{"2":{"62":1,"132":1,"144":1,"199":1}}],["所以它也被称为高度平衡树",{"2":{"52":1}}],["所以我们从了解",{"2":{"42":1}}],["所以就找到啦",{"2":{"33":1}}],["所以再查看它的右子节点",{"2":{"33":1}}],["所以再查看它的左子节点",{"2":{"33":1}}],["所有事件都得到了处理",{"2":{"268":1}}],["所有",{"2":{"233":1}}],["所有节点的左右子树高度差的绝对值不超过1",{"2":{"229":1}}],["所有的flink程序都有三步组成",{"2":{"192":1}}],["所有的具体工厂都实现了抽象工厂中定义的那些公共接口",{"2":{"129":1}}],["所有的网络状态信息",{"2":{"53":1}}],["所有产品类的公共业务方法",{"2":{"47":1}}],["所有创建对象的工厂类都必须实现该接口",{"2":{"39":1}}],["所有被创建的对象都充当这个角色的某个具体类的实例",{"2":{"38":1}}],["所有引用基类的地方必须能透明地使用其子类的对象",{"2":{"37":1}}],["所有引用基类的地方必须透明地使用其子类的对象",{"2":{"16":1}}],["所有报告的总和",{"2":{"0":1}}],["系统中有多于一个的产品族",{"2":{"141":1}}],["系统中类的个数将成增加",{"2":{"134":1}}],["系统扩展困难",{"2":{"120":1}}],["系统扩展更方便",{"2":{"48":1,"69":1}}],["系统每秒作为buffer使用内存页",{"2":{"53":1}}],["系统将具有很好的灵活性",{"2":{"46":1}}],["系统级别",{"2":{"43":1}}],["系统提供一个与产品等级接口对应的工厂等级结构",{"2":{"31":1}}],["系统调用的使用情况",{"2":{"0":1}}],["然后保存起来",{"2":{"245":1}}],["然后进行红黑树的平衡处理",{"2":{"225":1}}],["然后进行左旋",{"2":{"82":1}}],["然后指向左子节点",{"2":{"225":1}}],["然后继续",{"2":{"197":1}}],["然后根据失衡情况调整",{"2":{"151":1}}],["然后修改配置文件",{"2":{"109":1}}],["然后压入到",{"2":{"105":1}}],["然后压入",{"2":{"105":1}}],["然后在客户端代码中修改具体工厂类的类名",{"2":{"93":1}}],["然后将barrier继续向下游转发",{"2":{"265":1}}],["然后将原数组拷贝进去",{"2":{"73":1}}],["然后将结果返回",{"2":{"69":1}}],["然后通过",{"2":{"100":1}}],["然后通过指挥者类的构造函数或者",{"2":{"60":1}}],["然后通过计算数据和比例来表达系统的当前运行状态",{"2":{"0":1}}],["然后提供一个工厂类用于创建各种产品",{"2":{"30":1}}],["不仅不丢失",{"2":{"268":1}}],["不仅指定",{"2":{"130":1}}],["不丢失事件",{"2":{"268":1}}],["不暂停整个应用",{"2":{"263":1}}],["不稳定",{"2":{"259":1}}],["不过flink处理迟到数据的机制可以解决这个问题",{"2":{"247":1}}],["不查找或查找次数很少",{"2":{"229":1}}],["不超过三次选择就能解决",{"2":{"221":1}}],["不超过两次选择就可以解决",{"2":{"221":1}}],["不一定关注",{"2":{"176":1}}],["不是以整体的高度来约束的",{"2":{"172":1}}],["不难看出",{"2":{"148":1}}],["不适合使用建造者模式",{"2":{"142":1}}],["不带初始容量的构造方法",{"2":{"133":1}}],["不管基于数组还是链表",{"2":{"133":1}}],["不关心如何创建对象",{"2":{"127":1}}],["不会重复写入外部系统",{"2":{"270":1}}],["不会产生大量同一时间的wm",{"2":{"249":1}}],["不会影响红黑树的平衡",{"2":{"199":1}}],["不会造成工厂方法中的业务逻辑太过复杂",{"2":{"127":1}}],["不会在设计完成之后再向系统中增加新的产品等级结构",{"2":{"115":1}}],["不会对关联的类造成太大影响",{"2":{"75":1}}],["不再直接使用",{"2":{"100":1}}],["不做介绍",{"2":{"90":1}}],["不同slot之间内存内存资源隔离",{"2":{"189":1}}],["不同类型的游戏角色",{"2":{"88":1}}],["不同的任务开启不同的线程",{"2":{"180":1}}],["不同的皮肤将提供视觉效果不同的按钮",{"2":{"87":1}}],["不同的具体建造者在实现",{"2":{"69":1}}],["不同的具体工厂可以创建不同的产品",{"2":{"48":1}}],["不同的具体工厂可以创建不同的具体产品",{"2":{"48":1}}],["不同的具体产品类可以提供不同的实现",{"2":{"47":1}}],["不要将失衡问题扩大到整个树来看",{"2":{"82":1}}],["不要针对实现编程",{"2":{"46":1}}],["不应该强迫客户依赖于那些他们不用的方法",{"2":{"56":1}}],["不利于维护",{"2":{"56":1}}],["不能完全保证",{"2":{"271":1}}],["不能由相同或不同算子的另一个子任务访问",{"2":{"256":1}}],["不能有两个红色节点相连",{"2":{"201":1}}],["不能设计一个包罗万象的产品类",{"2":{"47":1}}],["不能使用cat",{"2":{"1":1}}],["不针对具体问题",{"2":{"28":1}}],["各自的职责和协作方式",{"2":{"28":1}}],["以确保任务的事件时间时钟在向前推进",{"2":{"244":1}}],["以自动获取类型信息",{"2":{"228":1}}],["以某个结点作为支点",{"2":{"184":1}}],["以某个节点作为支点",{"2":{"181":1}}],["以换取插入",{"2":{"166":1}}],["以提供启动tm进程的容器",{"2":{"165":1}}],["以左子树或右子树进行代替",{"2":{"151":1}}],["以上两种对",{"2":{"123":1}}],["以不同的方式对产品对象进行创建",{"2":{"107":1}}],["以不同的方式来创建产品对象",{"2":{"68":1}}],["以参数形式传入到当前对象方法中的对象",{"2":{"75":1}}],["以便开发人员可以专注于应用的逻辑",{"2":{"255":1}}],["以便后续启动flink相关组件的容器",{"2":{"177":1}}],["以便客户端能够直接调用",{"2":{"123":1}}],["以便能够在将来增加一些新类型的图表",{"2":{"66":1}}],["以便更好地理解模式并方便开发人员之间的交流",{"2":{"28":1}}],["以及将检查点",{"2":{"258":1}}],["以及注册定时事件",{"2":{"252":1}}],["以及事件序列",{"2":{"131":1}}],["以及支持可撤销的操作",{"2":{"64":1}}],["以及数据类型的转换等",{"2":{"46":1}}],["以及这些组成成分的相互关系",{"2":{"28":1}}],["以",{"2":{"37":1,"97":1,"111":1,"190":1,"225":1}}],["结果及分析",{"0":{"92":1,"93":1,"108":1,"109":1}}],["结果的准确性和良好的容错性",{"2":{"80":1}}],["结构的",{"2":{"225":1}}],["结构图如下所示",{"2":{"39":1}}],["结构型模式",{"2":{"55":1,"64":1}}],["结构型",{"2":{"36":1}}],["结局方案描述了设计模式的组成成分",{"2":{"28":1}}],["结点只有一个后继指针",{"2":{"27":1}}],["结点结构所站存储量",{"2":{"5":1}}],["结点本身所占存储量",{"2":{"5":1}}],["实力类图",{"0":{"94":1}}],["实时数据是一个没有界线的流",{"2":{"117":1}}],["实时性低",{"2":{"96":1}}],["实时性高",{"2":{"96":1}}],["实时检测异常行为",{"2":{"89":1}}],["实时结算和通知推送",{"2":{"89":1}}],["实时报警",{"2":{"89":1}}],["实例代码",{"0":{"85":1,"86":1,"101":1,"102":1}}],["实例代码和相关设计模式",{"2":{"28":1}}],["实例类图",{"0":{"76":1,"77":1,"95":1}}],["实例说明",{"0":{"66":1,"67":1,"87":1,"88":1}}],["实现方式",{"2":{"270":1}}],["实现思想",{"2":{"270":1}}],["实现udf函数",{"0":{"230":1},"1":{"231":1,"232":1,"233":1}}],["实现生活中的派对",{"2":{"158":1}}],["实现7",{"2":{"124":1}}],["实现了对象创建和使用的分离",{"2":{"113":1}}],["实现了在抽象工厂中声明的工厂方法",{"2":{"39":1}}],["实现浏览器的回退和前进功能",{"0":{"105":1}}],["实现各个部件的具体构造和装配方法",{"2":{"60":1}}],["实现抽象产品接口中声明的业务方法",{"2":{"59":1}}],["实现业务方法",{"2":{"47":1}}],["实现灵活的内存动态管理",{"2":{"14":1}}],["效果描述了模式应用的效果以及在使用模式时应权衡的问题",{"2":{"28":1}}],["效果",{"2":{"28":2}}],["解决办法是在水位线到达之前输出的一个近似结果",{"2":{"247":1}}],["解决办法有两种",{"2":{"155":1}}],["解决办法就是",{"2":{"155":1}}],["解决方案和效果",{"2":{"28":1}}],["解决方案",{"2":{"28":2}}],["解释器模式",{"2":{"55":1,"64":1}}],["解法和效果",{"2":{"15":1}}],["经过分类编目的",{"2":{"28":1}}],["多线程",{"2":{"180":1}}],["多个task共用yarn资源",{"2":{"147":1}}],["多数人知晓的",{"2":{"28":1}}],["多路复用技术的",{"2":{"7":1}}],["尾结点通常指向",{"2":{"27":1}}],["头结点",{"2":{"27":1}}],["节点或者",{"2":{"225":1}}],["节点进行左旋",{"2":{"213":1}}],["节点进行右旋",{"2":{"207":1}}],["节点改为黑色",{"2":{"203":1}}],["节点的父节点",{"2":{"225":1}}],["节点的左子树",{"2":{"184":1}}],["节点的右子树",{"2":{"181":1}}],["节点的颜色由红变黑或由黑变红",{"2":{"178":1}}],["节点的两边",{"2":{"148":1}}],["节点非黑即红",{"2":{"169":2,"223":1}}],["节点被标记为红色和黑色两种颜色",{"2":{"169":1}}],["节点只有左子树或只有右子树",{"2":{"151":1}}],["节点类型",{"2":{"151":1}}],["节点向上提",{"2":{"148":1}}],["节点",{"2":{"27":1,"148":1,"225":2}}],["指针指向数组下标为",{"2":{"155":1}}],["指针指向队列最后一个元素的下一个位置",{"2":{"152":1}}],["指针指向对头元素",{"2":{"152":1}}],["指针移动到数组之外",{"2":{"152":1}}],["指挥者类",{"2":{"116":1,"130":1}}],["指挥者类的深入讨论",{"0":{"116":1},"1":{"123":1,"130":1}}],["指挥者的示例代码如下",{"2":{"69":1}}],["指挥者针对抽象建造者编程",{"2":{"69":1}}],["指挥者与抽象建造者之间存在关联关系",{"2":{"60":1}}],["指挥者又称为导演类",{"2":{"60":1}}],["指挥者",{"2":{"60":1}}],["指向最后一个节点",{"2":{"54":1}}],["指向",{"2":{"54":1}}],["指向后一个节点",{"2":{"44":1}}],["指向后面的节点",{"2":{"27":1}}],["指向前一个节点",{"2":{"44":1}}],["指软件能够被重复使用的难易程度",{"2":{"16":1}}],["指软件能够被理解",{"2":{"16":1}}],["扇区",{"2":{"26":1}}],["因而按照",{"2":{"91":1}}],["因为所有算子都会保存检查点并恢复其所有状态",{"2":{"262":1}}],["因为所有创建的具体产品对象都是其子类对象",{"2":{"38":1}}],["因为不可能同时存在两个相连的红色节点",{"2":{"203":1}}],["因为父节点为黑色的概率较大",{"2":{"190":1}}],["因为在无向图中",{"2":{"185":1}}],["因为可以很方便地替换具体建造者或增加新的具体建造",{"2":{"136":1}}],["因为只要聚焦到",{"2":{"82":1}}],["因为",{"2":{"33":3,"42":1}}],["因为链表中每个节点存放的还有指向其他节点的指针",{"2":{"14":1}}],["因此在增加或者删除节点的时候",{"2":{"229":1}}],["因此在程序中尽量使用基类类型来对对象进行定义",{"2":{"37":1}}],["因此其使用范围受到一定的限制",{"2":{"142":1}}],["因此只需改变具体工厂的实例就可以在某种程度上改变整个软件系统的行为",{"2":{"129":1}}],["因此可以将",{"2":{"123":1}}],["因此要求设计人员在设计之初就能够考虑全面",{"2":{"115":1}}],["因此简单工厂模式又被称为静态工厂方法",{"2":{"30":1}}],["因此",{"2":{"27":1}}],["因此加上",{"2":{"26":1}}],["会返回通知给sourc任务",{"2":{"265":1}}],["会将状态作为内存中的对象进行管理",{"2":{"259":1}}],["会将这个结点设置为红色",{"2":{"169":1}}],["会话窗口",{"2":{"237":1}}],["会随机重新分区",{"2":{"198":1}}],["会得到一个四叉树",{"2":{"172":1}}],["会循环中反复从队列中获取任务来执行",{"2":{"158":1}}],["会转变到原root点",{"2":{"148":1}}],["会给系统带来一些额外的开销",{"2":{"134":1}}],["会报错",{"2":{"43":1}}],["会显示dev253",{"2":{"26":1}}],["会出现一个问题",{"2":{"25":1}}],["七",{"0":{"26":1}}],["又可称作虚拟构造器模式",{"2":{"31":1}}],["又叫二叉搜索树",{"2":{"25":1}}],["又要生成相关的统计图表",{"2":{"22":1}}],["又要对表格进行操作",{"2":{"22":1}}],["一条数据不应该丢失",{"2":{"267":1}}],["一条路走到黑",{"2":{"197":2}}],["一致性检查点",{"0":{"261":1,"269":1}}],["一样的节点",{"2":{"225":2}}],["一种优化技术",{"2":{"200":1}}],["一种常用的解决方案",{"2":{"92":1}}],["一直走到没有后继节点",{"2":{"197":1}}],["一直到根节点",{"2":{"151":1}}],["一定是黑色",{"2":{"169":2,"223":1}}],["一定比",{"2":{"62":1}}],["一旦红黑树",{"2":{"175":1}}],["一旦这样",{"2":{"160":1}}],["一旦它获取到的足够的资源",{"2":{"159":1}}],["一旦添加新产品就不得不修改工厂逻辑",{"2":{"120":1}}],["一旦不能正常工作",{"2":{"120":1}}],["一切都是由流组成的",{"2":{"117":1}}],["一方面可以帮助初学者更加方便地阅读和学习现有类库与其他系统中的源代码",{"2":{"74":1}}],["一方面它隔离了客户端与创建过程",{"2":{"69":1}}],["一类方法是",{"2":{"60":1}}],["一共不同的具体产品来实现",{"2":{"47":1}}],["一课特殊",{"2":{"42":1}}],["一般只在",{"2":{"242":1}}],["一般而言",{"2":{"56":1}}],["一般使用它的另一个通俗版定义",{"2":{"37":1}}],["一般人们理解的二叉树",{"2":{"25":1}}],["一个用两个输入流的应用程序",{"2":{"265":1}}],["一个分组数据流的聚合操作",{"2":{"220":1}}],["一个slot可以保存作业的整个管道",{"2":{"189":1}}],["一个流的并行度和当前任务设置的最大并行度相等",{"2":{"183":1}}],["一个流处理程序",{"2":{"180":1}}],["一个特定算子的子任务",{"2":{"183":1}}],["一个tm可以跟其他同一应用程序的tm交换数据",{"2":{"162":1}}],["一个系统不应当依赖于产品类实例如何被创建",{"2":{"141":1}}],["一个事件在一个节点处理完成后可以直接发往下一个节点进行处理",{"2":{"131":1}}],["一个完成后才可以计算下一个",{"2":{"131":1}}],["一个对象对其他对象的引用应当降到最低",{"2":{"75":1}}],["一个对象的改变不会给太多其他对象带来影响",{"2":{"75":1}}],["一个对象应该只包含单一的职责",{"2":{"16":1,"22":1}}],["一个典型的复杂对象类的代码示例如下",{"2":{"69":1}}],["一个工厂等级结构可以负责多个不同产品等级结构的一个产品族中的产品对象的创建",{"2":{"49":1}}],["一个具体类应当只实现接口或抽象类中声明过的方法",{"2":{"46":1}}],["一个",{"2":{"44":2}}],["一个类型应当设计成不变类",{"2":{"75":1}}],["一个类",{"2":{"22":1}}],["⭐",{"2":{"23":1}}],["⭐⭐⭐",{"2":{"16":1,"23":3}}],["⭐⭐⭐⭐⭐",{"2":{"16":3,"23":2}}],["⭐⭐⭐⭐",{"2":{"16":2,"23":3}}],["⭐⭐",{"2":{"16":1,"23":3}}],["使得相同的创建过程可以创建不同的产品对象",{"2":{"136":1}}],["使得客户端并不需要知道什么被创建",{"2":{"129":1}}],["使得设计方案更加通俗易懂",{"2":{"74":1}}],["使得在更换新的建造者时无需修改源代码",{"2":{"69":1}}],["使得在工厂类中只需定义一个通用的工厂方法",{"2":{"38":1}}],["使得每当一个对象状态发生改变时其相关依赖对象皆得到通知被自动更新",{"2":{"64":1}}],["使得两者都能够独立变化",{"2":{"64":1}}],["使得同样得构建过程可以创建不同的表示",{"2":{"64":1}}],["使得同样的构建过程可以创建不同的表示",{"2":{"23":1,"50":1}}],["使得以",{"2":{"37":1}}],["使得它在新增类型时不需要修改具体的工厂类就可以创建",{"2":{"31":1}}],["使得整个设计在一定程度上违反了开闭原则",{"2":{"31":1}}],["使用场景",{"2":{"253":1}}],["使用无界队列",{"2":{"158":1}}],["使用阻塞队列我们可以很容易实现",{"2":{"158":1}}],["使用工厂方法模式的另一个优点是在系统中加入新产品时无需修改抽象工厂和抽象产品提供的接口",{"2":{"128":1}}],["使用简单工厂模式势必会增加系统中类的个数",{"2":{"120":1}}],["使用越灵活",{"2":{"117":1}}],["使用越方便",{"2":{"117":1}}],["使用封装在参数",{"2":{"107":2}}],["使用参数",{"2":{"107":1}}],["使用默认方式连接数据库",{"2":{"107":1}}],["使用抽象层定义",{"2":{"101":1}}],["使用抽象描述和怎样用一个具有一般意义的元素组合",{"2":{"28":1}}],["使用数组比较合适",{"2":{"63":1}}],["使用链表比较合适",{"2":{"63":1}}],["使用链表结构可以克服数组需要预先知道数据大小的缺点",{"2":{"14":1}}],["使用起来很不方便",{"2":{"56":1}}],["使用该接口的客户端仅需知道与之相关的方法即可",{"2":{"56":1}}],["使用的pty数量",{"2":{"43":1}}],["使用的不是连续的内存空间来存储数据",{"2":{"14":1}}],["使用总结",{"2":{"34":1}}],["使用设计模式是为了可重用代码",{"2":{"28":1}}],["使用原型实例指定待创建对象的类型",{"2":{"23":1,"64":1}}],["使用频率",{"2":{"16":1,"23":1}}],["使用中的物理内存大小",{"2":{"8":1}}],["使用红黑树进行存储",{"2":{"7":1}}],["使用语法",{"2":{"0":1}}],["使用它时消耗的系统资源很小",{"2":{"0":1}}],["抽象图表接口",{"2":{"85":1}}],["抽象建造者",{"2":{"60":1}}],["抽象产品",{"2":{"39":1,"59":1}}],["抽象产品角色",{"2":{"38":1}}],["抽象工厂类通过其子类来指定创建哪个对象",{"2":{"140":1}}],["抽象工厂类的代码修改如下",{"2":{"114":1}}],["抽象工厂类",{"2":{"107":1}}],["抽象工厂可以时接口",{"2":{"68":1}}],["抽象工厂可以是接口",{"2":{"48":1}}],["抽象工厂是工厂方法模式的核心",{"2":{"39":1}}],["抽象工厂",{"2":{"39":1,"59":1}}],["抽象工厂模式适用环境",{"0":{"141":1}}],["抽象工厂模式缺点",{"0":{"135":1}}],["抽象工厂模式隔离了具体类的生产",{"2":{"129":1}}],["抽象工厂模式是工厂方法模式的进一步眼神",{"2":{"122":1}}],["抽象工厂模式是所有形式的工厂模式中最为抽象和最具一般性的一种形式",{"2":{"49":1}}],["抽象工厂模式优点",{"0":{"129":1}}],["抽象工厂模式优",{"0":{"122":1},"1":{"129":1,"135":1,"141":1}}],["抽象工厂模式很好地支持了开闭原则",{"2":{"115":1}}],["抽象工厂模式的这种性质称为开闭原则的倾斜性",{"2":{"115":1}}],["抽象工厂模式应用实例",{"0":{"78":1},"1":{"87":1,"94":1,"101":1,"108":1}}],["抽象工厂模式返回一系列相关的产品",{"2":{"69":1}}],["抽象工厂模式也可以为每一种产品提供一组重载的工厂方法",{"2":{"68":1}}],["抽象工厂模式实现",{"0":{"68":1}}],["抽象工厂模式包含以下",{"2":{"59":1}}],["抽象工厂模式结构图",{"2":{"59":1}}],["抽象工厂模式结构如图所示",{"2":{"59":1}}],["抽象工厂模式结构",{"0":{"59":1}}],["抽象工厂模式又称为工具",{"2":{"49":1}}],["抽象工厂模式中的具体工厂不只是创建一种产品",{"2":{"49":1}}],["抽象工厂模式为创建一组对象提供了一种解决方案",{"2":{"49":1}}],["抽象工厂模式示意图",{"2":{"49":1}}],["抽象工厂模式示意图如下图所示",{"2":{"49":1}}],["抽象工厂模式比工厂方法模式更为简单",{"2":{"49":1}}],["抽象工厂模式与工厂方法模式最大的区别在于",{"2":{"49":1}}],["抽象工厂模式概述",{"0":{"49":1}}],["抽象工厂模式",{"0":{"32":1},"1":{"40":1,"49":1,"59":1,"68":1,"78":1,"87":1,"94":1,"101":1,"108":1,"115":1,"122":1,"129":1,"135":1,"141":1},"2":{"49":1,"55":1,"64":1}}],["抽象工厂方法",{"2":{"23":1,"86":1,"107":1}}],["抽象类等机制",{"2":{"29":1}}],["抽象化是开闭原则的关键",{"2":{"29":1}}],["抽象不应该依赖于细节",{"2":{"16":1,"46":1}}],["学习难度",{"2":{"23":1}}],["让系统用更加符合开闭原则",{"2":{"93":1}}],["让系统更加符合开闭原则",{"2":{"31":1}}],["让多个对象都有机会处理请求",{"2":{"64":1}}],["让代码更容易被他人理解并且提高代码的可靠性",{"2":{"28":1}}],["让设计方案更易于修改和扩展",{"2":{"23":1}}],["让用户在使用对象的时候无需关心对象的创建细节",{"2":{"23":1}}],["从checkpoint中读取数据",{"2":{"262":1}}],["从检查点恢复状态",{"0":{"262":1}}],["从每个叶子节点到根节点的路径上不能有两个连续的红色节点",{"2":{"223":1}}],["从每个叶子结点到根节点的所有路径上不能有两个连续的红色节点",{"2":{"169":1}}],["从每个叶子结点到根结点的所有路径上不能有两个连续的红色节点",{"2":{"169":1}}],["从一个splitstream中获取一个或者多个datastream",{"2":{"222":1}}],["从",{"2":{"206":1}}],["从文件读取",{"2":{"206":1}}],["从集合中读取",{"2":{"206":1}}],["从本地获取环境",{"2":{"204":1}}],["从源顶点开始",{"2":{"197":1}}],["从根节点到每一个叶子结点",{"2":{"172":1}}],["从任一节点到其每个叶子结点的路径",{"2":{"223":1}}],["从任一节点到其每个叶子结点的所有路径",{"2":{"169":1,"172":1}}],["从任一节点到其每个叶子的所有路径",{"2":{"169":1}}],["从头开始",{"2":{"155":1}}],["从图上可以看到",{"2":{"172":1}}],["从图右右结构可见",{"2":{"148":1}}],["从图ll结构可以看出",{"2":{"148":1}}],["从而提高了性能",{"2":{"229":1}}],["从而获得序列化器和反序列化器",{"2":{"228":1}}],["从而可以用于",{"2":{"160":1}}],["从而可用不同的请求对客户进行参数化",{"2":{"64":1}}],["从而使其耦合松散",{"2":{"64":1}}],["从而降低系统的耦合度",{"2":{"23":1}}],["从请求磁盘操作到系统完成处理",{"2":{"26":1}}],["从指定文件提取报告",{"2":{"0":1}}],["类似于",{"2":{"237":1}}],["类似与standalone模式",{"2":{"147":1}}],["类型",{"0":{"237":1},"2":{"130":1}}],["类的省略方法都不影响系统的灵活性和可扩展性",{"2":{"123":1}}],["类的代码修改如下",{"2":{"123":1}}],["类的静态工厂方法",{"2":{"100":1}}],["类通常为抽象类",{"2":{"123":1}}],["类库的设计中",{"2":{"122":1}}],["类用于指导具体建造者如何构建产品",{"2":{"116":1}}],["类和",{"2":{"100":1}}],["类之后",{"2":{"100":1}}],["类如何去生成对象",{"2":{"69":1}}],["类模式",{"2":{"55":1}}],["类或对象组合",{"2":{"28":1}}],["类",{"2":{"22":1,"55":1}}],["用并行的两个source任务来读取",{"2":{"265":1}}],["用不带箭头的边表示",{"2":{"176":1}}],["用来把一条流上数据按照不同检查点分开",{"2":{"264":1}}],["用来让程序平衡延迟和结果正确性",{"2":{"243":1}}],["用来表示程序的拓扑结构",{"2":{"195":1}}],["用来方便的展示和监控作业执行的信息",{"2":{"168":1}}],["用来控制是否对某个",{"2":{"130":1}}],["用两套系统",{"2":{"110":1}}],["用新增的具体日志记录器工厂类的类名字符串替换原有工厂类的类名字符串",{"2":{"100":1}}],["用链表实现的队列叫作",{"2":{"91":1,"145":1}}],["用数组实现的队列叫作",{"2":{"91":1,"145":1}}],["用户无需关系对象的创建过程",{"2":{"141":1}}],["用户使用不同的具体建造者即可得到不同的产品对象",{"2":{"136":1}}],["用户只需要关心产品对应的工厂",{"2":{"128":1}}],["用户只需要指定复杂对象的类型即可得到该对象",{"2":{"50":1}}],["用户可以自由选择不同的皮肤",{"2":{"87":1}}],["用户可以通过修改配置文件灵活地更换日志记录方式",{"2":{"67":1}}],["用户在使用时可以通过菜单来选择皮肤",{"2":{"87":1}}],["用户级和系统级用户cpu的占用情况",{"2":{"53":1}}],["用户空间的cpu使用",{"2":{"1":1}}],["用子类对象来替换父类对象",{"2":{"37":1}}],["用于处理乱序事件",{"2":{"243":1}}],["用于判断某个角色是否为",{"2":{"130":1}}],["用于对无界和有界数据流进行状态计算",{"2":{"70":1}}],["用于返回一个已创建好的完整产品对象",{"2":{"69":1}}],["用于返回一个产品",{"2":{"39":1}}],["用于创建复杂产品的各个部件",{"2":{"69":1}}],["用于创建不同类型的产品",{"2":{"68":1}}],["用于生成图表并展示的类",{"2":{"22":1}}],["用于操作数据库表的",{"2":{"22":1}}],["用于连接数据库的工具类",{"2":{"22":1}}],["将偏移量保存下来",{"2":{"273":1}}],["将检查点的保存和数据处理分开",{"2":{"263":1}}],["将状态重置",{"2":{"262":1}}],["将状态表示为一个用于聚合操作的列表",{"2":{"257":1}}],["将状态表示为一组key",{"2":{"257":1}}],["将状态表示为一组数据的列表",{"2":{"256":1,"257":1}}],["将状态表示为单个值",{"2":{"257":1}}],["将所有状态序列化后",{"2":{"259":1}}],["将所有产品类公共的代码移至抽象产品类",{"2":{"47":1}}],["将checkpoint存储到远程的持久化的文件系统上",{"2":{"259":1}}],["将它们存储在taskmanager的jvm堆上",{"2":{"259":1}}],["将它提升为",{"2":{"148":1}}],["将迟到的数据放入侧输出流",{"2":{"239":1}}],["将数据依据固定的窗口长度对数据进行切片",{"2":{"237":1}}],["将数据从业务数据库复制到数仓",{"2":{"96":1}}],["将多个符合条件的任务chain在一起作为一个结点",{"2":{"195":1}}],["将对象的创建和使用解耦",{"2":{"141":1}}],["将产品本身与产品的创建过程解耦",{"2":{"136":1}}],["将dag划分为不同的stage",{"2":{"131":1}}],["将跳过构建发型的方法",{"2":{"130":1}}],["将调用钩子方法",{"2":{"130":1}}],["将覆盖",{"2":{"130":1}}],["将字符串中的每个字符先入栈再出栈就可以了",{"2":{"119":1}}],["将接口改为抽象类",{"2":{"114":1}}],["将接收请求的对象连接成一条链",{"2":{"64":1}}],["将",{"2":{"102":1,"203":4,"207":2,"209":1,"213":2,"215":1}}],["将代码修改如下",{"2":{"100":1}}],["将静态工厂方法移至抽象产品中",{"2":{"99":1}}],["将迪米特法则应用到系统设计中应注意以下几点",{"2":{"75":1}}],["将已证实的技术表述成设计模式也会使新系统开发者更加容易理解其设计思路",{"2":{"74":1}}],["将每一个算法封装起来",{"2":{"64":1}}],["将抽象部分与它的实例部分解耦",{"2":{"64":1}}],["将一个请求封装为一个对象",{"2":{"64":1}}],["将一个类的接口转换成客户希望的另一个接口",{"2":{"64":1}}],["将一个复杂对象的构建与它的表示分离",{"2":{"23":1,"50":1,"64":1}}],["将输出到文件",{"2":{"53":1}}],["将其拆分成三个类",{"2":{"22":1}}],["将模式的概念引入软件工程领域",{"2":{"15":1}}],["我们就用带箭头的边表示二者的关系",{"2":{"176":1}}],["我们就可以使用栈这个数据结构",{"2":{"98":1}}],["我们视为平衡被大屏",{"2":{"175":1}}],["我们一般在插入红黑树节点的时候",{"2":{"169":1}}],["我们称之为顶点",{"2":{"167":1}}],["我们知道",{"2":{"161":1}}],["我们保证数组还有一个空闲的位置",{"2":{"155":1}}],["我们说",{"2":{"155":1}}],["我们无法再往队列中添加数据",{"2":{"152":1}}],["我们可以利用栈",{"2":{"112":1}}],["我们可以按照单一职责原则",{"2":{"22":1}}],["我们将前两个元素",{"2":{"152":1}}],["我们将",{"2":{"105":1,"155":1}}],["我们依次把",{"2":{"105":2}}],["我们只关心关系的有无",{"2":{"185":1}}],["我们只关注失衡子树的根结点",{"2":{"82":1}}],["我们只需要使用两个栈",{"2":{"105":1}}],["我们权且叫",{"2":{"82":1}}],["我们在学习",{"2":{"82":1}}],["我们习惯性地把第一个结点叫作头结点",{"2":{"27":1}}],["我们直接可以利用元素的索引",{"2":{"5":1}}],["双向循环链表",{"0":{"54":1},"2":{"20":1,"54":1}}],["双向链表",{"0":{"44":1},"2":{"7":1,"20":1,"44":1}}],["单纯从插入来看",{"2":{"205":1}}],["单作业",{"0":{"177":1}}],["单队列又分为",{"2":{"152":1}}],["单队列就是常见的队列",{"2":{"152":1}}],["单队列",{"0":{"152":1}}],["单位为kb",{"2":{"34":2}}],["单位是毫秒",{"2":{"26":1}}],["单向链表只有一个方向",{"2":{"27":1}}],["单例模式",{"2":{"23":1,"55":1,"64":1}}],["单链表",{"0":{"27":1},"2":{"20":1,"27":1}}],["单一职责原则是实现高内聚",{"2":{"22":1}}],["单一职责原则是最简单的面向对象设计原则",{"2":{"22":1}}],["单一职责原则",{"0":{"22":1},"2":{"16":1,"22":1}}],["等到checkpoint真正完成的时候",{"2":{"270":1}}],["等到计算的时候会遍历所有数据",{"2":{"239":1}}],["等等",{"2":{"158":1}}],["等技术来处理",{"2":{"100":1}}],["等配置文件中",{"2":{"92":1}}],["等",{"2":{"66":1,"67":1,"75":1}}],["等于",{"2":{"152":1}}],["等于寻道时间+队列时间+服务时间",{"2":{"26":1}}],["等于iostat中的tps",{"2":{"19":1}}],["等待运行的进程数",{"2":{"4":1,"53":1}}],["磁盘请求队列的平均长度",{"2":{"26":1}}],["磁盘设备的名称",{"2":{"26":1}}],["磁盘使用详情统计",{"2":{"26":1}}],["磁盘每秒钟的io总数",{"2":{"19":1}}],["磁盘io",{"2":{"0":1}}],["六",{"0":{"19":1}}],["左子节点小于当前节点",{"2":{"225":1}}],["左子树小于",{"2":{"148":1}}],["左子树上所有结点的值均小于或等于它的根结点的值",{"2":{"18":1}}],["左括号必须以正确的顺序闭合",{"2":{"112":1}}],["左括号必须用相同类型的右括号闭合",{"2":{"112":1}}],["左旋和右旋",{"2":{"157":1}}],["左旋+右旋",{"0":{"125":1},"1":{"132":1}}],["左旋过程中",{"2":{"111":1}}],["左旋",{"0":{"111":1,"181":1},"1":{"118":1},"2":{"175":1,"181":1}}],["左侧的不平衡元素为",{"2":{"97":1}}],["左右结构失衡",{"0":{"125":1},"1":{"132":1},"2":{"90":1}}],["左左结构失衡",{"0":{"97":1},"1":{"104":1},"2":{"90":1}}],["左",{"2":{"18":1}}],["迪米特法则还有几种定义形式",{"2":{"75":1}}],["迪米特法则要求一个软件实体应当尽可能地与其他实体发生相互作用",{"2":{"75":1}}],["迪米特法则又称为最少知识原则",{"2":{"75":1}}],["迪米特法则",{"0":{"75":1},"2":{"16":1,"75":1}}],["而一些事件还可能被处理多次",{"2":{"268":1}}],["而barrier未到达的分区",{"2":{"265":1}}],["而基于分界线之后的数据导致的所有更改",{"2":{"264":1}}],["而对于本地状态",{"2":{"259":1}}],["而他的每项任务状态又都相同",{"2":{"256":1}}],["而后两边的节点会物理的分布在新",{"2":{"148":1}}],["而每次只是用其中某一产品族",{"2":{"141":1}}],["而与其他的具体建造者无关",{"2":{"136":1}}],["而只要添加一个具体工厂和具体产品即可",{"2":{"128":1}}],["而如何创建这个对象的细节完全封装在具体工厂内部",{"2":{"128":1}}],["而原有类库代码无须做任何修改",{"2":{"100":1}}],["而夏天",{"2":{"87":1}}],["而链表则天然支持动态扩容",{"2":{"73":1}}],["而链表不支持",{"2":{"73":1}}],["而这些对于客户端来说都无需关心",{"2":{"69":1}}],["而同一个具体工厂所创建的产品对象构成了一个产品族",{"2":{"68":1}}],["而又不用暴露该对象的内部表示",{"2":{"64":1}}],["而右子树任何节点的",{"2":{"62":1}}],["而",{"2":{"54":1,"88":1,"112":1,"229":1}}],["而抽象工厂模式需要面对多个产品等级结构",{"2":{"49":1}}],["而在建造者模式中",{"2":{"69":1}}],["而在引入工厂类之后客户端可以通过工厂类来创建产品",{"2":{"47":1}}],["而在运行时再确定其子类类型",{"2":{"37":1}}],["而需要根据实际情况设计一个产品层次结构",{"2":{"47":1}}],["而无需知道其内部的具体构造细节",{"2":{"50":1}}],["而无需指定它们具体的类",{"2":{"23":1,"49":1,"64":1}}],["而无须直接使用",{"2":{"47":1}}],["而无须修改原有的系统的源代码",{"2":{"46":1}}],["而将checkpoint存储在jobmanager的内存中",{"2":{"259":1}}],["而将一些步骤延迟到子类中",{"2":{"64":1}}],["而将具体类的对象通过依赖注入",{"2":{"46":1}}],["而将具体类写在配置文件中",{"2":{"46":1}}],["而将它们公共的代码进行抽象和提取后封装在一个抽象产品类中",{"2":{"30":1}}],["而不关心关系有多强",{"2":{"179":1}}],["而不在建造者和客户类中",{"2":{"146":1}}],["而不要给出多余的方法",{"2":{"46":1}}],["而不要用具体类来做这些事情",{"2":{"46":1}}],["而不是在后退",{"2":{"244":1}}],["而不是只返回最后一次聚合的最终结果",{"2":{"220":1}}],["而不是",{"2":{"160":1}}],["而不是单一的产品对象",{"2":{"40":1}}],["而不是通过继承来达到复用的目的",{"2":{"16":1,"65":1}}],["而ulimit",{"2":{"43":1}}],["而是在提交作业时",{"2":{"177":1}}],["而是以黑色节点的高度来约束的",{"2":{"172":1}}],["而是空队列",{"2":{"152":1}}],["而是将",{"2":{"100":1}}],["而是通过",{"2":{"100":1}}],["而是多个不同产品等级结构",{"2":{"49":1}}],["而是sysctl",{"2":{"43":1}}],["而是指向链表的头结点",{"2":{"35":1}}],["而由其子类来具体实现工厂方法",{"2":{"39":1}}],["而工厂子类负责生成具体的产品对象",{"2":{"31":1}}],["而且还要提供与之对应的具体工厂类",{"2":{"134":1}}],["而且随着游戏的升级将不断增加新的角色",{"2":{"88":1}}],["而且某些参数的设置由严格的先后顺序",{"2":{"67":1}}],["而且可以较为方便地对图表库进行扩展",{"2":{"66":1}}],["而且可以独立地改变它们之间的交互",{"2":{"64":1}}],["而且局限于那些与本单位密切相关的软件单位",{"2":{"16":1,"75":1}}],["而且会的到解决问题的最佳办法",{"2":{"15":1}}],["优化",{"2":{"195":1}}],["优先使用对象组合",{"2":{"16":1,"65":1}}],["优点",{"0":{"113":1},"2":{"5":1}}],["对两个或着两个以上的datastream进行union操做",{"2":{"226":1}}],["对connectedstreams中的每一个stream分别进行map和flatmap处理",{"2":{"224":1}}],["对数据进行过滤",{"2":{"214":1}}],["对数据进行转换",{"2":{"210":1}}],["对",{"2":{"207":1,"209":1,"213":1,"215":1}}],["对应到好友关系图",{"2":{"167":1,"170":1,"173":1}}],["对应增加一个新的具体日志记录器工厂",{"2":{"100":1}}],["对节点y进行向左旋转操作",{"2":{"157":1}}],["对节点y进行向右旋转操作",{"2":{"157":1}}],["对已有代码无需做任何修改",{"2":{"115":1}}],["对请求排队或者记录请求日志",{"2":{"64":1}}],["对于每个checkpoint",{"2":{"272":1}}],["对于每一个具体工厂类",{"2":{"68":1}}],["对于barrier已经到达的分区",{"2":{"265":1}}],["对于同一子任务而言是共享的",{"2":{"256":1}}],["对于同一个具体工厂而言",{"2":{"107":1}}],["对于图中每个顶点",{"2":{"188":1}}],["对于一个关系",{"2":{"179":2}}],["对于一个对象",{"2":{"75":1}}],["对于左右结构和右左结构无非是经过多次旋转达到稳定",{"2":{"148":1}}],["对于增加新的产品等级结构",{"2":{"115":1}}],["对于增加新的产品族",{"2":{"115":1}}],["对于涉及多个产品族与多个产品等级结构的系统",{"2":{"115":1}}],["对于客户端而言并不符合开闭原则",{"2":{"100":1}}],["对于客户端而言",{"2":{"69":1}}],["对于",{"2":{"62":1}}],["对于任何一颗子树的",{"2":{"62":1}}],["对于这个类",{"2":{"22":1}}],["对象的创建过程独立于创建该对象的类",{"2":{"146":1}}],["对象的构造部件的方法",{"2":{"69":1}}],["对象时必须通过修改客户端代码中静态工厂方法的参数来更换具体产品对象",{"2":{"92":1}}],["对象看起来似乎修改了它的类",{"2":{"64":1}}],["对象",{"2":{"55":1}}],["对象模式",{"2":{"55":1}}],["对设计模式的定义如下",{"2":{"28":1}}],["对用户隐藏了类的实例和创建细节",{"2":{"23":1}}],["对修改关闭",{"2":{"16":1,"29":1,"115":1}}],["对文件的读写",{"2":{"0":1}}],["软件系统的配置文件通常为",{"2":{"100":1}}],["软件实体应当对扩展开放",{"2":{"29":1}}],["软件实体应带对扩展开放",{"2":{"16":1}}],["软件模式的基本结构由",{"2":{"15":1}}],["软件模式是在一定条件下的软件开发问题及其解法",{"2":{"15":1}}],["软件模式并非仅仅限于设计模式",{"2":{"15":1}}],["开发人员可以在不修改既有代码的基础上增加新的皮肤",{"2":{"87":1}}],["开发人员需要对日志记录器进行一些初始化工作",{"2":{"67":1}}],["开发人员只需关心工厂类接口",{"2":{"48":1}}],["开闭原则要求对扩展开放",{"2":{"115":1}}],["开闭原则的倾斜性",{"0":{"115":1}}],["开闭原则是目标",{"2":{"46":1}}],["开闭原则是面向对象的可复用设计的第一块基石",{"2":{"29":1}}],["开闭原则就是指软件实体应尽量在不修改原有代码的情况下进行扩展",{"2":{"29":1}}],["开闭原则",{"0":{"29":1},"2":{"16":1,"29":1,"46":1}}],["开始并处理检查点到发生故障之前的所有数据",{"2":{"262":1}}],["开始",{"2":{"7":1,"42":1}}],["个顶点之间有关系",{"2":{"185":1}}],["个顶点和第",{"2":{"185":1}}],["个原则有不满足的情况",{"2":{"175":1}}],["个步骤",{"2":{"100":1}}],["个不同的产品等级结构",{"2":{"40":1}}],["个产品族",{"2":{"40":1}}],["个角色",{"2":{"38":1,"39":1,"59":1,"60":1}}],["个",{"2":{"28":1}}],["个面向对象设计原则",{"2":{"16":1}}],["个部分构成",{"2":{"15":1}}],["7",{"0":{"222":1},"2":{"16":1,"33":7,"53":1,"133":1,"148":1,"152":1,"188":1}}],["758212",{"2":{"8":4}}],["改为红色",{"2":{"203":1}}],["改正",{"2":{"16":1}}],["改变过优先级的进程的cpu使用率",{"2":{"1":1}}],["可重设数据的读取位置",{"2":{"270":1}}],["可任务状态就是一个本地变量",{"2":{"255":1}}],["可能会执行一个或多个子任务",{"2":{"186":1}}],["可能会导致需要定义很多具体建造者类来实现这种变化",{"2":{"142":1}}],["可能会导致系统中存在大量的工厂类",{"2":{"40":1}}],["可见无论哪种情况的失衡",{"2":{"148":1}}],["可引入配置文件和反射机制实现",{"2":{"86":1}}],["可通过配置文件实现",{"2":{"69":1}}],["可通过配置文件与反射机制实现",{"2":{"48":1}}],["可在运行时再指定具体工厂类",{"2":{"48":1}}],["可复用性",{"2":{"16":1}}],["可维护性",{"2":{"16":1}}],["可以重复执行很多次",{"2":{"270":1}}],["可以被任务的业务逻辑访问",{"2":{"255":1}}],["可以访问时间戳",{"2":{"252":1}}],["可以周期性生成wm或断点式生成wm",{"2":{"246":1}}],["可以设定延迟触发",{"2":{"243":1}}],["可以设置一个标志变量",{"2":{"155":1}}],["可以有重叠",{"2":{"237":1}}],["可以分成两类",{"2":{"237":1}}],["可以实现更复杂的功能",{"2":{"233":1}}],["可以获取运行时上下文",{"2":{"233":1}}],["可以看到",{"2":{"203":1}}],["可以连接成同一个任务",{"2":{"200":1}}],["可以避免颜色冲突",{"2":{"190":1}}],["可以理解为平衡特性",{"2":{"169":1}}],["可以按照括号里边的分类",{"2":{"169":1}}],["可以是红色",{"2":{"169":1}}],["可以跨作业运行",{"2":{"168":1}}],["可以更加精细地控制产品的创建过程",{"2":{"136":1}}],["可以在timerservice中注册定时事件",{"2":{"253":1}}],["可以在特点条件下减少本地通信的开销",{"2":{"200":1}}],["可以在",{"2":{"130":1}}],["可以在不修改客户端代码的情况下更换和增加新的具体类",{"2":{"113":1}}],["可以在一定程度上减少使用者的记忆量",{"2":{"113":1}}],["可以在其",{"2":{"60":1}}],["可以创建一个工具类",{"2":{"100":1}}],["可以对日志记录器的客户端代码进行修改",{"2":{"100":1}}],["可以对具体工厂类的实例化过程进行修改",{"2":{"100":1}}],["可以对基于",{"2":{"87":1}}],["可以将",{"2":{"123":2}}],["可以将抽象产品类和工厂类合并",{"2":{"99":1}}],["可以将静态工厂方法的参数存储在",{"2":{"92":1}}],["可以降低系统的耦合度",{"2":{"75":1}}],["可以使用",{"2":{"100":1}}],["可以使用继承",{"2":{"65":1}}],["可以使用sysctl",{"2":{"43":1}}],["可以通过配置文件等方式来使用户能够动态改变产品族",{"2":{"141":1}}],["可以通过配置文件来存储具体建造者类",{"2":{"69":1}}],["可以通过配置文件来存储具体工厂类",{"2":{"48":1}}],["可以通过多种方式来初始化同一个产品类",{"2":{"107":1}}],["可以通过多种途径保存系统的运行日志",{"2":{"67":1}}],["可以通过它们定义系统的抽象层",{"2":{"29":1}}],["可以查看系统中当前打开的文件句柄的数量",{"2":{"43":1}}],["可以随机存储表中任一元素",{"2":{"5":1}}],["可以计算出该元素对应的存储地址",{"2":{"5":1}}],["可以比较瑞士军刀",{"2":{"0":1}}],["衡量软件质量的重要属性",{"2":{"16":1}}],["环境或约束条件",{"2":{"15":1}}],["前提条件",{"2":{"15":1}}],["分类",{"0":{"268":1}}],["分界线对齐",{"2":{"265":1}}],["分界线之前到来的数据导致的状态更改",{"2":{"264":1}}],["分别指向父节点",{"2":{"225":1}}],["分别是构造注入",{"2":{"46":1}}],["分别是",{"2":{"15":1}}],["分两种情况",{"2":{"205":1}}],["分发器就会启动并将应用移交给一个jm",{"2":{"168":1}}],["分层api",{"2":{"117":1}}],["分析处理",{"2":{"96":1}}],["分析模式和过程模式等",{"2":{"15":1}}],["分属于",{"2":{"40":1}}],["分为类模式和对象模式两种",{"2":{"36":1}}],["分为创建型",{"2":{"36":1}}],["位著名软件工程学者",{"2":{"15":1}}],["自定义生成wm",{"2":{"246":1}}],["自定义source",{"2":{"206":1}}],["自平衡处理",{"2":{"207":1,"209":1,"213":1,"215":1}}],["自动判断从哪里获取环境",{"2":{"204":1}}],["自动转为红黑树",{"2":{"7":1}}],["自称的",{"2":{"15":1}}],["和更好的容错保证",{"2":{"259":1}}],["和特定任务绑定",{"2":{"255":1}}],["和广度优先搜索类似",{"2":{"197":1}}],["和顶点",{"2":{"185":4}}],["和打包了所有的类",{"2":{"159":1}}],["和有界队列",{"2":{"158":1}}],["和微批处理",{"2":{"131":1}}],["和处理事件",{"2":{"124":1}}],["和抽象建造者",{"2":{"123":1}}],["和就能实现这个功能",{"2":{"105":1}}],["和移除数据",{"2":{"91":1}}],["和读取记录信息",{"2":{"53":1}}],["和负载的状态",{"2":{"53":1}}],["和红黑树",{"2":{"42":1}}],["和行为型",{"2":{"36":1}}],["和单链表不同的是循环链表的尾结点不是指向",{"2":{"35":1}}],["和",{"2":{"15":1,"52":1,"76":1,"77":2,"91":1,"105":1,"152":2,"163":1,"176":1,"184":1,"203":1}}],["和线程数",{"2":{"4":1}}],["guibas",{"2":{"163":1}}],["graph",{"2":{"159":1}}],["grow",{"2":{"133":2}}],["grep",{"2":{"43":2}}],["gclogviewer",{"2":{"67":1}}],["g",{"2":{"52":1,"161":2}}],["genericwriteaheadsink",{"2":{"271":1}}],["general",{"2":{"28":1}}],["getruntimecontext",{"2":{"233":1}}],["getresult",{"2":{"60":1,"69":3}}],["getexecutionenvironment",{"2":{"204":1}}],["getelementsbytagname",{"2":{"100":1,"101":1,"102":1}}],["get",{"2":{"112":1}}],["gethairstyle",{"2":{"102":2}}],["getface",{"2":{"102":2}}],["getfirstchild",{"2":{"100":1,"101":1,"102":1}}],["getsideoutput",{"2":{"239":1}}],["getsimplename",{"2":{"100":1}}],["getsex",{"2":{"102":2}}],["gettype",{"2":{"102":2}}],["getcostume",{"2":{"102":2}}],["getclass",{"2":{"100":1}}],["getchart",{"2":{"85":2}}],["getnodevalue",{"2":{"100":1,"101":1,"102":1}}],["getbean",{"2":{"100":5,"101":2,"102":2,"114":1,"123":2}}],["getproduct",{"2":{"47":2}}],["gt",{"2":{"33":1,"195":3,"203":1,"206":2,"216":1,"220":1,"222":2,"224":2,"226":1,"251":2,"253":1}}],["gamma",{"2":{"15":1}}],["gang",{"2":{"15":1}}],["gof",{"0":{"45":1,"55":1,"64":1},"1":{"55":1,"64":1},"2":{"15":2,"28":1}}],["达到事半功倍的效果",{"2":{"15":1}}],["当所有任务都确认已成功将状态保存到检查点时",{"2":{"265":1}}],["当任务处理一条数据时",{"2":{"257":1}}],["当插入节点的父节点是黑色时",{"2":{"199":1}}],["当插入一个新的节点后",{"2":{"72":1}}],["当顶点",{"2":{"185":1}}],["当jm申请插槽资源时",{"2":{"165":1}}],["当时被称为平衡二叉b树",{"2":{"163":1}}],["当有空闲线程的时候",{"2":{"158":1}}],["当队列满的话后面再有任务",{"2":{"158":1}}],["当队列满的时候",{"2":{"158":1}}],["当队列为空的时候",{"2":{"158":1}}],["当front==rear",{"2":{"155":1}}],["当我们需要按照一定顺序来处理数据的时候可以考虑使用队列这个数据结构",{"2":{"158":1}}],["当我们再向队列中添加元素的时候",{"2":{"155":1}}],["当我们我们要处理的数据只涉及在一端插入和删除数据",{"2":{"98":1}}],["当添加元素",{"2":{"152":1}}],["当",{"2":{"152":1,"155":1}}],["当进行入队",{"2":{"152":1}}],["当删除为叶子节点",{"2":{"151":1}}],["当左旋时",{"2":{"148":1}}],["当右旋时原来pivot",{"2":{"148":1}}],["当在客户端代码中置顶具体建造者类型并通过指挥者来实现产品的逐步构建时",{"2":{"130":1}}],["当需要增加新的具体角色建造者时只需要将新增具体角色建造者作为抽象角色建造者的子类",{"2":{"109":1}}],["当你想回头看",{"2":{"105":1}}],["当一个应用被提交执行时",{"2":{"168":1}}],["当一个产品族中的多个对象被设计成一起工作时",{"2":{"129":1}}],["当一个接口太大时需要将他分割成一些更细小的接口",{"2":{"56":1}}],["当一个工厂等级结构可以创建出分属于不同产品等级结构的一个产品族中的所有对象时",{"2":{"49":1}}],["当一个领域逐渐成熟的时候自然会有很多模式",{"2":{"15":1}}],["当系统所提供的工厂生产的具体产品不是一个见到那的对象",{"2":{"49":1}}],["当达到上限时",{"2":{"43":1}}],["当收到checkpoint完成的通知时",{"2":{"272":1}}],["当收到所有输入分区的barrier时",{"2":{"265":1}}],["当收到",{"2":{"43":1}}],["当前对象所创建的对象",{"2":{"75":1}}],["当前对象的成员对象",{"2":{"75":1}}],["当前对象本身",{"2":{"75":1}}],["当前的ip分片的数目",{"2":{"34":1}}],["当前正在被使用于raw的skcket总数",{"2":{"34":1}}],["当前正在被使用的udp的socket总数",{"2":{"34":1}}],["当前正在被使用的tcp的socket总数",{"2":{"34":1}}],["当前被使用的socket总数",{"2":{"34":1}}],["当发送数据包的时候",{"2":{"34":1}}],["当发送数据包时候",{"2":{"34":1}}],["当由于缓冲区满的时候",{"2":{"34":2}}],["当冲突的链表长度超过",{"2":{"7":1}}],["博士",{"2":{"15":1}}],["起源于建筑业而非软件业",{"2":{"15":1}}],["但只导致一次结果改正",{"2":{"270":1}}],["但统计性能比",{"2":{"229":1}}],["但如果",{"2":{"203":1}}],["但",{"2":{"176":1}}],["但平均的使用性能非常良好",{"2":{"169":1}}],["但它的最坏情况运行时间也是非常良好的",{"2":{"166":1}}],["但加重了抽象建造者类的职责",{"2":{"123":1}}],["但不能为增加新产品结构提供这样的方便",{"2":{"115":1}}],["但这样一来就违反了原则3",{"2":{"72":1}}],["但由于工厂方法模式中的每个具体工厂只有一个或者一组重载的工厂方法",{"2":{"40":1}}],["但链表不会节省空间",{"2":{"14":1}}],["但是会增大延迟",{"2":{"271":1}}],["但是有界队列就不一样了",{"2":{"158":1}}],["但是先旋转底部",{"2":{"132":1,"144":1}}],["但是创建具体",{"2":{"92":1}}],["但是原理和插入元素是类似的",{"2":{"90":1}}],["但是不会再次释放他们",{"2":{"43":1}}],["但是让子类决定将哪一个类实例化",{"2":{"23":1,"31":1,"64":1}}],["但是",{"2":{"14":1,"161":1,"169":1,"185":1}}],["但是并不会按线性的顺序存储数据",{"2":{"14":1}}],["统计socket连接信息",{"2":{"34":2}}],["统计swap分区",{"0":{"13":1}}],["统计网络设备通信失败信息",{"2":{"34":1}}],["统计网络信息",{"2":{"34":1}}],["统计cpu的使用情况",{"2":{"1":1}}],["统计cpu使用情况",{"0":{"1":1}}],["五",{"0":{"13":1}}],["的特殊数据形式",{"2":{"264":1}}],["的特性时",{"2":{"98":1}}],["的特性1",{"2":{"97":1}}],["的引入",{"0":{"242":1}}],["的时间复杂度进行查询",{"2":{"229":1}}],["的时候队列为满",{"2":{"155":1}}],["的时候队列为空",{"2":{"155":2}}],["的时候",{"2":{"34":1,"152":1}}],["的性能大打折扣",{"2":{"221":1}}],["的父节点是红色",{"2":{"203":1}}],["的父节点是黑色",{"2":{"203":1}}],["的顶点",{"2":{"188":1}}],["的个数被称之为并行度",{"2":{"183":1}}],["的原左子树保持不变",{"2":{"184":1}}],["的原左子树变成原",{"2":{"181":1}}],["的原右子树变成原",{"2":{"184":1}}],["的原右子树保持不变",{"2":{"181":1}}],["的原理运作",{"2":{"91":1}}],["的爸爸",{"2":{"176":2}}],["的同学",{"2":{"176":2}}],["的叶子结点不是空的",{"2":{"169":1}}],["的位置就不会有越界问题了",{"2":{"155":1}}],["的问题也就是明明有位置却不能添加的情况",{"2":{"152":1}}],["的右子树",{"2":{"148":2}}],["的右儿为支点",{"2":{"111":1}}],["的线性表",{"2":{"145":1}}],["的状态一致性保证",{"2":{"124":1}}],["的变化形式",{"2":{"116":1}}],["的方法",{"2":{"116":1}}],["的方式注入到其他对象中",{"2":{"46":1}}],["的一致性",{"2":{"262":1}}],["的一道题目",{"2":{"112":1}}],["的一个百分比的值",{"2":{"8":1}}],["的字符串",{"2":{"112":1}}],["的代码修改如下",{"2":{"107":2,"130":1}}],["的外观",{"2":{"102":1}}],["的返回类型为",{"2":{"100":1}}],["的左右子树高度差不能超过",{"2":{"221":1}}],["的左子树显然比右子树高",{"2":{"172":1}}],["的左子树会分布到原root点",{"2":{"148":1}}],["的左子树处",{"2":{"148":1}}],["的左子树",{"2":{"97":1}}],["的左子节点为支点",{"2":{"97":1}}],["的左侧不平衡元素的左侧",{"2":{"97":1}}],["的静态工厂方法创建产品对象",{"2":{"92":1}}],["的操作都发生在栈顶",{"2":{"91":1}}],["的桌面软件进行界面美化",{"2":{"87":1}}],["的缓存机制友好",{"2":{"73":1}}],["的关系时",{"2":{"176":1}}],["的关系",{"2":{"65":2}}],["的",{"0":{"55":1,"64":1},"2":{"54":1,"69":1,"116":1,"188":1}}],["的统计信息",{"2":{"53":1}}],["的si",{"2":{"53":1}}],["的类名",{"2":{"48":1,"69":1}}],["的控制",{"2":{"43":1}}],["的子类型",{"2":{"37":1}}],["的行为没有变化",{"2":{"37":1}}],["的对象",{"2":{"37":2}}],["的节点上",{"2":{"169":1}}],["的节点",{"2":{"33":1}}],["的完美情况",{"0":{"25":1}}],["的数量",{"2":{"4":1,"13":1}}],["这就不需要插入",{"2":{"225":1}}],["这就意味着avl搜索的时候",{"2":{"160":1}}],["这时",{"2":{"219":1}}],["这时候的查询或写入耗时与链表相同",{"2":{"42":1}}],["这种检查点的保存和恢复机制可以为应用状态提供",{"2":{"262":1}}],["这种存储方式的缺点也比较明显",{"2":{"185":1}}],["这种现象就是",{"2":{"152":1}}],["这取决于应用提交运行的方式",{"2":{"168":1}}],["这也就是循环队列名字的由来",{"2":{"155":1}}],["这一步中会同时将flink的jar包和配置上传到hdfs",{"2":{"177":1}}],["这一约束必须在系统的设计中体现出来",{"2":{"141":1}}],["这一点应该毋容置疑",{"2":{"112":1}}],["这对于所有类型的工厂模式都是很重要的",{"2":{"141":1}}],["这对于客户端而言违反了开闭原则",{"2":{"92":1}}],["这显然会带来较大的不变",{"2":{"135":1}}],["这与在后边要学习的模板方法非常类似",{"2":{"123":1}}],["这两个页面从",{"2":{"105":1}}],["这两个值就是free命令中的buffer和cache",{"2":{"8":1}}],["这四个页面压入",{"2":{"105":1}}],["这四个页面",{"2":{"105":1}}],["这里省略了dispatcher组件",{"2":{"177":1}}],["这里的",{"2":{"166":1}}],["这里聚焦",{"2":{"90":1}}],["这里面的索引和文件句柄值不是ulimit",{"2":{"43":1}}],["这些产品对象通常包含多个成员变量",{"2":{"146":1}}],["这些产品构成了一个产品族",{"2":{"59":2}}],["这些基本的方法",{"2":{"133":1}}],["这些成员变量也称为部件或零件",{"2":{"69":1}}],["这些类称为具体产品类",{"2":{"30":1}}],["这是进程级别的",{"2":{"43":1}}],["这样一来所有的输入流就都会被重置到检查点完成时的位置",{"2":{"262":1}}],["这样的图就是有向图",{"2":{"176":1}}],["这样的图就是无向图",{"2":{"176":1}}],["这样的错误消息时",{"2":{"43":1}}],["这样也就会形成头尾相接的循环",{"2":{"155":1}}],["这样当",{"2":{"152":1}}],["这样系统的可扩展性也就变的非常好",{"2":{"128":1}}],["这样更符合单一职责原则",{"2":{"123":1}}],["这样会扰乱你的思路",{"2":{"82":1}}],["这样可以将对象恢复到原先保存的状态",{"2":{"64":1}}],["这样如果系统行为发生变化",{"2":{"46":1}}],["这样做的目的是将产品类的实例化操作延迟到工厂子类中完成",{"2":{"31":1}}],["这个时间点",{"2":{"261":1}}],["这个组件就叫做状态后端",{"2":{"258":1}}],["这个任务会维护和处理这个key对应的状态",{"2":{"257":1}}],["这个",{"2":{"225":1}}],["这个找父节点的操作和二叉查找树是完全一致的",{"2":{"225":1}}],["这个单链表称为顶点",{"2":{"188":1}}],["这个图被叫做",{"2":{"159":1}}],["这个应用程序包括",{"2":{"159":1}}],["这个问题实际是",{"2":{"112":1}}],["这个页面的时候",{"2":{"105":1}}],["这个旋转支点就是失去平衡这部分树",{"2":{"82":1}}],["这个操作是比较耗时的",{"2":{"73":1}}],["这个解释器使用该表示来解释语言中的句子",{"2":{"64":1}}],["这个接口使得这一子系统更加容易使用",{"2":{"64":1}}],["这个可能不适应最新的内核了",{"2":{"43":1}}],["这个原始的定义不太容易理解",{"2":{"37":1}}],["这个是在半双工模式下才有",{"2":{"34":1}}],["这个值是kbcommit与内存总量",{"2":{"8":1}}],["这标志着软件模式的诞生",{"2":{"15":1}}],["缓存的文件大小",{"2":{"8":1}}],["kafka端到端状态一致性特征",{"0":{"273":1}}],["kafka读取",{"2":{"206":1}}],["k",{"2":{"190":13,"225":13}}],["k8s以及standalone部署",{"2":{"165":1}}],["kubernetes部署",{"0":{"150":1}}],["knowledge",{"2":{"75":2}}],["knowing",{"2":{"37":1}}],["kit",{"2":{"49":1}}],["keyed",{"2":{"255":1}}],["keyedbroadcastprocessfunction",{"2":{"252":1}}],["keyedprocessfunction",{"0":{"253":1},"2":{"252":1}}],["keyedstream",{"2":{"220":1}}],["keyedstrea",{"2":{"216":1}}],["keyby",{"0":{"216":1}}],["keyby基于hashcode重分区",{"2":{"198":1}}],["key",{"0":{"196":1},"2":{"62":1,"190":3,"225":7}}],["keyword>",{"2":{"0":1}}],["kernel",{"2":{"43":2,"53":1}}],["kbcommit",{"2":{"8":2}}],["kbcached",{"2":{"8":2}}],["kbbuffers和kbcached",{"2":{"8":1}}],["kbbuffers",{"2":{"8":2}}],["kbmemused",{"2":{"8":2}}],["kbmemfree",{"2":{"8":2}}],["四人组",{"2":{"15":1}}],["四",{"0":{"8":1}}],["+",{"2":{"7":1,"102":5}}],["其它可选",{"2":{"239":1}}],["其父节点",{"2":{"181":1,"184":1}}],["其组成部分相似",{"2":{"142":1}}],["其功能增强包括两个方面",{"2":{"115":1}}],["其他具体工厂类代码省略",{"2":{"107":1}}],["其详细代码如下",{"2":{"100":1}}],["其性别",{"2":{"88":1}}],["其结构示意图如下图所示",{"2":{"87":1}}],["其实就是所有任务的状态",{"2":{"261":1}}],["其实左旋就是逆时针转",{"2":{"82":1}}],["其实是一种特殊的单链表",{"2":{"35":1}}],["其子类",{"2":{"76":1,"77":2}}],["其朋友包括以下几类",{"2":{"75":1}}],["其定义如下",{"2":{"65":1,"75":1}}],["其典型代码如下",{"2":{"47":1,"48":2,"68":2,"69":1}}],["其严格表述如下",{"2":{"37":1}}],["其基本实现流程如下",{"2":{"30":1}}],["其核心结构是红黑树",{"2":{"7":1}}],["其中任何子树仍然是",{"2":{"62":1}}],["其中的关键元素有以下",{"2":{"28":1}}],["其中每间隔1秒钟统计一次总共统计三次",{"2":{"4":1}}],["其中",{"2":{"0":1,"1":1,"161":1}}],["时间语义与",{"0":{"240":1},"1":{"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1}}],["时间无对齐",{"2":{"237":1}}],["时间对齐",{"2":{"237":2}}],["时间内完成查找操作",{"2":{"221":1}}],["时间内做查找",{"2":{"166":1}}],["时程序",{"2":{"37":1}}],["时",{"2":{"7":1,"152":1}}],["86",{"2":{"34":4}}],["80",{"2":{"19":1}}],["8",{"0":{"224":1},"2":{"7":2,"33":2,"53":1,"133":6,"148":1,"152":2,"188":2}}],["数据会被正常处理",{"2":{"265":1}}],["数据源将它们的状态写入检查点",{"2":{"265":1}}],["数据结",{"2":{"257":1}}],["数据结构",{"2":{"256":1}}],["数据稠密推荐使用",{"2":{"249":1}}],["数据稀疏推荐使用",{"2":{"248":1}}],["数据量大会在同一时间戳会产生大量数据",{"2":{"248":1}}],["数据打散转换",{"2":{"212":1}}],["数据传输形式",{"0":{"198":1}}],["数据模型",{"2":{"131":1}}],["数据报表",{"2":{"89":1}}],["数据库日志记录",{"2":{"86":1}}],["数据库日志记录器工厂类",{"2":{"86":1}}],["数据库日志记录器",{"2":{"86":1}}],["数据的大小固定",{"2":{"73":1}}],["数据支持随机访问",{"2":{"73":1}}],["数据元素的个数不能自由扩充",{"2":{"5":1}}],["数",{"2":{"34":1}}],["数量",{"2":{"13":1}}],["数组实现",{"2":{"152":1}}],["数组使用的是连续内存空间对",{"2":{"73":1}}],["数组的特点是",{"2":{"5":1}}],["数组",{"0":{"5":1,"73":1},"2":{"5":1}}],["需要实现一个towphaprocessfunction",{"2":{"273":1}}],["需要实现在抽象产品中声明的抽象方法",{"2":{"38":1}}],["需要用户手动设置保存点",{"2":{"266":1}}],["需要用到runtimecontext",{"2":{"257":1}}],["需要用到距离",{"2":{"179":1}}],["需要指定",{"2":{"204":1}}],["需要指定其生成顺序",{"2":{"146":1}}],["需要进行变色",{"2":{"203":1}}],["需要进行强制类型转换",{"2":{"100":1}}],["需要占用多少slot",{"2":{"180":1}}],["需要占用的solt数=所设置的最大并行度=最大的task数",{"2":{"147":1}}],["需要生成的产品对象的属性相互依赖",{"2":{"146":1}}],["需要生成的产品对象有复杂的内部结构",{"2":{"146":1}}],["需要引入抽象层",{"2":{"134":1}}],["需要修改所有工厂角色",{"2":{"115":1}}],["需要修改工厂类的代码",{"2":{"31":1}}],["需要再平衡",{"2":{"90":1}}],["需要对原有系统进行较大的修改",{"2":{"135":1}}],["需要对游戏角色进行设计",{"2":{"88":1}}],["需要对系统进行抽象化设计",{"2":{"29":1}}],["需要根据pivot它来进行旋转",{"2":{"82":1}}],["需要另外申请一个更大的内存空间存放数组元素",{"2":{"73":1}}],["需要移动大量元素",{"2":{"5":1}}],["需要结合内存使用等情况判断cpu是否瓶颈",{"2":{"1":1}}],["缺点与使用环境",{"0":{"122":1},"1":{"129":1,"135":1,"141":1}}],["缺点与适应环境",{"0":{"106":1,"121":1},"1":{"113":1,"120":1,"127":1,"128":1,"134":1,"140":1}}],["缺点",{"0":{"120":1},"2":{"5":1}}],["删除操作",{"2":{"229":1}}],["删除操作时",{"2":{"221":1}}],["删除操作时较少的旋转操作",{"2":{"166":1}}],["删除时的不平衡",{"2":{"221":1}}],["删除时少量的旋转操作",{"2":{"221":1}}],["删除的场景中",{"2":{"221":1}}],["删除的节点既有左子树又有右子树",{"2":{"151":1}}],["删除的节点只有左子树或只有右子树",{"2":{"151":1}}],["删除的判断标准",{"2":{"151":1}}],["删除后是否会破坏平衡",{"2":{"151":1}}],["删除元素",{"2":{"90":2}}],["删除树节点的时候",{"2":{"62":1}}],["删除某一元素时",{"2":{"5":1}}],["删除",{"2":{"5":1,"229":1}}],["最多一次",{"2":{"268":1}}],["最多为1",{"2":{"62":1,"148":1}}],["最小树高",{"2":{"160":1}}],["最大树高",{"2":{"160":1}}],["最终查找到",{"2":{"225":1}}],["最终",{"2":{"144":1}}],["最坏情况",{"2":{"91":1,"145":1}}],["最坏情况的时间复杂度",{"2":{"42":1}}],["最坏的情况发生在删除数组的开头发生并需要移动第一元素后面所有的元素时",{"2":{"5":1}}],["最坏的情况发生在插入发生在数组的首部并需要移动所有元素时",{"2":{"5":1}}],["最常见的",{"2":{"16":1}}],["最早将模式的思想引入软件工程学的是",{"2":{"15":1}}],["最后一个被调用的函数必须先完成执行",{"2":{"126":1}}],["最后一个节点的",{"2":{"54":1}}],["最后返回一个产品对象",{"2":{"69":1}}],["最后15分钟的cpu平均负载",{"2":{"4":1}}],["最后1分钟的cpu平均负载",{"2":{"4":1}}],["最后5分钟的cpu平均负载",{"2":{"4":1}}],["访问以及维护",{"2":{"258":1}}],["访问者模式可以在不改变各元素的类的前提下定义作用于这些元素的新操作",{"2":{"64":1}}],["访问者模式",{"2":{"55":1,"64":1}}],["访问特定位置的元素",{"2":{"5":1,"20":1}}],["访问",{"2":{"5":1,"20":1,"91":1,"145":1}}],["它通常由事件中的时间戳描述",{"2":{"241":1}}],["它只要求部分地达到平衡要求",{"2":{"229":1}}],["它不严格的具有平衡属性",{"2":{"169":1}}],["它可以在",{"2":{"166":1}}],["它可以根据参数的不同返回不同类的实例",{"2":{"23":1,"30":1}}],["它与",{"2":{"166":1}}],["它还可以向资源提供平台发起绘画",{"2":{"165":1}}],["它最坏情况的时间复杂度o",{"2":{"160":1}}],["它能够保证客户端始终只使用同一个产品族中的对象",{"2":{"129":1}}],["它能够让工厂自主确定创建何种产品对象",{"2":{"128":1}}],["它按一定次序调用",{"2":{"116":1}}],["它以一种倾斜的方式来满足开闭原则",{"2":{"115":1}}],["它包含性别",{"2":{"88":1}}],["它包含了设计中存在的问题以及问题存在的原因",{"2":{"28":1}}],["它提供了一套通用的设计词汇和一种通用的语言以方便开发人员之间沟通和交流",{"2":{"74":1}}],["它提供了一个建造方法",{"2":{"69":1}}],["它会出现在2节点的左子树",{"2":{"72":1}}],["它有以下特性",{"2":{"62":1,"148":1}}],["它负责安排复杂对象的建造次序",{"2":{"60":1}}],["它负责创建一族产品",{"2":{"49":1}}],["它为应用提交提供了rest接口",{"2":{"168":1}}],["它为创建一个产品对象的各个部件指定抽象接口",{"2":{"60":1}}],["它为每种产品声明接口",{"2":{"59":1}}],["它定义具体工厂生产的具体产品对象",{"2":{"59":1}}],["它实现了",{"2":{"60":1}}],["它实现了在抽象工厂中声明的创建产品的方法",{"2":{"59":1}}],["它实现了抽象产品接口",{"2":{"39":1}}],["它声明了一组用于创建一族产品的方法",{"2":{"59":1}}],["它和链表一样",{"2":{"42":1}}],["它时定义产品的接口",{"2":{"39":1}}],["它的创建步骤都大同小异",{"2":{"88":1}}],["它的左子树任何节点的key一定比",{"2":{"62":1}}],["它的引入将提高系统的灵活性",{"2":{"38":1}}],["它的返回类型为抽象产品类型",{"2":{"38":1}}],["它的特点是可以连续对系统取样",{"2":{"0":1}}],["它们用于返回复杂对象",{"2":{"60":1}}],["它们用于创建复杂对象的各个部件",{"2":{"60":1}}],["它们相辅相成",{"2":{"46":1}}],["它们可以单独或者一起使用",{"2":{"34":1}}],["它们都应该依赖抽象",{"2":{"16":1,"46":1}}],["它是在1972年由",{"2":{"163":1}}],["它是被构建的复杂对象",{"2":{"60":1}}],["它是一种对象创建型模式",{"2":{"49":1}}],["它是工厂模式家族中最简单的一员",{"2":{"47":1}}],["它是工厂类创建的所有对象的父类",{"2":{"38":1}}],["它是抽象工厂类的子类",{"2":{"39":1}}],["它是简单工厂模式的创建目标",{"2":{"38":1}}],["它是这样的",{"2":{"25":1}}],["它是最简单但又是最难运行的原则",{"2":{"22":1}}],["它用于控制类的粒度大小",{"2":{"22":1}}],["它由相同类型的元素",{"2":{"5":1}}],["是每一个执行基于时间操作的算子的本地系统时间",{"2":{"241":1}}],["是数据进入",{"2":{"241":1}}],["是事件创建的时间",{"2":{"241":1}}],["是生命周期中最后一个调用的方法",{"2":{"233":1}}],["是datastream",{"2":{"233":1}}],["是严格平衡树",{"2":{"229":1}}],["是如何找到他的父节点的",{"0":{"225":1}}],["是完全随机重分区",{"2":{"198":1}}],["是调度层最核心的数据结构",{"2":{"195":1}}],["是jobgraph的并行化版本",{"2":{"195":1}}],["是指taskmanager具有的并发执行能力",{"2":{"189":1}}],["是指在程序运行时获取已知名称的类或已有对象的相关信息的一种机制",{"2":{"100":1}}],["是树中元素的数目",{"2":{"166":1}}],["是",{"2":{"145":1,"176":2}}],["是先右旋",{"2":{"144":1}}],["是先左旋",{"2":{"132":1}}],["是左边",{"2":{"118":1}}],["是建造者模式的重要组成部分",{"2":{"116":1}}],["是右边",{"2":{"104":1}}],["是有规律可循的",{"2":{"82":1}}],["是系统抽象化的具体实现",{"2":{"46":1}}],["是由",{"2":{"42":1}}],["是工厂方法模式所创建对象的超类型",{"2":{"39":1}}],["是类型",{"2":{"37":1}}],["是最重要的面向对象设计原则",{"2":{"29":1}}],["是一种衡量eventtime进展的机制",{"2":{"243":1}}],["是一种切割无限数据为有限块进行处理的手段",{"2":{"236":1}}],["是一种较为直观的表示方式",{"2":{"185":1}}],["是一种很常见的数据结构",{"2":{"5":1}}],["是一套被反复使用的",{"2":{"28":1}}],["是一类常用的设计模式",{"2":{"23":1}}],["是文件名",{"2":{"0":1}}],["即",{"2":{"229":1}}],["即找到插入节点的父节点",{"2":{"225":1}}],["即使数组中还有空余空间",{"2":{"152":1}}],["即使用接口和抽象类进行变量类型声明",{"2":{"46":1}}],["即没有头发",{"2":{"130":1}}],["即通过工厂子类来确定究竟应该实例化哪一个具体产品类",{"2":{"31":1}}],["即不包括请求队列中的时间",{"2":{"26":1}}],["即问题描述",{"2":{"15":1}}],["即为了确保内存不溢出而需要的最少内存",{"2":{"8":1}}],["即将多核cpu过去一分钟的负载相加再除以核心数得出的平均值",{"2":{"4":1}}],["即磁盘io无法满足业务需求",{"2":{"1":1}}],["每条数据到来就进行计算",{"2":{"239":1}}],["每一条日志都会记录自己的生成时间",{"2":{"241":1}}],["每一次向下查找一层就可以排除掉一半的数据",{"2":{"225":1}}],["每一个taskmanager都是一个jvm进程",{"2":{"186":1}}],["每一个tm都包含了一定数量的插槽",{"2":{"162":1}}],["每一个用户就代表一个顶点",{"2":{"167":1}}],["每一个类都应当尽量降低其成员变量和成员函数的访问权限",{"2":{"75":1}}],["每一个产品都位于某个产品等级结构中",{"2":{"59":1}}],["每一个方法对应一种产品",{"2":{"59":1}}],["每一个具体建造者都相对独立",{"2":{"136":1}}],["每一个具体的工厂方法可以返回一个特定的产品对象",{"2":{"68":1}}],["每一个具体工厂都提供了多个工厂方法用于产生多种不同类型的产品",{"2":{"59":1}}],["每一个具体产品角色都继承了抽象产品角色",{"2":{"38":1}}],["每一个具体产品类都是抽象产品类的子类",{"2":{"30":1}}],["每一个软件单位对其他单位都只有最少的知识",{"2":{"16":1,"75":1}}],["每次进行插入",{"2":{"221":1}}],["每次添加元素时",{"2":{"152":1}}],["每次入栈之前先判断栈的容量是否够用",{"2":{"133":1}}],["每次请求的平均消耗时间",{"2":{"26":1}}],["每个分区包含具有相同key的元素",{"2":{"216":1}}],["每个红色节点的两个子节点一定是黑色的",{"2":{"201":1}}],["每个红色节点的两个子节点",{"2":{"169":1}}],["每个红色节点的两个子节点都是黑色",{"2":{"169":1,"223":1}}],["每个元素",{"2":{"161":1}}],["每个任务单独使用一套资源",{"2":{"147":1}}],["每个结点的左右子树的高度之差的绝对值",{"2":{"62":1,"148":1}}],["每个节点的左右子节点的高度之差的绝对值最多为1",{"2":{"62":1}}],["每颗cpu的使用状态信息和iowait统计状态",{"2":{"53":1}}],["每间隔1秒统计一次",{"2":{"34":1}}],["每间隔1秒钟统计一次总共统计三次",{"2":{"1":1,"8":1,"13":1,"19":1,"26":1,"43":1}}],["每秒处理数百万个事件",{"2":{"124":1}}],["每秒上下文交换的数目",{"2":{"53":1}}],["每秒被cache到的内存页",{"2":{"53":1}}],["每秒写入的扇区的总数",{"2":{"26":1}}],["每秒读取的扇区的总数",{"2":{"26":1}}],["每秒i",{"2":{"26":1}}],["每秒钟缓冲区溢出的错误发生的次数",{"2":{"34":2}}],["每秒钟载波错误发生的次数",{"2":{"34":1}}],["每秒钟发生的帧对其错误的次数",{"2":{"34":1}}],["每秒钟发生的冲撞",{"2":{"34":1}}],["每秒钟发送的压缩包",{"2":{"34":1}}],["每秒钟发送的数据包错误数",{"2":{"34":1}}],["每秒钟发送的数据包大小",{"2":{"34":1}}],["每秒钟发送的数据库",{"2":{"34":1}}],["每秒钟接收到的损坏的数据包",{"2":{"34":1}}],["每秒钟接收的多播数据包",{"2":{"34":1}}],["每秒钟接受的压缩数据包",{"2":{"34":1}}],["每秒钟接受的数据包大小",{"2":{"34":1}}],["每秒钟接受的数据包",{"2":{"34":1}}],["每秒钟此写入到磁盘的块总数",{"2":{"19":1}}],["每秒钟从磁盘读取的块总数",{"2":{"19":1}}],["每秒钟从磁盘读取的io总数",{"2":{"19":1}}],["每秒钟从写入到磁盘的io总数",{"2":{"19":1}}],["每秒从系统交换到swap的交换页面",{"2":{"13":1}}],["每秒从交换分区到系统的交换页面",{"2":{"13":1}}],["每核的cp不能超过3个",{"2":{"4":1}}],["5440",{"2":{"43":4}}],["53",{"2":{"34":5}}],["52",{"2":{"34":1}}],["5分钟和15分钟以此类推",{"2":{"4":1}}],["5",{"0":{"161":1,"218":1},"2":{"4":2,"8":4,"53":37,"133":1,"175":1,"194":1,"197":1}}],["58",{"2":{"4":4,"8":4}}],["三代关系",{"2":{"201":1}}],["三类",{"2":{"36":1}}],["三",{"0":{"4":1}}],["如右图所示的有向图中",{"2":{"188":1}}],["如左图所示的无向图中",{"2":{"188":1}}],["如何恢复平衡呢",{"2":{"175":1}}],["如何查找值为",{"2":{"33":1}}],["如上图所示",{"2":{"155":1}}],["如",{"2":{"63":1}}],["如下图",{"2":{"42":1}}],["如下图所示",{"2":{"15":1,"99":1,"152":1,"155":1,"185":1,"188":1,"194":1,"197":1,"201":1}}],["如果一个算子有多项任务",{"2":{"256":1}}],["如果wm到达的太早",{"2":{"247":1}}],["如果判断后得到的wm值大于当前广播的wm值",{"2":{"245":1}}],["如果查询和插入删除次数几乎差不多",{"2":{"229":1}}],["如果你的应用中",{"2":{"229":1}}],["如果你使用full关键字",{"2":{"34":1}}],["如果失衡",{"2":{"229":2}}],["如果最终查找到",{"2":{"225":2}}],["如果插入节点的父节点为红色节点",{"2":{"201":1}}],["如果第",{"2":{"185":1}}],["如果设置了slotsharinggroup",{"2":{"180":1}}],["如果我们既关心关系的有无",{"2":{"179":1}}],["如果我们只关心关系的有无",{"2":{"179":1}}],["如果满足不了平衡特征",{"2":{"169":1}}],["如果rm没有足够的插槽来满足jm的请求",{"2":{"165":1}}],["如果没有失衡",{"2":{"151":1}}],["如果产品的内部变化复杂",{"2":{"142":1}}],["如果产品之间的差异很大",{"2":{"142":1}}],["如果某个角色无需构建头发部件",{"2":{"130":1}}],["如果将游戏角色实例中的指挥者类",{"2":{"123":1}}],["如果将抽象工厂模式看成一个骑车配件生产厂",{"2":{"69":1}}],["如果对客户端隐藏工厂方法",{"2":{"114":1}}],["如果对每一个类型为",{"2":{"37":1}}],["如果stack为空",{"2":{"112":1}}],["如果不够用就用arrays",{"2":{"133":1}}],["如果不相等就直接返回",{"2":{"112":1}}],["如果不加",{"2":{"26":1}}],["如果字符是左括号就直接加入stack中",{"2":{"112":1}}],["如果pivot有左子树",{"2":{"111":1}}],["如果当前对象的成员对象是一个集合",{"2":{"75":1}}],["如果声明的数组过小",{"2":{"73":1}}],["如果是黑色",{"2":{"169":1}}],["如果是",{"2":{"65":1}}],["如果两个类之间使",{"2":{"65":1}}],["如果需要更换具体角色建造者",{"2":{"109":1}}],["如果需要更换皮肤",{"2":{"108":1}}],["如果需要更换产品",{"2":{"92":1}}],["如果需要增加新的皮肤",{"2":{"108":1}}],["如果需要增加一种新类型的日志记录方式",{"2":{"100":1}}],["如果需要增加并使用新的日志记录器",{"2":{"93":1}}],["如果需要存储的数据元素的个数确定",{"2":{"63":1}}],["如果需要支持随机访问的话",{"2":{"63":1}}],["如果破坏了以上的原则",{"2":{"62":1}}],["如果太小会导致系统中的接口泛滥",{"2":{"56":1}}],["如果",{"2":{"1":1,"42":1,"97":1,"123":1,"130":1,"203":1}}],["如内存",{"0":{"0":1}}],["在某个时间点的一份拷贝",{"2":{"261":1}}],["在某些情况下",{"2":{"107":1}}],["在env",{"2":{"259":1}}],["在配置文件中配置",{"2":{"259":1}}],["在配置文件中存储了具体建造者类的类名",{"2":{"102":1}}],["在配置文件中存储了具体工厂类的类名",{"2":{"101":1}}],["在flink的流式处理中",{"2":{"242":1}}],["在频繁进行插入",{"2":{"221":1}}],["在内部以hash的形式实现分区",{"2":{"216":1}}],["在各个taskmanager上部署task后形成的图",{"2":{"195":1}}],["在获取两个定点之间的关系的时候也非常高效",{"2":{"185":1}}],["在无向图中",{"2":{"185":1,"188":1}}],["在单作业模式下",{"2":{"177":1}}],["在这种情况下",{"2":{"176":1}}],["在有向图中",{"2":{"173":1,"188":1}}],["在有些情况下",{"2":{"123":1}}],["在有些具体建造者类中某些",{"2":{"69":1}}],["在红黑树中",{"2":{"169":1}}],["在执行过程中",{"2":{"162":1}}],["在查询速率和平衡调整中寻找平衡",{"2":{"160":1}}],["在查找一个节点或者访问特定位置的节点的时候复杂度为",{"2":{"14":1}}],["在运行过程中",{"2":{"159":1}}],["在前端",{"2":{"145":1}}],["在具体应用中通常用链表或者数组来实现",{"2":{"145":1}}],["在具体产品类中实现了抽象产品类中声明的抽象业务方法",{"2":{"47":1}}],["在设计完成之后不会向系统中增加新的产品等级结构或者删除已有的产品等级结构",{"2":{"141":1}}],["在设计各类日志记录器时",{"2":{"67":1}}],["在添加新产品时需要编写新的具体产品类",{"2":{"134":1}}],["在所有的工厂类中都需要增加生产新产品的方法",{"2":{"115":1}}],["在所有的对象",{"2":{"37":1}}],["在一定程度上增加了系统的复杂性",{"2":{"134":1}}],["在一定程度上提高了系统的灵活性",{"2":{"113":1}}],["在一个良好的指导下有助于设计一个优良的解决方案",{"2":{"15":1}}],["在真实情况下",{"2":{"102":1}}],["在此只列出部分成员变量",{"2":{"102":1}}],["在引入",{"2":{"100":1}}],["在引入抽象层后",{"2":{"46":1}}],["在软件开发中得以广泛应用",{"2":{"122":1}}],["在软件开发中可以把类名存储到",{"2":{"100":1}}],["在软件中将一个基类对象替换成它的子类对象",{"2":{"37":1}}],["在更换日志记录器时需要修改客户端代码",{"2":{"100":1}}],["在更换新的具体工厂时无需修改源代码",{"2":{"48":1}}],["在栈中",{"2":{"91":1}}],["在自平衡之后的根节点",{"2":{"82":1}}],["在对其他类的引用上",{"2":{"75":1}}],["在对问题进行描述的同时实际上就确定了模式所对应的使用环境以及模式的使用动机",{"2":{"28":1}}],["在类的设计上",{"2":{"75":1}}],["在类的结构设计的上",{"2":{"75":1}}],["在类的划分上",{"2":{"75":1}}],["在迪米特法则中",{"2":{"75":1}}],["在该方法中调用了",{"2":{"69":1}}],["在该接口中一般声明两类方法",{"2":{"60":1}}],["在指挥者类中可以注入一个抽象建造者类型的对象",{"2":{"69":1}}],["在建造者模式中通过引入指挥者类将创建过程封装在指挥者类中",{"2":{"146":1}}],["在建造者模式中",{"2":{"136":1}}],["在建造者模式中还引入了一个指挥者类",{"2":{"69":1}}],["在建造者模式的定义中提到了复杂对象",{"2":{"69":1}}],["在复用时尽量使用组合",{"2":{"65":1}}],["在客户端测试类中使用工厂类",{"2":{"92":1}}],["在客户端确定具体建造者的类型",{"2":{"60":1}}],["在客户端代码中均使用抽象层进行定义",{"2":{"134":1}}],["在客户端代码中不直接使用",{"2":{"100":1}}],["在客户端代码中",{"2":{"47":1,"48":1}}],["在抽象类",{"2":{"69":1}}],["在抽象建造者类中定义了产品的创建方法和返回方法",{"2":{"69":1}}],["在抽象产品中声明了产品所具有的业务方法",{"2":{"59":1}}],["在抽象工厂中声明多个工厂方法",{"2":{"68":1}}],["在抽象工厂中声明了工厂方法单并未实现工厂方法",{"2":{"48":1}}],["在抽象工厂模式中增加新的产品等级结构很麻烦",{"2":{"115":1}}],["在抽象工厂模式中",{"2":{"40":1,"59":1,"69":1}}],["在抽象工厂类中声明了工厂方法",{"2":{"39":1}}],["在接口中仅包含为某一类用户定值的方法即可",{"2":{"56":1}}],["在接收数据包的时候",{"2":{"34":2}}],["在",{"2":{"52":1,"67":1,"69":1,"123":1,"130":1,"158":1,"163":1,"169":1,"225":1}}],["在实际应用中",{"2":{"160":1}}],["在实际应用开发中",{"2":{"100":1}}],["在实际使用时",{"2":{"48":1}}],["在实现依赖倒转原则时需要针对抽象层编程",{"2":{"46":1}}],["在简单工厂模式中工厂类提供了一个静态工厂方法供客户端使用",{"2":{"47":1}}],["在简单工厂模式中客户端通过工厂类来创建一个产品类的实例",{"2":{"47":1}}],["在没有工厂类之前客户端一般会使用",{"2":{"47":1}}],["在使用接口隔离原则时需要注意控制接口的粒度",{"2":{"56":1}}],["在使用简单工厂模式时首先需要对产品类进行重构",{"2":{"47":1}}],["在使用设计模式时需要进行合理的评价和选择",{"2":{"28":1}}],["在不破坏封装的前提下捕获一个对象的内部状态",{"2":{"64":1}}],["在不修改的情况下来扩展系统的功能",{"2":{"46":1}}],["在不断插入的时候",{"2":{"42":1}}],["在程序中尽量使用抽象层进行编程",{"2":{"46":1}}],["在我的file",{"2":{"43":1}}],["在我使用的众多linux分析工具中",{"2":{"0":1}}],["在缓冲目录条目中没有使用的条目数量",{"2":{"43":1}}],["在上图中一共包含了",{"2":{"40":1}}],["在发生数据包",{"2":{"34":1}}],["在工厂类中直接调用日志记录器的业务方法",{"2":{"114":1}}],["在工厂类中提供了静态的工厂方法",{"2":{"38":1}}],["在工厂类中提供一个创建产品的方法",{"2":{"30":1}}],["在工厂方法模式中",{"2":{"31":1,"128":1}}],["在工厂方法模式中不再提供一个同一个的工厂类来创建所有的产品对象",{"2":{"31":1}}],["在插入",{"2":{"5":1,"62":1}}],["在以上的显示当中",{"2":{"1":1}}],["虚拟机的虚拟机cpu使用的cpu",{"2":{"1":1}}],["内部",{"2":{"273":1}}],["内部保证",{"2":{"270":1}}],["内部状态也仅更新一次",{"2":{"268":1}}],["内部依然保持各自的数据和形式不发生任何变化",{"2":{"224":1}}],["内核进程队列",{"2":{"158":1}}],["内核会动态的分配文件句柄",{"2":{"43":1}}],["内核中作为缓冲区使用的物理内存大小",{"2":{"8":1}}],["内核空间的cpu使用率",{"2":{"1":1}}],["内存页的分配和释放",{"2":{"53":1}}],["内存的统计信息",{"2":{"53":1}}],["内存和swap空间使用情况",{"2":{"53":1}}],["内存统计分析",{"0":{"8":1}}],["内存使用情况",{"2":{"0":1}}],["9",{"0":{"226":1},"2":{"53":1,"148":2}}],["97",{"2":{"1":2}}],["96",{"2":{"1":1}}],["94",{"2":{"1":3}}],["99",{"2":{"1":6}}],["4",{"0":{"54":1,"73":1,"126":1,"139":1,"145":1,"149":1,"152":1,"155":1,"158":1,"216":1},"1":{"145":1,"149":1,"152":2,"155":2,"158":1},"2":{"15":2,"28":1,"39":1,"53":1,"59":1,"60":1,"100":1,"105":3,"133":1,"194":1,"197":1,"229":1}}],["44",{"2":{"8":4}}],["41",{"2":{"4":1}}],["4096",{"2":{"43":1}}],["40",{"2":{"4":1}}],["48",{"2":{"1":1}}],["47",{"2":{"1":1}}],["46",{"2":{"1":5}}],["45",{"2":{"1":1}}],["42",{"2":{"1":4,"4":1}}],["07",{"0":{"51":1},"2":{"43":1}}],["05",{"0":{"32":1},"1":{"40":1,"49":1,"59":1,"68":1,"78":1,"87":1,"94":1,"101":1,"108":1,"115":1,"122":1,"129":1,"135":1,"141":1}}],["0类似的设备名称",{"2":{"26":1}}],["08",{"2":{"26":12,"43":1}}],["04",{"0":{"24":1},"1":{"31":1,"39":1,"48":1,"58":1,"67":1,"77":1,"86":1,"93":1,"100":1,"107":1,"114":1,"121":1,"128":1,"134":1,"140":1}}],["01",{"0":{"6":1},"1":{"10":1,"15":1,"21":1,"28":1,"36":1,"45":1,"55":1,"64":1,"74":1},"2":{"1":1,"8":4}}],["02",{"0":{"11":1},"1":{"16":1,"22":1,"29":1,"37":1,"46":1,"56":1,"65":1,"75":1},"2":{"1":3}}],["03",{"0":{"17":1},"1":{"23":1,"30":1,"38":1,"47":1,"57":1,"66":1,"76":1,"85":1,"92":1,"99":1,"106":1,"113":1,"120":1,"127":1},"2":{"1":7,"4":4,"13":4}}],["00",{"2":{"1":31,"4":8,"13":8,"19":20,"26":96,"34":62}}],["0",{"2":{"1":40,"4":16,"13":8,"19":14,"26":104,"34":54,"100":2,"101":2,"102":2,"112":1,"133":6,"155":1}}],["09",{"2":{"1":8,"4":4,"43":1}}],["06",{"0":{"41":1},"1":{"50":1,"60":1,"69":1,"79":1,"88":1,"95":1,"102":1,"109":1,"116":1,"123":1,"130":1,"136":1,"142":1,"146":1},"2":{"1":2,"4":1,"8":1,"13":1,"19":5,"26":1,"34":1,"43":2}}],["64",{"2":{"1":4,"4":2,"8":2,"13":2,"19":2,"26":2,"34":2,"43":2}}],["696",{"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":1}}],["6",{"0":{"220":1},"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":1,"33":3,"34":1,"43":1,"53":1,"133":1,"194":1,"197":1}}],["2pc",{"0":{"272":1},"2":{"270":1}}],["2906",{"2":{"53":2}}],["28",{"2":{"34":2}}],["25",{"2":{"34":2}}],["24小时全天候运行",{"2":{"124":1}}],["240",{"2":{"19":1}}],["24",{"2":{"13":1}}],["23",{"0":{"55":1,"64":1},"2":{"13":1}}],["233551264",{"2":{"8":1}}],["233551972",{"2":{"8":1}}],["233550836",{"2":{"8":1}}],["233550984",{"2":{"8":1}}],["22",{"2":{"13":1}}],["2165205",{"2":{"43":4}}],["21",{"2":{"13":1}}],["20745900",{"2":{"8":4}}],["2019",{"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":1}}],["2",{"0":{"3":1,"9":1,"14":1,"20":2,"27":2,"35":3,"44":2,"54":2,"63":1,"73":1,"98":1,"105":1,"112":2,"119":1,"126":1,"149":1,"152":1,"155":2,"181":1,"205":1,"206":1,"207":1,"209":2,"212":1,"215":1,"232":1},"1":{"7":1,"12":1,"14":1,"18":1,"20":1,"25":1,"27":3,"33":1,"35":3,"42":1,"44":3,"52":1,"54":3,"62":1,"63":1,"72":1,"73":1,"82":1,"90":1,"97":1,"104":1,"105":1,"111":1,"112":1,"118":1,"119":1,"125":1,"126":1,"132":1,"138":1,"144":1,"148":1,"151":1,"152":1,"154":1,"155":1,"157":1,"160":1,"163":1,"166":1,"169":1,"172":1,"175":1,"178":1,"181":1,"184":1,"187":1,"190":1,"193":1,"196":1,"199":1,"201":1,"203":1,"205":1,"207":2,"209":2,"211":1,"213":1,"215":1,"217":1,"219":1,"221":1,"223":1,"225":1,"227":1,"229":1},"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":1,"34":3,"43":1,"53":1,"105":3,"133":2,"148":1,"152":1,"180":1,"194":1,"197":1,"229":1}}],["371434",{"2":{"43":3}}],["371435",{"2":{"43":1}}],["34",{"2":{"34":2}}],["30",{"2":{"19":2}}],["30596960",{"2":{"8":1}}],["30596252",{"2":{"8":1}}],["30597388",{"2":{"8":1}}],["30597240",{"2":{"8":1}}],["39",{"2":{"4":1}}],["32",{"2":{"1":4,"4":2,"8":2,"13":2,"19":2,"26":2,"34":2,"43":2}}],["3",{"0":{"44":1,"63":1,"84":1,"91":1,"98":1,"105":1,"112":1,"119":2,"126":1,"133":2,"158":1,"184":1,"208":1,"210":1,"211":1,"212":1,"213":1,"214":2,"215":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1,"233":1},"1":{"91":1,"98":1,"105":2,"112":2,"119":2,"126":2,"133":1,"210":1,"212":1,"213":1,"214":1,"215":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1},"2":{"1":3,"4":2,"8":2,"13":2,"19":2,"26":2,"34":2,"38":1,"40":2,"43":2,"46":1,"53":1,"105":5,"133":2,"180":1,"194":1,"197":1,"229":1}}],["12",{"2":{"53":1}}],["132",{"2":{"34":2}}],["13",{"2":{"34":6,"53":1}}],["1秒等于1000毫秒",{"2":{"26":1}}],["1978",{"2":{"163":1}}],["19",{"2":{"19":1,"26":3}}],["1992",{"2":{"15":1}}],["1991",{"2":{"15":1}}],["18",{"2":{"8":1,"19":1,"26":4,"53":1,"148":1}}],["11",{"2":{"8":4,"53":1}}],["17",{"2":{"1":1,"8":1,"19":1,"26":4,"43":4,"53":1}}],["16",{"2":{"1":1,"8":1,"19":1,"26":1,"34":4,"53":1}}],["1535",{"2":{"4":4}}],["15",{"2":{"1":1,"4":2,"8":1,"53":1}}],["14822388",{"2":{"8":4}}],["14",{"2":{"1":1,"34":2,"53":1,"188":1}}],["100000",{"2":{"43":1}}],["100",{"2":{"1":2}}],["10",{"2":{"1":2,"4":1,"8":5,"13":5,"19":7,"26":13,"34":9,"43":5,"53":1}}],["1",{"0":{"2":1,"5":1,"14":1,"27":1,"61":1,"91":1,"105":1,"145":1,"152":1,"178":1,"203":1,"204":1,"207":1,"210":1,"213":1,"231":1},"1":{"5":1,"9":1,"14":1,"20":1,"27":1,"35":1,"44":1,"54":1,"63":1,"70":1,"73":1,"80":1,"84":1,"89":1,"91":1,"96":1,"98":1,"103":1,"105":1,"110":1,"112":1,"117":1,"119":1,"124":1,"126":1,"131":1,"133":1,"137":1,"139":1,"143":1,"145":1,"147":1,"149":1,"150":1,"152":1,"153":1,"155":1,"156":1,"158":1,"159":1,"161":1,"162":1,"164":1,"165":1,"167":1,"168":1,"170":1,"171":1,"173":1,"174":1,"176":1,"177":1,"179":1,"180":1,"182":1,"183":1,"185":1,"186":1,"188":1,"189":1,"191":1,"192":1,"194":1,"195":1,"197":1,"198":1,"200":1,"202":1,"204":1,"206":1,"208":1,"210":1,"212":1,"214":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1,"228":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1},"2":{"1":3,"4":4,"5":1,"8":2,"13":2,"14":1,"19":2,"20":1,"26":6,"34":18,"43":6,"53":1,"91":1,"100":1,"101":1,"102":1,"105":2,"133":4,"145":1,"148":1,"152":1,"160":1,"180":1,"194":1,"197":1,"221":1,"229":1}}],["二叉查找树",{"2":{"225":1}}],["二叉查找树的有序特性",{"2":{"225":1}}],["二叉查找树是有缺点的",{"2":{"42":1}}],["二叉排序树",{"2":{"62":1,"148":1}}],["二叉搜索树容易退化成一条链",{"2":{"219":1}}],["二叉搜索树的极端情况",{"0":{"42":1}}],["二叉搜索树的查找流程",{"0":{"33":1}}],["二叉搜索树",{"0":{"12":1,"25":1},"1":{"18":1,"25":1,"33":1,"42":1},"2":{"18":1,"62":2,"148":1}}],["二是针对不同的产品提供不同的工厂",{"2":{"31":1}}],["二",{"0":{"1":1}}],["设置",{"2":{"259":1}}],["设置为红色",{"2":{"207":1,"213":1}}],["设置为红色了",{"2":{"203":1}}],["设置为黑色",{"2":{"207":1,"213":1}}],["设置为当且节点",{"2":{"203":1,"209":1}}],["设置为当前节点",{"2":{"203":1,"215":1}}],["设置好初始化参数和环境变量",{"2":{"100":1}}],["设置显示报告的结束时间",{"2":{"0":1}}],["设值注入是指通过",{"2":{"46":1}}],["设值",{"2":{"46":1}}],["设计原则名称",{"2":{"16":1}}],["设计模式有助于初学者更深入地理解面向对象思想",{"2":{"74":1}}],["设计模式使得设计方案更加灵活",{"2":{"74":1}}],["设计模式使人们可以更加简单",{"2":{"74":1}}],["设计模式融合了众多专家的经验",{"2":{"74":1}}],["设计模式简介",{"0":{"45":1},"1":{"55":1,"64":1}}],["设计模式一般有两种分类方式",{"2":{"36":1}}],["设计模式一般包含模式名称",{"2":{"28":1}}],["设计模式是在特定环境下为解决某一通用软件设计问题提供的一套定值的解决方案",{"2":{"28":1}}],["设计模式",{"2":{"28":1}}],["设计模式的使用将提高软件系统的开发效率和软件质量",{"2":{"74":1}}],["设计模式的优点",{"0":{"74":1}}],["设计模式的分类",{"0":{"36":1}}],["设计模式的定义",{"0":{"28":1}}],["设计模式的定义与分类",{"0":{"21":1},"1":{"28":1,"36":1}}],["设计模式的诞生与发展",{"0":{"10":1},"1":{"15":1,"21":1,"28":1,"36":1}}],["设计模式概述",{"0":{"6":1},"1":{"10":1,"15":1,"21":1,"28":1,"36":1,"45":1,"55":1,"64":1,"74":1}}],["设状态信息刷新的间隔时间",{"2":{"0":1}}],["终端设备活动情况",{"2":{"0":1}}],["输出结果如下",{"2":{"92":1,"93":1,"108":1,"109":1}}],["输出的段",{"2":{"34":1}}],["输出系统交换活动信息",{"2":{"0":1}}],["输出内存页面的统计信息",{"2":{"0":1}}],["输出内存和交换空间的统计信息",{"2":{"0":1}}],["输出每一个块设备的活动信息",{"2":{"0":1}}],["输出inode",{"2":{"0":1}}],["输出cpu使用情况的统计信息",{"2":{"0":1}}],["eg",{"2":{"270":1}}],["empty",{"2":{"112":1,"133":3}}],["executiongraph",{"0":{"195":1},"2":{"159":1,"195":2}}],["exactly",{"2":{"124":1,"262":1,"268":1}}],["exception",{"2":{"100":1,"101":1,"102":1}}],["extends",{"2":{"47":1,"68":1,"69":1,"102":3,"130":1,"190":1,"225":1}}],["extension",{"2":{"29":1}}],["each",{"2":{"75":1}}],["evitor",{"2":{"239":1}}],["eventtime",{"0":{"242":1},"2":{"242":2}}],["event",{"2":{"117":1,"124":1,"241":1}}],["every",{"2":{"22":1}}],["evgenii",{"2":{"52":1}}],["equalsignorecase",{"2":{"47":1,"85":3}}],["equalsingorecase",{"2":{"47":1}}],["echo",{"2":{"43":2}}],["etc",{"2":{"43":1}}],["etcp",{"2":{"34":2}}],["eth3",{"2":{"34":2}}],["eth2",{"2":{"34":2}}],["eth1",{"2":{"34":2}}],["eth0",{"2":{"34":2}}],["eicmp6和udp6",{"2":{"34":1}}],["eicmp",{"2":{"34":1}}],["eip6",{"2":{"34":1}}],["eip",{"2":{"34":2}}],["edev和sock三者的综合",{"2":{"34":1}}],["edev显示关于网络错误的统计数据",{"2":{"34":1}}],["edev",{"2":{"34":3}}],["end",{"0":{"270":2}}],["enums",{"2":{"228":1}}],["env",{"2":{"206":4}}],["environment",{"0":{"204":1}}],["entry",{"2":{"190":1,"225":1}}],["entities",{"2":{"29":1}}],["entirely",{"2":{"22":1}}],["enqueue",{"2":{"145":1}}],["ensurecapacity",{"2":{"133":2}}],["encapsulated",{"2":{"22":1}}],["erich",{"2":{"15":1}}],["efficient",{"2":{"15":1}}],["epoll",{"2":{"7":1}}],["else",{"2":{"47":1,"85":2,"112":1,"133":1}}],["element",{"2":{"5":1}}],["el6",{"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":1}}],["e",{"2":{"0":2,"100":2,"101":2,"102":2,"161":2}}],["full",{"2":{"239":1}}],["function",{"0":{"231":1,"232":1,"233":1,"239":1}}],["functions",{"2":{"37":1,"239":2}}],["filter",{"0":{"214":1}}],["filepath",{"2":{"102":2}}],["fileloggerfactory",{"2":{"77":1,"86":3,"100":1}}],["filelogger",{"2":{"77":1,"86":3}}],["files等",{"2":{"43":1}}],["files",{"2":{"43":2}}],["file查看",{"2":{"43":1}}],["file表示系统级别的能够打开的文件句柄的数量",{"2":{"43":1}}],["file表示将命令结果以二进制格式存放在文件中",{"2":{"0":1}}],["file",{"2":{"0":2,"43":10,"53":1,"100":2,"101":1,"102":2}}],["filename>",{"2":{"0":2}}],["fixedthreadpool",{"2":{"158":1}}],["fifo",{"2":{"145":1}}],["final",{"2":{"133":1,"190":3,"225":3}}],["first",{"2":{"91":1,"98":1,"126":1,"145":2}}],["flatmap",{"0":{"212":1}}],["flatmap等算子",{"2":{"198":1}}],["flag=1",{"2":{"155":1}}],["flag=0",{"2":{"155":1}}],["flag",{"2":{"155":1}}],["fliter",{"2":{"198":1}}],["flink状态一致性",{"0":{"267":1},"1":{"268":1,"269":1,"270":1,"271":1,"272":1,"273":1}}],["flink状态管理",{"0":{"254":1},"1":{"255":1,"256":1,"257":1,"258":1,"259":1}}],["flink检查点算法",{"0":{"265":1}}],["flink容错机制",{"0":{"260":1},"1":{"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1}}],["flink为每个key都维护一个状态实例",{"2":{"257":1}}],["flink为不同的环境和资源管理工机提供了不同的rm",{"2":{"165":1}}],["flink会进行状态管理",{"2":{"255":1}}],["flink处理迟到数据",{"2":{"251":1}}],["flink函数类都有其rich版本",{"2":{"233":1}}],["flink暴露了所有的udf函数的接口",{"2":{"231":1}}],["flink还具有一个类型提取系统",{"2":{"228":1}}],["flink使用类型信息的概念来表示数据类型",{"2":{"228":1}}],["flinkkafkaconsumer011",{"2":{"206":1}}],["flink流处理api",{"0":{"202":1},"1":{"204":1,"206":1,"208":1,"210":1,"212":1,"214":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1,"228":1,"230":1,"231":1,"232":1,"233":1,"234":1}}],["flink集群不会预先启动",{"2":{"177":1}}],["flink中的工作进程",{"2":{"162":1}}],["flink运行时组件",{"0":{"156":1},"1":{"159":1,"162":1,"165":1,"168":1,"171":1,"174":1,"177":1,"180":1,"183":1,"186":1,"189":1,"192":1,"195":1,"198":1,"200":1}}],["flink的检查点算法用到了一种称为分界线",{"2":{"264":1}}],["flink的时间",{"2":{"241":1}}],["flink的task和solt的关系",{"2":{"147":1}}],["flink的其它特点",{"0":{"124":1}}],["flink部署",{"0":{"137":1},"1":{"143":1,"147":1,"150":1}}],["flink具备数据模型是数据流",{"2":{"131":1}}],["flink主要特点",{"0":{"117":1}}],["flink",{"0":{"131":1,"235":1,"241":1,"273":1},"1":{"236":1,"237":1,"238":1,"239":1},"2":{"110":1,"241":1}}],["flink是标准的流执行模式",{"2":{"131":1}}],["flink是一个框架和分布式处理引擎",{"2":{"70":1}}],["flink是什么",{"0":{"70":1}}],["flink学习笔记",{"0":{"61":1},"1":{"70":1,"80":1,"89":1,"96":1,"103":1,"110":1,"117":1,"124":1,"131":1,"137":1,"143":1,"147":1,"150":1,"153":1,"156":1,"159":1,"162":1,"165":1,"168":1,"171":1,"174":1,"177":1,"180":1,"183":1,"186":1,"189":1,"192":1,"195":1,"198":1,"200":1,"202":1,"204":1,"206":1,"208":1,"210":1,"212":1,"214":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1,"228":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1}}],["flyweight",{"2":{"64":1}}],["front==rear",{"2":{"155":3}}],["front",{"2":{"145":1,"152":3,"155":1}}],["fromcollection",{"2":{"206":1}}],["from",{"2":{"50":1,"152":1}}],["friends",{"2":{"75":1}}],["frag",{"2":{"34":1}}],["false",{"2":{"112":2,"130":1}}],["factor",{"2":{"133":2}}],["factorymethod",{"2":{"38":1,"48":3,"100":2}}],["factory",{"2":{"23":3,"30":2,"31":4,"38":1,"39":2,"47":2,"48":6,"49":1,"64":2,"86":3,"100":3,"101":5,"114":3}}],["face",{"2":{"102":5}}],["favor",{"2":{"65":1}}],["façade",{"2":{"64":1}}],["familes",{"2":{"49":1}}],["fsstatebackend",{"2":{"259":1}}],["fs",{"2":{"43":3}}],["foo",{"0":{"83":1},"2":{"71":1,"81":1}}],["forname",{"2":{"100":2,"101":1,"102":1}}],["forced",{"2":{"56":1}}],["for",{"2":{"29":2,"31":1,"49":1,"52":1,"100":2,"112":1,"133":1,"190":1,"225":1}}],["four",{"2":{"15":1}}],["f",{"2":{"0":2,"1":1,"53":1,"203":1,"207":2,"209":2,"213":1,"215":2}}],["ontime",{"2":{"253":1}}],["one操作",{"2":{"200":1}}],["one",{"2":{"198":2}}],["once",{"2":{"124":1,"262":1,"268":3}}],["only",{"2":{"75":3}}],["out",{"2":{"85":9,"86":2,"91":1,"98":1,"100":1,"101":6,"102":5,"126":1,"133":4,"145":1}}],["override",{"2":{"85":3,"86":4,"101":12,"102":15,"107":3,"130":5}}],["over",{"2":{"65":1}}],["obj",{"2":{"100":4,"101":2,"102":2,"107":4}}],["objects",{"2":{"28":1,"37":1,"49":1,"65":1}}],["object",{"2":{"22":1,"31":1,"50":1,"100":6,"101":2,"102":2,"107":2}}],["observer",{"2":{"64":1}}],["other",{"2":{"53":1,"75":1}}],["o2",{"2":{"37":2}}],["o1",{"2":{"37":2}}],["oseg",{"2":{"34":1}}],["o越慢",{"2":{"26":1}}],["o请求占用的cpu百分比",{"2":{"26":1}}],["o的服务处理时间",{"2":{"26":1}}],["o的传输总数",{"2":{"26":1}}],["o操作的数据大小",{"2":{"26":1}}],["o和传递速率的统计信息",{"2":{"19":1}}],["o和传送速率的统计信息",{"2":{"0":1}}],["ocp",{"2":{"16":1,"29":1}}],["operator",{"2":{"255":1}}],["operationn",{"0":{"200":1}}],["open",{"2":{"16":1,"29":2,"43":3,"233":1}}],["options",{"2":{"0":3}}],["of",{"2":{"15":1,"16":1,"28":1,"37":1,"43":1,"49":1,"50":1,"52":1,"64":1,"65":1,"75":1}}],["org",{"2":{"100":1,"102":3}}],["organization",{"2":{"52":1}}],["or",{"2":{"15":1,"37":1,"49":1}}],["o瓶颈",{"2":{"1":1}}],["o表示以二进制的格式把结果存入到test",{"2":{"1":1}}],["o",{"2":{"0":3,"1":1,"5":3,"14":2,"20":2,"42":1,"53":1,"91":2,"133":1,"145":2,"166":1,"219":3,"221":1,"225":1}}],["nil",{"2":{"169":1,"205":2,"223":1,"225":4}}],["nice",{"2":{"1":3}}],["nl",{"2":{"100":2,"101":2,"102":2}}],["nodes",{"2":{"190":1,"225":1}}],["node",{"2":{"100":1,"101":1,"102":2,"190":4,"225":6}}],["nodelist",{"2":{"100":1,"101":1,"102":2}}],["not",{"2":{"46":2,"56":2}}],["needed",{"2":{"190":1,"225":1}}],["newcapacity",{"2":{"133":3}}],["newdocumentbuilder",{"2":{"100":1,"101":1,"102":1}}],["newinstance",{"2":{"100":2,"101":2,"102":2}}],["newinstence",{"2":{"100":1}}],["new",{"2":{"47":4,"48":2,"68":2,"69":3,"85":3,"86":3,"100":3,"101":7,"102":3,"107":3,"112":2,"123":2,"130":1,"133":5,"206":2,"246":2}}],["next",{"2":{"27":1,"44":1,"54":1,"190":4,"225":4}}],["number",{"2":{"43":1}}],["null",{"2":{"27":1,"35":1,"85":1,"100":1,"101":1,"102":1}}],["n控制进程级别能够打开的文件句柄的数量",{"2":{"43":1}}],["nr中看到第二列一直为0",{"2":{"43":1}}],["nr",{"2":{"43":7}}],["nfs统计活动的nfs客户端的信息",{"2":{"34":1}}],["nfsd统计nfs服务器的信息",{"2":{"34":1}}],["nfsd",{"2":{"34":1}}],["nfs",{"2":{"34":1}}],["n选项使用6个不同的开关",{"2":{"34":1}}],["name",{"2":{"28":1}}],["n",{"2":{"0":1,"5":3,"14":1,"20":1,"34":15,"42":1,"53":3,"91":1,"145":1,"160":1,"166":2,"185":1,"219":3,"221":1,"225":1,"229":2}}],["jm就可以向插槽分配任务来执行了",{"2":{"162":1}}],["jm会负责所有需要中央协调的操作",{"2":{"159":1}}],["jm会向资源管理器",{"2":{"159":1}}],["jm会把jobgraph转换成一个物理层面的数据流图",{"2":{"159":1}}],["jobmaster将需要执行的任务分发给taskmanager",{"2":{"177":1}}],["jobmaster向资源管理器请求资源",{"2":{"177":1}}],["jobmanager会向每个source任务发送一个带有新检查点id的消息",{"2":{"265":1}}],["jobmanager会先接收到要执行的应用程序",{"2":{"159":1}}],["jobmanager",{"0":{"159":1}}],["jobgraph",{"2":{"159":1,"195":2}}],["job",{"0":{"177":1},"2":{"147":1,"177":1}}],["john",{"2":{"15":1}}],["johnson",{"2":{"15":1}}],["java简单对象",{"2":{"228":1}}],["java和scala元组",{"2":{"228":1}}],["javax",{"2":{"100":1,"102":2}}],["java",{"2":{"66":1,"67":1,"87":1,"100":8,"101":1,"102":2,"133":1,"158":1}}],["java中",{"2":{"7":1}}],["jdk1",{"2":{"7":1}}],["j",{"2":{"0":1,"163":1,"185":8}}],["xxx",{"2":{"157":1}}],["xmlutil",{"2":{"100":6,"101":3,"102":3,"114":1,"123":2}}],["xml",{"2":{"92":1,"100":14,"101":3,"102":7}}],["x",{"2":{"53":1,"157":6}}],["x86",{"2":{"1":4,"4":2,"8":2,"13":2,"19":2,"26":2,"34":2,"43":2}}],["xall",{"2":{"0":1}}],["x3c",{"2":{"0":12,"100":6,"101":5,"102":5,"112":5,"133":2,"190":11,"225":11,"246":2}}],["|",{"2":{"0":10,"43":2}}],["illegalargumentexception",{"2":{"133":4}}],["i++",{"2":{"112":1,"133":1}}],["img",{"2":{"179":1}}],["import",{"2":{"100":3,"102":6}}],["implements",{"2":{"85":3,"86":4,"101":8,"107":1,"190":1,"225":1}}],["implement",{"2":{"48":1}}],["immediate",{"2":{"75":1}}],["io",{"2":{"100":1,"102":1}}],["iot",{"2":{"89":1}}],["io传送速率",{"2":{"53":1}}],["iowait过高表示存在i",{"2":{"1":1}}],["iowait和",{"2":{"1":1}}],["iowait",{"2":{"1":3}}],["item",{"2":{"100":1,"101":1,"102":1}}],["iterator",{"2":{"64":1}}],["its",{"2":{"50":1}}],["it",{"2":{"37":1}}],["if",{"2":{"34":1,"47":2,"85":3,"112":2,"130":1,"133":4}}],["iface",{"2":{"34":4}}],["icmp6",{"2":{"34":1}}],["icmp",{"2":{"34":1}}],["ip错误统计信息",{"2":{"34":1}}],["ip数据报统计信息",{"2":{"34":1}}],["ip6",{"2":{"34":1}}],["ip",{"2":{"34":2}}],["irp",{"2":{"16":1}}],["isbareheaded",{"2":{"130":7}}],["isxxx",{"2":{"130":1}}],["isempty",{"2":{"112":1,"133":3}}],["iseg",{"2":{"34":1}}],["isvalid",{"2":{"112":1}}],["isp",{"2":{"56":1}}],["is",{"2":{"15":1,"65":1,"133":3}}],["ingestiontime",{"2":{"242":1}}],["ingestion",{"2":{"241":1}}],["incremental",{"2":{"239":1}}],["initialcapacity",{"2":{"133":4}}],["inheritance",{"2":{"65":1}}],["information",{"2":{"52":1}}],["injection",{"2":{"46":1}}],["inode和sysctl",{"2":{"43":1}}],["inode",{"2":{"43":3,"53":1}}],["instantiation",{"2":{"31":1}}],["instantiate",{"2":{"31":1}}],["in",{"2":{"28":1,"43":2,"91":1,"98":1,"126":1,"145":1,"190":1,"225":1}}],["inversion",{"2":{"16":1,"46":1}}],["index",{"2":{"5":1}}],["int",{"2":{"112":1,"133":13,"190":2,"225":2}}],["interpreter",{"2":{"64":1}}],["interfaces",{"2":{"56":1}}],["interface",{"2":{"16":1,"31":1,"48":1,"49":1,"56":1,"68":1,"85":1,"86":2,"101":4,"107":1}}],["interval为采样间隔",{"2":{"0":1}}],["interval>",{"2":{"0":3}}],["int>",{"2":{"0":1}}],["idle过低表示cpu使用率比较严重",{"2":{"1":1}}],["idle",{"2":{"1":4}}],["id",{"2":{"0":1}}],["i",{"2":{"0":3,"26":2,"112":5,"133":2,"185":8}}],["yarn启动新的taskmanager容器",{"2":{"177":1}}],["yarn的资源管理器分片container资源",{"2":{"177":1}}],["yarn",{"0":{"174":1},"1":{"177":1}}],["yarn模式",{"0":{"147":1}}],["your",{"2":{"75":1}}],["y",{"2":{"0":2,"53":1,"157":10}}],["wm的延迟设置太久",{"2":{"247":1}}],["wm的设定",{"0":{"247":1},"1":{"248":1,"249":1,"250":1,"251":1,"253":1}}],["wm的引入",{"0":{"246":1}}],["wm的传递",{"0":{"245":1}}],["wm与数据的时间戳有关",{"2":{"244":1}}],["wm必须是单调递增的",{"2":{"244":1}}],["wm是一条特殊的数据记录",{"2":{"244":1}}],["wm特点",{"0":{"244":1}}],["web",{"2":{"237":1}}],["wal",{"0":{"271":1},"2":{"270":1}}],["watermark",{"0":{"243":1},"2":{"251":1,"252":1}}],["wartermark",{"0":{"240":1},"1":{"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1}}],["wangyq",{"2":{"100":1,"101":2,"102":3}}],["wait状态的连接数量",{"2":{"34":1}}],["w3c",{"2":{"100":1,"102":3}}],["windowsize",{"2":{"250":1}}],["windows",{"2":{"237":3}}],["window",{"0":{"235":1,"236":1,"237":1,"238":1,"239":1},"1":{"236":1,"237":1,"238":1,"239":1},"2":{"236":1,"237":2,"239":1}}],["will",{"2":{"43":1}}],["without",{"2":{"37":1,"49":1}}],["within",{"2":{"15":1}}],["which",{"2":{"31":1}}],["writelog",{"2":{"86":4,"100":1,"114":4}}],["wr",{"2":{"26":5}}],["wtps",{"2":{"19":2}}],["w",{"2":{"0":3,"13":3,"53":2}}],["val",{"2":{"190":3,"225":3}}],["value对",{"2":{"257":1}}],["value",{"2":{"43":1,"133":2,"225":1,"257":1}}],["volatile",{"2":{"190":2,"225":2}}],["void",{"2":{"47":4,"69":7,"85":5,"86":4,"100":2,"101":10,"102":26,"114":2,"123":10,"130":10,"133":2}}],["v>",{"2":{"190":11,"225":11}}],["vj",{"2":{"188":1}}],["version=",{"2":{"100":1,"101":1,"102":1}}],["velsky",{"2":{"52":1}}],["vs",{"0":{"73":1,"131":1}}],["vi",{"2":{"188":3}}],["visitor",{"2":{"64":1}}],["virtual",{"2":{"31":1}}],["vlissides",{"2":{"15":1}}],["vruntime",{"2":{"7":1}}],["v",{"2":{"0":3,"43":3,"53":1,"161":2,"190":2,"203":1,"225":2}}],["union",{"0":{"226":1},"2":{"256":1}}],["units",{"2":{"75":2}}],["unit",{"2":{"75":2}}],["unlink",{"2":{"190":1,"225":1}}],["ui",{"2":{"168":1}}],["upon",{"2":{"46":4,"56":1,"190":1,"225":1}}],["udpsck",{"2":{"34":1}}],["udp",{"2":{"34":1}}],["utils",{"2":{"102":2}}],["util",{"2":{"26":5,"158":1}}],["use",{"2":{"37":2,"56":1,"190":1,"225":1}}],["user",{"2":{"1":3}}],["usage",{"2":{"0":1}}],["uuid",{"2":{"0":1}}],["u",{"2":{"0":2,"1":5,"53":1}}],["t>",{"2":{"246":2}}],["tumbling",{"2":{"237":1}}],["tuple",{"2":{"228":1}}],["tm就会将一个或者多个插槽提供给jm调用",{"2":{"162":1}}],["tm会向rm注册他的插槽",{"2":{"162":1}}],["tm",{"2":{"159":1}}],["t2",{"2":{"157":4}}],["t1",{"2":{"157":4}}],["t3",{"2":{"157":4}}],["t4",{"2":{"157":4}}],["timerservice",{"2":{"253":1}}],["timestamp",{"2":{"250":2}}],["timeout",{"2":{"237":1}}],["timewindow",{"2":{"237":1,"238":1}}],["time",{"2":{"124":2,"241":4}}],["tf",{"2":{"101":3}}],["trigger",{"2":{"239":1}}],["transform",{"0":{"208":1},"1":{"210":1,"212":1,"214":1,"216":1,"218":1,"220":1,"222":1,"224":1,"226":1}}],["transformation和sink",{"2":{"192":1}}],["true",{"2":{"112":1,"130":3,"133":1}}],["try",{"2":{"100":1,"101":1,"102":1}}],["treenode",{"2":{"190":7,"225":10}}],["treebins",{"2":{"190":1,"225":1}}],["tree",{"2":{"42":1,"163":1,"190":1,"225":1}}],["treeset都使用红黑树作为底层数据结构",{"2":{"7":1}}],["treemap",{"2":{"7":1}}],["type",{"2":{"85":4,"102":7}}],["task",{"2":{"189":1}}],["taskmanager连接到对应的jobmanager为新的作业提供slots",{"2":{"177":1}}],["taskmanager启动之后",{"2":{"177":1}}],["taskmanager",{"0":{"162":1,"186":1}}],["tast之间进行数据流交互",{"2":{"180":1}}],["talk",{"2":{"75":2}}],["tablesd的状态信息",{"2":{"53":1}}],["textfield",{"2":{"101":8}}],["template",{"2":{"64":1}}],["test",{"2":{"1":2}}],["tty设备的活动状态",{"2":{"53":1}}],["tw",{"2":{"34":1}}],["txfifo",{"2":{"34":1}}],["txcarr",{"2":{"34":1}}],["txcmp",{"2":{"34":3}}],["txdrop",{"2":{"34":1}}],["txerr",{"2":{"34":1}}],["txkb",{"2":{"34":3}}],["txpck",{"2":{"34":3}}],["txt文件中",{"2":{"1":1}}],["txt",{"2":{"1":2}}],["tcp错误统计信息",{"2":{"34":1}}],["tcp统计信息",{"2":{"34":1}}],["tcp连接的统计",{"2":{"34":1}}],["tcp套接字中处于time",{"2":{"34":1}}],["tcpsck",{"2":{"34":1}}],["tcp",{"2":{"34":4}}],["throw",{"2":{"133":3}}],["threads",{"2":{"4":1}}],["this",{"2":{"69":2,"75":1,"102":5,"114":1,"123":5,"133":6,"190":1,"225":1}}],["they",{"2":{"56":1}}],["their",{"2":{"49":1}}],["the",{"2":{"22":1,"43":3,"50":2,"52":1,"75":1}}],["that",{"2":{"22":1,"28":1,"37":1,"43":1,"50":1,"56":1}}],["tps",{"2":{"19":2,"26":5}}],["towphasecommitsinkfunction接口可实现",{"2":{"272":1}}],["tochararray",{"2":{"112":1}}],["topelement",{"2":{"112":2}}],["top",{"2":{"91":1}}],["too",{"2":{"43":2,"133":1}}],["totsck",{"2":{"34":1}}],["to",{"0":{"270":1},"2":{"15":1,"28":1,"31":2,"37":2,"56":1,"75":3,"190":1,"198":1,"200":1,"225":1}}],["t",{"2":{"0":1,"37":3,"43":1,"75":1,"206":1}}],["scala样例类",{"2":{"228":1}}],["shuffle",{"2":{"198":1}}],["should",{"2":{"22":2,"29":1,"46":4,"56":1,"75":1}}],["symmetric",{"2":{"163":1}}],["sysctl",{"2":{"43":2}}],["sys",{"2":{"43":2}}],["system",{"2":{"1":3,"43":1,"85":9,"86":2,"100":1,"101":6,"102":5,"133":4}}],["sliding",{"2":{"237":1}}],["slot是静态的概念",{"2":{"189":1}}],["slot来控制tm能接收多少个task",{"2":{"186":1}}],["slots",{"0":{"189":1},"2":{"177":1}}],["slot",{"2":{"159":1,"162":1}}],["slf4j",{"2":{"67":1}}],["small",{"2":{"133":1}}],["skinfactory",{"2":{"101":6}}],["src",{"2":{"100":1,"101":1,"102":1}}],["srp",{"2":{"16":1,"22":1}}],["splitstream",{"2":{"222":2}}],["split",{"2":{"222":1}}],["split和select",{"0":{"222":1}}],["spark是批计算",{"2":{"131":1}}],["spark采用rdd模型",{"2":{"131":1}}],["spark",{"0":{"131":1}}],["springskinfactory",{"2":{"101":3}}],["springcombobox",{"2":{"101":3}}],["springtextfield",{"2":{"101":3}}],["springbutton",{"2":{"101":3}}],["spring",{"2":{"87":1,"101":4}}],["specifying",{"2":{"49":1}}],["savepoint",{"2":{"256":1,"266":1}}],["sax",{"2":{"100":1}}],["same",{"2":{"50":1}}],["sar工具将对系统当前的状态进行取样",{"2":{"0":1}}],["sar是一个非常全面的一个分析工具",{"2":{"0":1}}],["sar",{"0":{"0":1},"2":{"0":3,"1":5,"4":3,"8":3,"13":3,"19":3,"26":3,"34":9,"43":3,"53":18}}],["select",{"2":{"222":1}}],["sedgewick",{"2":{"163":1}}],["session",{"2":{"147":1,"237":2}}],["sex",{"2":{"102":5}}],["setstatebackend",{"2":{"259":1}}],["setsex",{"2":{"102":4,"130":1}}],["sethairstyle",{"2":{"102":4,"130":1}}],["setcostume",{"2":{"102":4,"130":1}}],["setface",{"2":{"102":4,"130":1}}],["settype",{"2":{"102":4,"130":1}}],["setter",{"2":{"46":2,"60":1}}],["setbuilder",{"2":{"69":1}}],["setpartc",{"2":{"69":1}}],["setpartb",{"2":{"69":1}}],["setparta",{"2":{"69":1}}],["setpartx",{"2":{"69":3}}],["segregation",{"2":{"56":1}}],["separate",{"2":{"50":1}}],["sec",{"2":{"26":10}}],["storage=new",{"2":{"133":1}}],["storage",{"2":{"133":7}}],["standalone模式",{"0":{"143":1}}],["stax",{"2":{"100":1}}],["stack2",{"2":{"105":3}}],["stack1",{"2":{"105":4}}],["stack",{"2":{"91":1,"112":8,"133":3}}],["state",{"0":{"258":1},"1":{"259":1},"2":{"64":1,"255":2,"256":3,"257":5}}],["static",{"2":{"30":2,"47":2,"85":2,"86":1,"100":3,"101":2,"102":2,"114":1,"123":3,"133":1,"190":2,"225":2}}],["stream的分区会发生改变",{"2":{"198":1}}],["streamgraph",{"2":{"195":2}}],["stream",{"2":{"131":1}}],["streaming",{"0":{"131":1},"2":{"100":1}}],["strangers",{"2":{"75":1}}],["strategy",{"2":{"64":1}}],["string",{"2":{"47":2,"69":3,"85":2,"86":1,"100":5,"101":2,"102":20,"107":2,"112":1,"114":1,"206":1}}],["structural",{"2":{"36":1,"64":1}}],["steal",{"2":{"1":3}}],["source端",{"2":{"270":1}}],["source任务就会向jobmanager确认检查点完成",{"2":{"265":1}}],["source",{"0":{"206":1},"2":{"192":1,"273":1}}],["so",{"2":{"43":1,"50":1,"53":1}}],["sock的使用情况",{"2":{"53":1}}],["sock显示套接字信息",{"2":{"34":1}}],["sock6",{"2":{"34":1}}],["sock",{"2":{"34":4,"53":1}}],["software",{"2":{"29":1}}],["solve",{"2":{"28":1}}],["solution",{"2":{"15":1,"28":1}}],["svctm",{"2":{"26":5}}],["sideoutputlatedata",{"2":{"239":1}}],["sink任务都会启动一个事务",{"2":{"272":1}}],["sink任务向jobmanager确认状态保存到checkpoint完毕",{"2":{"265":1}}],["sink端",{"2":{"270":1}}],["sink",{"0":{"234":1},"2":{"273":1}}],["singleton",{"2":{"23":1,"64":1}}],["single",{"2":{"16":1,"22":2}}],["size",{"2":{"133":3}}],["simplename",{"2":{"100":2}}],["simple",{"2":{"23":1,"30":1,"100":1}}],["super",{"2":{"190":1,"225":1}}],["subtask",{"2":{"183":1}}],["subsitution",{"2":{"37":1}}],["substitution",{"2":{"16":1}}],["subclasses",{"2":{"31":2}}],["successful",{"2":{"15":1}}],["sum任务会等待所有输入分区的barrier到达",{"2":{"265":1}}],["summerskinfactory",{"2":{"101":2}}],["summercombobox",{"2":{"101":3}}],["summertextfield",{"2":{"101":3}}],["summerbutton",{"2":{"101":3}}],["summer",{"2":{"87":1,"101":4}}],["sum",{"2":{"0":1,"218":1}}],["swap交换的统计信息",{"2":{"53":1}}],["swap",{"2":{"13":2}}],["sz",{"2":{"4":4,"26":10}}],["ss>",{"2":{"0":2}}],["s",{"2":{"0":2,"13":4,"19":4,"26":10,"34":31,"37":2,"112":2}}],["rocksdbstatebackend",{"2":{"259":1}}],["robert",{"2":{"163":1}}],["root",{"2":{"0":1,"1":3,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":1,"62":3,"97":3,"111":2,"148":4,"172":1,"181":2,"184":2}}],["run",{"2":{"206":1}}],["runq",{"2":{"4":2}}],["rudolf",{"2":{"163":1}}],["rm会将有空闲插槽的tm分配给jm",{"2":{"165":1}}],["rm",{"2":{"159":1}}],["richfilterfunction",{"2":{"233":1}}],["richflatmapfunction",{"2":{"233":1}}],["richmapfunction",{"2":{"233":1}}],["rich",{"0":{"233":1}}],["richard",{"2":{"15":1}}],["right",{"2":{"157":3,"190":1,"225":2}}],["rl型失衡",{"2":{"144":2}}],["rl型失衡怎么",{"2":{"144":1}}],["rl进行次序颠倒",{"2":{"132":1}}],["rl",{"0":{"138":1,"215":1},"1":{"144":1},"2":{"90":1,"132":1,"144":1,"151":1,"215":1}}],["rr型失衡怎么",{"2":{"118":1}}],["rr",{"0":{"111":1,"213":1},"1":{"118":1},"2":{"90":1,"118":1,"151":1,"213":1,"215":2}}],["rbtree",{"0":{"163":1},"1":{"166":1,"169":1,"172":1}}],["rbt",{"2":{"42":2,"160":3}}],["rawsck",{"2":{"34":1}}],["ralph",{"2":{"15":1}}],["rxfifo",{"2":{"34":1}}],["rxfram",{"2":{"34":1}}],["rxdrop",{"2":{"34":1}}],["rxerr",{"2":{"34":1}}],["rxmcst",{"2":{"34":3}}],["rxcmp",{"2":{"34":3}}],["rxkb",{"2":{"34":3}}],["rxpck",{"2":{"34":3}}],["rd",{"2":{"26":5}}],["rtps",{"2":{"19":2}}],["readtextfile",{"2":{"206":1}}],["rear+1",{"2":{"155":1}}],["rear",{"2":{"145":1,"152":5,"155":3}}],["resourcemanager",{"0":{"165":1}}],["responsibility",{"2":{"16":1,"22":3,"64":1}}],["rejectedexecutionexception",{"2":{"158":1}}],["reflection",{"2":{"100":1}}],["references",{"2":{"37":1}}],["representations",{"2":{"50":1}}],["representation",{"2":{"50":1}}],["related",{"2":{"49":1,"75":1}}],["return",{"2":{"47":1,"48":1,"68":2,"69":2,"85":1,"86":2,"100":3,"101":8,"102":9,"107":3,"112":2,"123":2,"130":4,"133":4}}],["reducing",{"2":{"257":1}}],["reducefunction",{"2":{"239":1}}],["reduce",{"0":{"220":1}}],["redistribution过程就类似于spark中的shuffle",{"2":{"198":1}}],["redistribution",{"2":{"198":1}}],["red",{"2":{"42":1,"190":2,"225":3}}],["reuse",{"2":{"16":2,"65":3}}],["reusability",{"2":{"16":1}}],["recurring",{"2":{"15":1}}],["r",{"2":{"0":4,"8":3,"53":2}}],["queuesize=",{"2":{"155":1}}],["quot",{"2":{"43":4,"112":10}}],["q",{"2":{"0":2,"4":3,"53":1}}],["per",{"0":{"177":1}}],["peek",{"2":{"133":3}}],["put",{"2":{"112":3,"225":1}}],["push",{"2":{"91":2,"112":1,"133":9}}],["public",{"2":{"47":9,"48":4,"68":6,"69":14,"85":15,"86":14,"100":5,"101":34,"102":42,"107":8,"112":1,"114":5,"123":14,"130":17,"133":4}}],["pie",{"2":{"85":1}}],["piechart",{"2":{"66":1,"76":1,"85":4}}],["pivot",{"2":{"82":1,"97":2,"111":1,"148":1,"181":3,"184":3}}],["pty",{"2":{"43":2}}],["pojos",{"2":{"228":1}}],["pop",{"2":{"91":2,"112":1,"133":4}}],["pointers",{"2":{"37":1}}],["polymorphic",{"2":{"31":1}}],["p显示的名称更直接",{"2":{"26":1}}],["pre",{"2":{"147":1}}],["prev",{"2":{"44":1,"54":1,"190":1,"225":1}}],["printstacktrace",{"2":{"100":1,"101":1,"102":1}}],["println",{"2":{"85":9,"86":2,"100":1,"101":6,"102":5,"133":4}}],["principle",{"2":{"16":6,"22":1,"29":1,"37":1,"46":1,"56":1,"65":2,"75":1}}],["private属性必须有getter和setter",{"2":{"228":1}}],["private",{"2":{"69":4,"102":5,"133":9}}],["protected",{"2":{"69":1,"102":1,"123":2,"130":1}}],["prototype",{"2":{"23":1,"64":1}}],["proxy",{"2":{"64":1}}],["provide",{"2":{"49":1}}],["processelement",{"2":{"253":1}}],["processes",{"2":{"4":1}}],["processallwindowfunction",{"2":{"252":1}}],["processjoinfunction",{"2":{"252":1}}],["processfunction",{"0":{"252":1},"1":{"253":1},"2":{"252":1}}],["processwindowfunction",{"2":{"239":1,"252":1}}],["processingtime",{"2":{"242":1}}],["processing",{"2":{"124":1,"241":2}}],["process",{"2":{"50":1}}],["proc",{"2":{"43":2}}],["product",{"2":{"38":2,"39":1,"47":13,"48":5,"60":1,"69":13}}],["problem",{"2":{"15":1,"28":2}}],["package",{"2":{"102":1}}],["parent",{"2":{"190":4,"225":5}}],["parallelism",{"0":{"183":1}}],["parse",{"2":{"100":1,"101":1,"102":1}}],["parsers",{"2":{"100":1,"102":2}}],["partc的getter方法和setter方法省略",{"2":{"69":1}}],["partc",{"2":{"69":1}}],["partb的getter方法和setter方法省略",{"2":{"69":1}}],["partb",{"2":{"69":1}}],["parta的getter方法和setter方法省略",{"2":{"69":1}}],["parta",{"2":{"69":1}}],["particular",{"2":{"28":1}}],["passive",{"2":{"34":1}}],["patterns",{"2":{"28":1,"64":3}}],["pattern",{"2":{"15":2,"23":7,"28":2,"30":1,"31":4,"49":1,"50":1,"64":23,"100":1,"101":1,"102":1}}],["path",{"2":{"0":1}}],["page",{"2":{"13":2}}],["pswpott",{"2":{"13":1}}],["pswpout",{"2":{"13":1}}],["pswpin",{"2":{"13":2}}],["plist",{"2":{"4":2}}],["pm",{"2":{"1":8,"4":4,"8":4,"13":4,"19":4,"26":12,"34":6,"43":4}}],["p",{"2":{"0":3,"26":1,"37":2,"43":1,"53":1,"172":1,"203":6,"207":1,"213":2}}],["minby",{"2":{"218":1}}],["min",{"2":{"218":1}}],["micro",{"2":{"131":1}}],["mysource实现sourcefunction",{"2":{"206":1}}],["mysource",{"2":{"206":1}}],["mystack",{"2":{"133":19}}],["maps",{"2":{"228":1}}],["mappings",{"2":{"112":6}}],["map",{"0":{"210":1},"2":{"112":1,"190":1,"198":1,"225":1,"257":1}}],["main",{"2":{"47":1,"85":1,"86":1,"100":3,"101":2,"102":2,"114":1}}],["maintainability",{"2":{"16":1}}],["manager",{"2":{"177":1}}],["man",{"2":{"43":1}}],["many",{"2":{"43":3}}],["maxby",{"2":{"218":1}}],["max一致",{"2":{"43":1}}],["max=65535",{"2":{"43":1}}],["maximum",{"2":{"43":1}}],["max中指定了系统范围内所有进程可打开的文件句柄的数量限制",{"2":{"43":1}}],["max",{"2":{"43":4,"160":1,"218":1}}],["must",{"2":{"37":1}}],["most",{"2":{"268":1}}],["model",{"2":{"100":1}}],["modules",{"2":{"46":2}}],["modification",{"2":{"29":1}}],["more",{"2":{"1":1}}],["mesos",{"2":{"165":1}}],["mechanism",{"2":{"65":1}}],["memorystatebackend",{"2":{"259":1}}],["memento",{"2":{"64":1}}],["memused",{"2":{"8":2}}],["mediator",{"2":{"64":1}}],["methoddiff",{"2":{"47":3}}],["methodsame",{"2":{"47":2}}],["method",{"2":{"23":1,"30":1,"31":2,"39":1,"64":2,"130":1}}],["mm",{"2":{"0":2}}],["m",{"2":{"0":1,"52":1}}],["hook",{"2":{"130":1}}],["histogram",{"2":{"85":2}}],["histogramchart",{"2":{"66":1,"76":1,"85":4}}],["high",{"2":{"46":1}}],["herobuilder",{"2":{"102":2}}],["head",{"2":{"27":1,"54":2}}],["helm",{"2":{"15":1}}],["help",{"2":{"0":1}}],["help查看一下先",{"2":{"0":1}}],["hairstyle",{"2":{"102":5}}],["have",{"2":{"75":1}}],["hava",{"2":{"22":1}}],["hash",{"2":{"190":3,"225":3}}],["hashmap",{"2":{"7":1,"112":2,"190":1,"225":1,"270":1}}],["has",{"2":{"65":1}}],["handles",{"2":{"43":1}}],["hh",{"2":{"0":2}}],["h",{"2":{"0":1}}],["driven",{"2":{"117":1}}],["dfactory",{"2":{"100":2,"101":2,"102":2}}],["datestream",{"2":{"271":1}}],["datastrean",{"2":{"222":1}}],["datastream",{"2":{"216":1,"220":1,"222":1,"224":3,"226":3,"246":2}}],["dataflow类似于任意的有向无环图",{"2":{"192":1}}],["dataflow",{"0":{"192":1},"2":{"159":1}}],["databaseloggerfactory",{"2":{"77":1,"86":2,"107":2}}],["databaselogger",{"2":{"77":1,"86":3,"107":3}}],["dag",{"2":{"192":1}}],["dao",{"2":{"22":1}}],["doc",{"2":{"100":3,"101":3,"102":3}}],["documentbuilder",{"2":{"100":1,"101":1,"102":2}}],["documentbuilderfactory",{"2":{"100":2,"101":2,"102":3}}],["document",{"2":{"100":2,"101":1,"102":2}}],["dom",{"2":{"100":3,"102":4}}],["don",{"2":{"75":1}}],["do",{"2":{"56":1}}],["dispatcher在架构中可能并不是必须的",{"2":{"168":1}}],["dispatcher也会启动一个web",{"2":{"168":1}}],["dispacher",{"0":{"168":1}}],["display",{"2":{"85":5,"101":12}}],["director",{"0":{"123":1},"2":{"60":1,"69":8,"116":3,"123":3,"130":1}}],["different",{"2":{"50":1}}],["di",{"2":{"46":1}}],["dip",{"2":{"16":1,"46":1}}],["deletion",{"2":{"190":1,"225":1}}],["dequeue",{"2":{"145":1}}],["demo",{"0":{"71":1}}],["demeter",{"2":{"16":1,"75":1}}],["decorator",{"2":{"64":1}}],["decide",{"2":{"31":1}}],["details",{"2":{"46":2}}],["dependent",{"2":{"49":1}}],["dependence",{"2":{"16":1,"46":2}}],["depend",{"2":{"46":4,"56":1}}],["denotes",{"2":{"43":1}}],["dentunusd",{"2":{"43":2}}],["derived",{"2":{"37":1}}],["defer",{"2":{"31":1}}],["define",{"2":{"31":1}}],["descriptions",{"2":{"28":1}}],["design",{"2":{"28":3,"100":1,"101":1,"102":1}}],["devilbuilder",{"2":{"102":2,"130":2}}],["dev显示网络接口信息",{"2":{"34":1}}],["dev253",{"2":{"26":8}}],["dev8",{"2":{"26":4}}],["dev",{"2":{"26":5,"34":4,"53":1}}],["d",{"2":{"0":2,"26":3,"53":1}}],["binary",{"2":{"163":1}}],["boundedoutofordernesstimestampextractor",{"2":{"246":1}}],["boolean",{"2":{"112":1,"130":3,"133":1,"190":1,"225":1}}],["both",{"2":{"46":1}}],["bt",{"2":{"101":3}}],["b1",{"2":{"69":1}}],["broadcast",{"2":{"256":1}}],["broadcastprocessfunction",{"2":{"252":1}}],["broadcast和rebalance",{"2":{"198":1}}],["bridge",{"2":{"64":1}}],["bread",{"2":{"19":2}}],["black",{"2":{"42":1,"190":1,"225":1}}],["backends",{"0":{"258":1},"1":{"259":1}}],["bayer",{"2":{"163":1}}],["batching",{"2":{"131":1}}],["barrier向下游传递",{"2":{"265":1}}],["barrier",{"0":{"264":1},"2":{"264":1}}],["bareheaded",{"2":{"130":1}}],["bar",{"0":{"81":1},"2":{"71":1,"83":1}}],["barbara",{"2":{"37":1}}],["bash",{"2":{"43":1}}],["base",{"2":{"37":1}}],["buildhairstyle",{"2":{"102":5,"123":4,"130":5}}],["buildcostume",{"2":{"102":5,"123":4,"130":3}}],["buildface",{"2":{"102":5,"123":4,"130":3}}],["buildsex",{"2":{"102":5,"123":4,"130":3}}],["buildtype",{"2":{"102":5,"123":4,"130":3}}],["buildpartc",{"2":{"69":3}}],["buildpartb",{"2":{"69":3}}],["buildparta",{"2":{"69":3}}],["buildpartx",{"2":{"60":1,"69":5,"116":1,"123":3,"130":3}}],["builder",{"2":{"23":1,"50":1,"60":3,"64":1,"69":21,"100":2,"101":2,"102":4,"116":1,"123":3}}],["button",{"2":{"101":8}}],["but",{"2":{"29":1,"31":1}}],["by",{"2":{"22":1}}],["bean",{"2":{"100":2}}],["behavioral",{"2":{"36":1,"64":1}}],["be",{"2":{"22":1,"29":1,"37":1,"56":1}}],["bwrtn",{"2":{"19":2}}],["bst",{"0":{"12":1,"25":1},"1":{"18":1,"25":1,"33":1,"42":1},"2":{"18":1,"25":1,"42":2,"62":2,"225":1}}],["b",{"2":{"0":4,"19":3,"47":1,"53":2,"163":1,"176":7}}],["at",{"2":{"268":2}}],["amp",{"2":{"257":1}}],["aggregating",{"2":{"257":1}}],["aggregation",{"2":{"239":1}}],["aggregatefunction",{"2":{"239":1}}],["aggregate",{"2":{"65":1}}],["ac",{"2":{"102":2}}],["actorcontroller",{"2":{"102":4,"123":1,"130":2}}],["actorbuilder",{"2":{"102":8,"123":9,"130":5}}],["actor",{"2":{"102":35,"123":16,"130":15}}],["active",{"2":{"34":1}}],["api提供的一个函数类的接口",{"2":{"233":1}}],["api",{"0":{"238":1,"252":2},"1":{"253":2},"2":{"100":2,"122":1,"239":1,"271":1}}],["apache",{"2":{"70":1}}],["a1",{"2":{"69":1}}],["ascendingtimestampextractor",{"2":{"246":1}}],["assigntimestampsandwatermarks",{"2":{"246":2}}],["as",{"2":{"65":1}}],["addsource",{"2":{"206":2}}],["adapter",{"2":{"64":1}}],["adelson",{"2":{"52":1}}],["a查看到的值",{"2":{"43":1}}],["ab",{"2":{"102":10,"123":12,"130":8}}],["about",{"2":{"75":1}}],["able",{"2":{"37":1}}],["abstractproductb",{"2":{"68":2}}],["abstractproducta",{"2":{"68":2}}],["abstractproduct",{"2":{"59":1}}],["abstractfactory",{"2":{"59":1,"68":2,"101":2}}],["abstractions",{"2":{"46":3}}],["abstract",{"2":{"23":1,"47":2,"49":1,"64":1,"69":4,"102":6,"114":2,"123":12,"130":6}}],["anglebuilder",{"2":{"102":3}}],["an",{"2":{"31":2,"49":1,"52":1}}],["and",{"2":{"22":1,"28":1,"53":1}}],["await",{"2":{"26":5}}],["av",{"2":{"148":1}}],["avl树的问题",{"0":{"160":1}}],["avl树的删除",{"0":{"151":1}}],["avl树本质上还是一棵二叉搜索树",{"2":{"62":1}}],["avl",{"0":{"52":1,"62":1,"72":1,"82":1,"90":1,"148":1,"229":1},"1":{"62":1,"72":1,"82":1,"97":1,"104":1,"111":1,"118":1,"125":1,"132":1,"138":1,"144":1,"148":1,"151":1},"2":{"42":4,"52":3,"62":7,"72":3,"82":3,"90":2,"97":1,"148":2,"163":1,"166":3,"169":2,"172":1,"184":1,"219":1,"221":3,"229":8}}],["avgqu",{"2":{"26":5}}],["avgrq",{"2":{"26":5}}],["average",{"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":4,"34":6,"43":1}}],["algorithm",{"2":{"52":1}}],["alexander",{"2":{"15":1}}],["allowedlateness",{"2":{"239":1}}],["allocate",{"2":{"43":1}}],["all显示所有5个开关",{"2":{"34":1}}],["all",{"2":{"0":4,"1":8,"53":2}}],["args",{"2":{"47":1,"85":1,"86":1,"100":2,"101":1,"102":1,"107":3,"114":1}}],["arg",{"2":{"47":3}}],["arrays",{"2":{"133":1,"228":1}}],["array",{"2":{"5":1}}],["are",{"2":{"0":1,"28":2}}],["a",{"2":{"0":3,"15":4,"22":1,"28":2,"31":1,"43":2,"47":2,"50":1,"65":3,"176":7,"185":3}}],["~",{"2":{"0":1,"1":3,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":1}}],["l二叉树的要求",{"2":{"148":1}}],["lr红色情况",{"2":{"209":1}}],["lr型失衡",{"2":{"132":2}}],["lr",{"0":{"125":1,"209":1},"1":{"132":1},"2":{"90":1,"132":2,"144":2,"151":1,"209":1}}],["ll型失衡",{"2":{"207":1}}],["ll",{"0":{"97":1,"207":1},"1":{"104":1},"2":{"90":1,"104":2,"151":1,"205":1,"207":1,"209":2}}],["lkp",{"2":{"75":1}}],["log",{"2":{"166":1,"219":2,"221":1,"225":1,"229":2}}],["logn",{"2":{"160":1}}],["logical",{"2":{"159":1}}],["logstash",{"2":{"67":1}}],["log4j",{"2":{"67":1}}],["loggerfactory",{"2":{"77":1,"86":5,"100":3,"107":3,"114":3}}],["logger",{"2":{"67":1,"77":1,"86":17,"100":5,"107":15,"114":4}}],["low",{"2":{"46":1}}],["lo",{"2":{"34":2}}],["lod",{"2":{"16":1,"75":1}}],["lt",{"2":{"33":1,"160":1,"206":2}}],["lamport算法的分布式快照",{"2":{"263":1}}],["lambda",{"0":{"232":1}}],["lambda架构",{"2":{"110":1}}],["lang",{"2":{"100":1,"133":1}}],["landis",{"2":{"52":1}}],["last",{"2":{"91":1,"98":1,"126":1}}],["law",{"2":{"16":1,"75":1}}],["label",{"2":{"0":1}}],["lsp",{"2":{"16":1,"37":1}}],["list",{"2":{"256":2,"257":1}}],["lists",{"2":{"228":1}}],["liskov",{"2":{"16":1,"37":2}}],["lifo",{"2":{"91":1,"98":1,"126":1}}],["limited",{"2":{"75":1}}],["links",{"2":{"190":1,"225":1}}],["linkedblockingqueue",{"2":{"158":1}}],["linkedlist",{"2":{"14":1}}],["line",{"2":{"85":1}}],["linechart",{"2":{"66":1,"76":1,"85":4}}],["linux底层的",{"2":{"7":1}}],["linux",{"0":{"0":1},"2":{"1":2,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":2,"158":1}}],["ldavg",{"2":{"4":6}}],["leo",{"2":{"163":1}}],["left",{"2":{"157":3,"190":1,"225":2}}],["length",{"2":{"112":1}}],["leetcode",{"2":{"112":1}}],["least",{"2":{"75":1,"268":1}}],["level",{"2":{"43":1,"46":2}}],["lets",{"2":{"31":1}}],["let",{"2":{"31":1}}],["less等查看",{"2":{"1":1}}],["legacy",{"2":{"0":1}}],["lgh",{"2":{"0":1,"1":5,"4":2,"8":2,"13":2,"19":2,"26":2,"34":2,"43":2}}],["话不多说",{"2":{"0":1}}],["ctx",{"2":{"253":1}}],["cb",{"2":{"101":3}}],["cname",{"2":{"100":2,"101":2,"102":2}}],["cilent",{"2":{"86":1}}],["c1",{"2":{"69":1}}],["checkpiont",{"2":{"270":1}}],["checkpoint",{"0":{"264":1},"2":{"269":1,"273":1}}],["checkpoints",{"0":{"261":1},"2":{"258":1}}],["chars",{"2":{"112":5}}],["char",{"2":{"112":2}}],["character>",{"2":{"112":4}}],["character",{"2":{"112":2}}],["chartfactory",{"2":{"76":1,"85":3,"92":1}}],["chart",{"2":{"76":1,"85":16,"92":1}}],["chains",{"0":{"200":1}}],["chain",{"2":{"64":1}}],["christopher",{"2":{"15":1}}],["capacity",{"2":{"133":7}}],["carp",{"2":{"65":1}}],["cancel",{"2":{"206":1}}],["can",{"2":{"43":1,"50":1}}],["catch",{"2":{"100":1,"101":1,"102":1}}],["cat",{"2":{"43":1}}],["current",{"2":{"75":1}}],["customized",{"2":{"28":1}}],["cup等等",{"0":{"0":1}}],["createremoteenvironment",{"2":{"204":1}}],["createlocalenvironment",{"2":{"204":1}}],["createlogger",{"2":{"86":4,"100":2,"107":6,"114":2}}],["createactor",{"2":{"102":2,"130":2}}],["createcombobox",{"2":{"101":4}}],["createtextfield",{"2":{"101":4}}],["createbutton",{"2":{"101":4}}],["createproductb",{"2":{"68":2}}],["createproducta",{"2":{"68":2}}],["create",{"2":{"50":1}}],["creating",{"2":{"31":1,"49":1}}],["creational",{"2":{"23":1,"36":1,"64":1}}],["crp",{"2":{"16":1,"65":1}}],["cluster模式",{"2":{"147":2}}],["client",{"2":{"47":1,"56":1,"85":2,"86":1,"100":1,"101":2,"102":2,"114":1}}],["classnode",{"2":{"100":2,"101":2,"102":2}}],["classname",{"2":{"100":1,"101":1,"102":1}}],["classname>com",{"2":{"101":1,"102":1}}],["classname>",{"2":{"100":1,"101":1,"102":1}}],["classname>designpatterns",{"2":{"100":1}}],["classes",{"0":{"231":1},"2":{"28":1,"37":2,"49":1}}],["class",{"2":{"22":1,"31":2,"47":4,"48":1,"68":1,"69":4,"85":5,"86":5,"100":6,"101":12,"102":10,"107":1,"114":2,"123":2,"130":3,"133":1,"190":2,"225":2}}],["closely",{"2":{"75":1}}],["closed",{"2":{"29":1}}],["close",{"2":{"16":1,"29":1,"233":1}}],["coprocessfunction",{"2":{"252":1}}],["copyof",{"2":{"133":2}}],["coflatmap",{"2":{"224":1}}],["costume",{"2":{"102":5}}],["core文件大小等",{"2":{"43":1}}],["collisions",{"2":{"34":1}}],["coll",{"2":{"34":1}}],["connectedstreams",{"2":{"224":2}}],["connect",{"2":{"224":1}}],["connect和comap",{"0":{"224":1}}],["concurrent",{"2":{"158":1}}],["concreateproductb",{"2":{"47":1}}],["concreateproducta",{"2":{"47":1}}],["concretebuilder1",{"2":{"69":3}}],["concretebuilder",{"2":{"60":1,"69":2}}],["concrete",{"2":{"49":1}}],["concretefactory1",{"2":{"68":1}}],["concretefactory",{"2":{"39":1,"48":3,"59":1}}],["concreteproductb1",{"2":{"68":1}}],["concreteproducta1",{"2":{"68":1}}],["concreteproduct",{"2":{"38":1,"39":1,"47":1,"48":1,"59":1}}],["containskey",{"2":{"112":1}}],["context",{"2":{"15":1,"28":1}}],["config>",{"2":{"100":2,"101":2,"102":2}}],["config",{"2":{"100":3,"101":2,"102":2}}],["conf",{"2":{"43":1}}],["conf里面定义的和内核相关的值",{"2":{"43":1}}],["construct",{"2":{"60":1,"69":3,"102":2,"123":11,"130":1}}],["construction",{"2":{"50":2}}],["constructor",{"2":{"31":1}}],["consequences",{"2":{"28":1}}],["comap",{"2":{"224":1}}],["combobox",{"2":{"101":8}}],["com",{"2":{"100":1,"101":1,"102":2}}],["composition",{"2":{"65":2}}],["composite",{"2":{"16":1,"64":1,"65":1}}],["complex",{"2":{"50":1}}],["command",{"2":{"64":1}}],["communicating",{"2":{"28":1}}],["commit",{"2":{"8":2}}],["countwindow",{"2":{"237":1,"238":1}}],["count++",{"2":{"133":1}}],["count",{"2":{"133":11}}],["count为采样次数",{"2":{"0":1}}],["count>",{"2":{"0":2}}],["cfs",{"2":{"7":1}}],["cpu资源不隔离",{"2":{"189":1}}],["cpu的使用情况和iowait信息",{"2":{"53":1}}],["cpu和iowait统计状态",{"2":{"53":1}}],["cpu等待io的百分比",{"2":{"1":1}}],["cpu",{"2":{"1":4,"4":1,"8":1,"13":1,"19":1,"26":1,"34":1,"43":1,"73":1}}],["cpu>",{"2":{"0":1}}],["cpu相关使用情况",{"2":{"0":1}}],["c",{"2":{"0":1,"53":1,"100":4,"101":2,"102":2}}],["历史资源查看",{"0":{"0":1}}]],"serializationVersion":2}';export{t as default};
